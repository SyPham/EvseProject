{"version":3,"names":["PigfarmCoreService","http","base","this","recordSource","BehaviorSubject","currentRecordEarTag","asObservable","recordLabelSource","currentRecordLabel","prototype","changeRecordEarTag","farm","next","changLable","value","getBreedingByFarmGuid","farmGuid","get","getMakeOrderByFarmGuid","getMakeOrderByFarmGuidAndPigType","pigType","removeRecord2Pig","model","post","pipe","catchError","handleError","addRecord2Pig","getPensByFarmGuidOrRoomGuid","roomGuid","getByFarmGuid","getRoomsByFarmGuid","barnGuid","makeOrderGuid","getBreeding2SowInByBreedingGuid","breedingGuid","errorResponse","HttpErrorResponse","status","throwError","statusText","applicationError","headers","console","error","serverError","modalStateErrors","key","type","Injectable","args","providedIn","HttpClient","undefined","decorators","Inject","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","pop","length","push","create","__values","o","s","m","i","__read","r","ar","__spread","arguments","concat","BarnDropdownlistComponent","baseUrl","cd","trans","_this","id","placeholder","disabled","autoload","change","EventEmitter","ngModelChange","selectedValueChange","onblurChange","remoteFields","text","take","skip","onFiltering","updateData","data","query","dropdownObj","clone","search","onObarn","actionComplete","map","x","name","instant","guid","ngAfterViewChecked","selectedValue","detectChanges","ngOnInit","Query","where","localStorage","getItem","DataManager","url","adaptor","UrlAdaptor","crossDomain","sortBy","ngOnChanges","changes","currentValue","previousValue","firstChange","emit","areaGuid","onChange","onNgModelChange","onblur","Component","selector","template","ChangeDetectorRef","TranslateService","Input","Output","ViewChild","AreaDropdownlistComponent","onOarea","PenMultiselectComponent","selectedData","popupHeight","filter","FeedDropdownlistComponent","onOpen","log","FarmDropdownlistComponent","PigDropdownlistComponent","PenDropdownlistComponent","service","popupWidth","enabledLoad","selectedNameChange","loadData","_e","toPromise","_f","_a","_b","penGuidName","itemData","_c","_d","CodeTypeDropdownlistComponent","codeType","Math","random","addParams","executeQuery","sort","a","firstValue","MaterialDropdownlistComponent","MaskedtimetextboxComponent","cdRef","array","split","DiseaseDropdownlistComponent","MedicineDropdownlistComponent","selectedValueName","BomDropdownlistComponent","CustomerDropdownlistComponent","predicate","Predicate","or","VectorControlDropdownlistComponent","DisinfectionDropdownlistComponent","AlertifyService","$swal","Swal","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","addEventListener","stopTimer","resumeTimer","showLoading","title","allowEscapeKey","allowOutsideClick","dismiss","confirm","message","okCallback","fire","html","icon","showCancelButton","confirmButtonText","cancelButtonText","DismissReason","cancel","errorConfirm","confirm2","cancelCallback","confirm4","deleteConfirm","iconHtml","confirm5","confirm3","valid","res","rejects","validation","success","noToast","errorBackToLogin","btnText","callBack","errorCallBack","warning","messagePreventClosed","BaseService","valueSource","changeValue","VersionCheckService","cookieService","currentHash","initVersionCheck","frequency","setInterval","checkVersion","Date","getTime","subscribe","response","hash","hasHashChanged","setItem","version","window","location","reload","err","newHash","CookieService","UtilitiesService","UnflatteringForLeftMenu","arr","roots","node","children","parentId","UnflatteringForTree","expanded","MakeSeoTitle","input","slug","toLowerCase","replace","ToFormData","formValue","formData","FormData","keys","value2","toLocaleDateString","toLocaleTimeString","append","checkExistHost","RegExp","test","checkValidImage","RoomDropdownlistComponent","onOroom","setTimeout","roomGuidName","DropDownListComponent","CullingTankDropdownlistComponent","onOcullingTank","PenDropdownlistModalComponent","MyCheckboxComponent","checkedChange","checkedValue","checked","onCheckedChange","ThingDropdownlistComponent","AccountDropdownlistComponent","StatusConstants","Default","Agree","Execute","Close","Reject","Delete","SystemConstant","ROOT_LEVEL","BUILDING_LEVEL","LINE_LEVEL","BOM_TAB_Constant","Move","Feeding","Immunization","Treatment","Disinfection","VectorControl","BIO_SECURITY_TAB_Constant","Detail","Pen","Pig","Record","INVENTORY_TAB_Constant","ChangeThing","ChangeMaterial","Scrap","ACCEPTANCE_TAB_Constant","Check","CheckIn","Inspection","BIO_SECURITY_MASTER_PIG_TYPE_Constant","Sow","Boar","NewBoar","Gilt","Suckling","Finisher","Nursery","Grower","REPAIR_TAB_Constant","SALE_ORDER_TAB_Constant","CheckOut","REQUISITION_TAB_Constant","Feed","Material","Medicine","Thing","PIG_DISEASE_TAB_Constant","Culling","PIG_HOUSE_CLEANING_TAB_Constant","Plan","PIG_FARM_VECTOR_TAB_Constant","PIG_SETTING_TAB_Constant","Code","Testing","Genetic","Pedigree","RECORD_TAB_Constant","Death","EarTag","Weighing","MessageConstants","SYSTEM_ERROR_MSG","CONFIRM_LOCK_MSG","CONFIRM_UNLOCK_MSG","CONFIRM_LOCK_STATUS_MSG","CONFIRM_UNLOCK_STATUS_MSG","CONFIRM_STATUS_TITLE_MSG","CONFIRM_FEEDBACK_STATUS_MSG","CONFIRM_UNFEEDBACK_STATUS_MSG","CONFIRM_FEEDBACK_STATUS_TITLE_MSG","CONFIRM_DELETE_MSG","CONFIRM_DELETE_RANGE_MSG","CONFIRM_LOCK_TITLE_MSG","CONFIRM_TITLE_MSG","CONFIRM_DELETE_RANGE_TITLE_MSG","CONFIRM_PAY_MSG","CONFIRM_SET_DEFAULT_MSG","CONFIRM_SET_IS_HOME_MSG","CONFIRM_SET_NOT_IS_HOME_MSG","CONFIRM_PUBLISH_POST","LOGIN_AGAIN_MSG","CREATED_OK_MSG","UPDATED_OK_MSG","DELETED_OK_MSG","LOCKED_OK_MSG","UNLOCKED_OK_MSG","SET_DEFAULT_OK_MSG","SET_IS_HOME_OK_MSG","SET_NOT_IS_HOME_OK_MSG","FORBIDDEN","CANNOT_EDIT_MULTIPLE","NOT_CHOOSE_ANY_RECORD","UPLOAD_OK_MSG","REQUIRED_ERROR_MSG","RELOAD_MENU","SELECT_RECORD","SEND_MAIL_OK_MSG","SEND_MAIL_FAILED_MSG","CREATE_TITLE","CREATE_MESSAGE","UPDATE_TITLE","UPDATE_MESSAGE","DELETE_TITLE","DELETE_MESSAGE","CANCEL_MESSAGE","SERVER_ERROR","EXIST_MESSAGE","EXIST_USERNAME_MESSAGE","CHOOSE_FARM_MESSAGE","SELECT_ORDER_MESSAGE","VALID_CHANGE_PASSWORD_MSG","CONFIRM_CHANGE_PASSWORD_MSG","YES_MSG","NO_MSG","ActionConstants","ADD","EDIT","VIEW","DELETE_RANGE","DELETE","EDIT_TITLE","ADD_TITLE","Add","Edit","ImagePathConstants","NO_IMAGE","NO_IMAGE_COMPONENT","NO_IMAGE_ACTION_COMPONENT","SystemConfigConst","Order_Amount","Order","Pig_NO","GrowDays","Nursry","Sucking","Sale","RoleConstant","ADMIN","SUPER_ADMIN","SUPERVISOR","STAFF","WORKER","DISPATCHER","ActionConstant","CREATE","APPROVAL","EXCEL_EXPORT","EXCEL_IMPORT","PRINT","DONE","FINISH","RELEASE","REJECT","CLONE","MultiPigGridComponent","alertify","translate","height","recordGuid","penGuid","pageSettings","pageCount","pageSizes","enableQueryString","pageSize","currentPage","enableScroll","searchOptions","fields","operator","ignoreCase","alert","updateMessage","updateTitle","createMessage","createTitle","deleteMessage","deleteTitle","cancelMessage","deleted_ok_msg","created_ok_msg","updated_ok_msg","system_error_msg","exist_message","choose_farm_message","select_order_message","yes_message","no_message","onChangeChecked","toggle","pigGuid","loadDataByRoom","accessToken","pigData","authorization","Record2PenComponent","Record2RoomComponent","MakeorderDropdownlistComponent","ngOnDestroy","subscription","unsubscribe","subscription2","loadDataByPigType","SelectedpigGridComponent","pigName","selectedPigDataSource","recordNextDataSource","recordNext2DataSource","avgWeightChange","totalWeightChange","avgAmountChange","totalAmountChange","selectedPigDataSourceChange","maleAvgWeightChange","maleTotalWeightChange","maleTotalSelectedChange","femaleAvgWeightChange","femaleTotalWeightChange","femaleTotalSelectedChange","visibleNextRoom","visibleNextPen","visibleNext2","visibleButton","visibleNext","visibleAmount","visibleDisease","visibleWeight","visibleValue","visiblePigSex","visibleSourceGuid","visibleSource1Guid","visibleSource2Guid","visibleSource3Guid","visibleSemenConcentration","visibleSemenVolume","visibleMalformationRate","visiblePig","visibleRfid","valueLabel","pigLabel","next1Label","next2Label","editSettingsPig","showDeleteConfirmDialog","allowEditing","allowAdding","allowDeleting","mode","Subscription","average","nums","reduce","total","user","JSON","parse","Number","pageSizeSettingValue","pageSizeSettingList","ngAfterViewInit","buttons","document","getElementsByClassName","_r","from","_s","grid","endEdit","caculator","created","add","refreshHeader","totalAmount","totalWeight","avgWeight","femaleTotalWeight","maleTotalWeight","maleAvgWeight","actionBeginPig","action","requestType","diseaseItem","recordDisease","recordDiseaseName","recordNextItem","recordNext","recordNextName","recordNext2Item","recordNext2","recordNext2Name","nextRoomItem","nextRoom","_g","nextRoomName","_h","index","rowIndex","rfid","recordValue","recordAmount","recordWeight","sourceGuid","source1Guid","source2Guid","source3Guid","semenConcentration","semenVolume","malformationRate","_j","_k","_l","_m","_o","nextPenName","_p","nextPenItem","onChangeRecordNext","isInteracted","recordNextndex","findIndex","obj","onChangeRecordNext2","recordNextndex2","onChangePigSex","pigSex","pigSexName","pigSexItem","pigSexIndex","onChangeDisease","onChangeNextRoom","onChangeNextPen","nextPen","weights","amounts","toFixed","avgAmount","maleWeights","femaleWeights","femalelength","femaleAvgWeight","femaleTotalSelected","malelength","maleTotalSelected","providers","EditService","TreatmentDropdownlistComponent","MakeorderDropdownlistToolbarComponent","XaccountGroupComponent","groupName","RecordsaleDropdownlistComponent","DynamicGridComponent","SemenDropdownlistComponent","BreedingDropdownlistComponent","BreedingDropdownlistToolbarComponent","CustomerDropdownlistToolbarComponent","UploadMultiDocumentComponent","allowExtensions","filesName","filesDetails","filesList","allowedExtensions","multiple","autoUpload","enabled","files","showFile","path","saveUrl","controlerName","removeUrl","dropElement","Browser","isDevice","getElementById","style","padding","onclick","querySelector","click","detach","classList","contains","hideSpinner","uploadObj","upload","onSelect","isNullOrUndefined","parentElement","createElement","className","appendChild","validFiles","validateFiles","formSelectedData","viewedFiles","modifiedFiles","isModified","event","allImages","files_4","filesData","files_1","files_1_1","file","indexOf","files_2","files_2_1","files_3","files_3_1","proxy","clearbtn","uploadbtn","progressbarContainer","liEle","attrs","imageTag","alt","wrapper","innerHTML","bytesToSize","size","EventHandler","removeFiles","setAttribute","uploadFile","max","readURL","currentTarget","removeFile","statusCode","remove","element","splice","onFileUpload","li","iconEle","cursor","progressValue","round","loaded","isNaN","getElementsByTagName","onUploadSuccess","spinnerElement","visibility","operation","color","generateSpinner","removeAttribute","targetElement","createSpinner","target","width","showSpinner","onUploadFailed","preview","rawFile","reader","FileReader","src","readAsDataURL","onFileRemove","postRawFile","Breeding2SowinDropdownlistComponent","UploadDocumentComponent","showImgFile","getFileInfo","clearAll","initialUploader","beforeUpload","downloadUrl","getFilesById","refresh","onSelected","allFiles","shift","modifiedFilesData","ajax","XMLHttpRequest","open","onload","send","download","downloadLink","href","UploaderComponent","BaseComponent","statusConts","isodsExport","globalLang","sortOptions","columns","field","direction","isAdmin","groupCode","validationGrid","requireField","textLength","editSettingsTree","newRowPosition","editSettings","toolbarOptions","toolbarOptionsTree","contextMenuItems","iconCss","Permission","route","functionCode","snapshot","functions","item","e_2","childrens","optionItem","makeAction","code","Boolean","uniqueOptionItem","elem","self","PermissionForTreeGrid","includes","e_4","makeActionTreeGrid","convertDate","visibledApply","applyDate","visibledAgree","agreeGuid","visibledReject","visibledExecute","visibledInventory","visibledFinance","disabledApplyReason","disabledAgreeReason","disabledRejectReason","BaseDetailComponent","getAlertTranslator","GiltInDropdownlistComponent","BoarTestingDropdownlistComponent","GiltinMakeorderDropdownlistComponent","giltInGuidChange","giltInGuid","BomGiltDropdownlistComponent","BomBoarDropdownlistComponent","RecordSaleDropdownlistComponent","ParkinglotDropdownlistComponent","siteGuid","LandlordDropdownlistComponent","PigfarmRichtexteditorComponent","BankDropdownlistComponent","DeviceDropdownlistComponent","SiteDropdownlistComponent","landlordGuid","commponents","PigfarmCoreModule","forRoot","environment","ngModule","provide","useValue","NgModule","declarations","imports","DropDownListModule","CommonModule","FormsModule","ReactiveFormsModule","MaskedTextBoxModule","CheckBoxAllModule","TranslateModule","GridAllModule","MultiSelectAllModule","DatePickerAllModule","ComboBoxModule","UploaderModule","RichTextEditorAllModule","exports","CURDService","_super","env","entity","utilitiesService","audits","_sharedHeaders","HttpHeaders","set","String","__","constructor","__extends","getAll","getById","insertWithFormData","params","updateWithFormData","put","audit","addRange","model_1","e_3","model_1_1","updateRange","model_2","e_5","model_2_1","update","updatestatus","delete","deleterange","ids","ids_1","ids_1_1","getAudit","downloadODSFile","responseType","observe","downloadExcelFile","excelExportRecordSale","downloadBlob","fileName","mimeType","blob","Blob","URL","createObjectURL","revokeObjectURL"],"sources":["../../../projects/pigfarm-core/src/services/pigfarm-core.service.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/pigfarm-core/src/lib/components/barn-dropdownlist/barn-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/area-dropdownlist/area-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/pen-multiselect/pen-multiselect.component.ts","../../../projects/pigfarm-core/src/lib/components/feed-dropdownlist/feed-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/farm-dropdownlist/farm-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/pig-dropdownlist/pig-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/pen-dropdownlist/pen-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/code-type-dropdownlist/code-type-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/material-dropdownlist/material-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/maskedtimetextbox/maskedtimetextbox.component.ts","../../../projects/pigfarm-core/src/lib/components/disease-dropdownlist/disease-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/medicine-dropdownlist/medicine-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/bom-dropdownlist/bom-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/customer-dropdownlist/customer-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/vector-control-dropdownlist/vector-control-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/disinfection-dropdownlist/disinfection-dropdownlist.component.ts","../../../projects/pigfarm-core/src/services/alertify.service.ts","../../../projects/pigfarm-core/src/services/base.service.ts","../../../projects/pigfarm-core/src/services/version-check.service.ts","../../../projects/pigfarm-core/src/services/utilities.service.ts","../../../projects/pigfarm-core/src/lib/components/room-dropdownlist/room-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/culling-tank-dropdownlist/culling-tank-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/pen-dropdownlist-modal/pen-dropdownlist-modal.component.ts","../../../projects/pigfarm-core/src/lib/components/my-checkbox/my-checkbox.component.ts","../../../projects/pigfarm-core/src/lib/components/thing-dropdownlist/thing-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/account-dropdownlist/account-dropdownlist.component.ts","../../../projects/pigfarm-core/src/_core/_constants/system.constant.ts","../../../projects/pigfarm-core/src/_core/_constants/role.constant.ts","../../../projects/pigfarm-core/src/_core/_constants/action.constant.ts","../../../projects/pigfarm-core/src/lib/components/multi-pig-grid/multi-pig-grid.component.ts","../../../projects/pigfarm-core/src/lib/components/record2-pen/record2-pen.component.ts","../../../projects/pigfarm-core/src/lib/components/record2-room/record2-room.component.ts","../../../projects/pigfarm-core/src/lib/components/makeorder-dropdownlist/makeorder-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/selectedpig-grid/selectedpig-grid.component.ts","../../../projects/pigfarm-core/src/lib/components/treatment-dropdownlist/treatment-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/makeorder-dropdownlist-toolbar/makeorder-dropdownlist-toolbar.component.ts","../../../projects/pigfarm-core/src/lib/components/xaccount-group/xaccount-group.component.ts","../../../projects/pigfarm-core/src/lib/components/recordsale-dropdownlist/recordsale-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/dynamic-grid/dynamic-grid.component.ts","../../../projects/pigfarm-core/src/lib/components/semen-dropdownlist/semen-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/breeding-dropdownlist/breeding-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/breeding-dropdownlist-toolbar/breeding-dropdownlist-toolbar.component.ts","../../../projects/pigfarm-core/src/lib/components/customer-dropdownlist-toolbar/customer-dropdownlist-toolbar.component.ts","../../../projects/pigfarm-core/src/lib/components/upload-multi-document/upload-multi-document.component.ts","../../../projects/pigfarm-core/src/lib/components/breeding2-sowin-dropdownlist/breeding2-sowin-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/upload-document/upload-document.component.ts","../../../projects/pigfarm-core/src/lib/components/base.component.ts","../../../projects/pigfarm-core/src/lib/components/base-detail.component.ts","../../../projects/pigfarm-core/src/lib/components/gilt-in-dropdownlist/gilt-in-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/boar-testing-dropdownlist/boar-testing-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/giltin-makeorder-dropdownlist/giltin-makeorder-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/bom-gilt-dropdownlist/bom-gilt-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/bom-boar-dropdownlist/bom-boar-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/record-sale-dropdownlist/record-sale-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/parkinglot-dropdownlist/parkinglot-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/landlord-dropdownlist/landlord-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/pigfarm-richtexteditor/pigfarm-richtexteditor.component.ts","../../../projects/pigfarm-core/src/lib/components/bank-dropdownlist/bank-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/device-dropdownlist/device-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/components/site-dropdownlist/site-dropdownlist.component.ts","../../../projects/pigfarm-core/src/lib/pigfarm-core.module.ts","../../../projects/pigfarm-core/src/services/CURD.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { OperationResult } from \"../_core/models/application-user\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PigfarmCoreService {\r\n  private recordSource = new BehaviorSubject({} );\r\n  currentRecordEarTag = this.recordSource.asObservable();\r\n  private recordLabelSource = new BehaviorSubject(null);\r\n  currentRecordLabel = this.recordLabelSource.asObservable();\r\n  \r\n  constructor(private http: HttpClient,\r\n    @Inject(\"Env\") private base\r\n    ) {}\r\n  changeRecordEarTag(farm) {\r\n    this.recordSource.next(farm)\r\n  }\r\n  changLable(value) {\r\n    this.recordLabelSource.next(value)\r\n  }\r\n  getBreedingByFarmGuid(farmGuid) {\r\n    return this.http.get<any>(`${this.base}Breeding/GetBreedingByFarmGuid?farmGuid=${farmGuid}`, {});\r\n  }\r\n  getMakeOrderByFarmGuid(farmGuid) {\r\n    return this.http.get<any>(\r\n      `${this.base}MakeOrder/GetMakeOrderByFarmGuid?farmGuid=${farmGuid}`,\r\n      {}\r\n    );\r\n  }\r\n\r\n  getMakeOrderByFarmGuidAndPigType(farmGuid,pigType) {\r\n    return this.http.get<any>(`${this.base}MakeOrder/GetMakeOrderByFarmGuidAndPigType?farmGuid=${farmGuid}&pigType=${pigType}`, {});\r\n  }\r\n  removeRecord2Pig(model): Observable<OperationResult> {\r\n    return this.http\r\n      .post<OperationResult>(`${this.base}Record/RemoveRecord2Pen`, model)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  addRecord2Pig(model): Observable<OperationResult> {\r\n    return this.http\r\n      .post<OperationResult>(`${this.base}Record/AddRecord2Pen`, model)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  getPensByFarmGuidOrRoomGuid(farmGuid, roomGuid): Observable<any> {\r\n    return this.http.get<any>(`${this.base}Pen/getPensByFarmGuidOrRoomGuid?farmGuid=${farmGuid}&roomGuid=${roomGuid}`, {});\r\n  }\r\n  getByFarmGuid(farmGuid) {\r\n    return this.http.get<any>(`${this.base}RecordSale/GetByFarmGuid?farmGuid=${farmGuid}`, {});\r\n  }\r\n  getRoomsByFarmGuid(farmGuid, barnGuid,makeOrderGuid): Observable<any> {\r\n    return this.http.get<any>(`${this.base}Room/GetRoomsByFarmGuid?farmGuid=${farmGuid}&barnGuid=${barnGuid}&makeOrderGuid=${makeOrderGuid}`, {});\r\n  }\r\n  getBreeding2SowInByBreedingGuid(breedingGuid) {\r\n    return this.http.get<any>(`${this.base}Breeding/GetBreeding2SowInByBreedingGuid?breedingGuid=${breedingGuid}`, {});\r\n  }\r\n\r\n  protected handleError(errorResponse: any) {\r\n    if (errorResponse instanceof HttpErrorResponse) {\r\n      if (errorResponse.status === 401) {\r\n        return throwError(errorResponse.statusText);\r\n      }\r\n      const applicationError = errorResponse.headers.get('Application-Error');\r\n      if (applicationError) {\r\n        console.error(applicationError);\r\n        return throwError(applicationError);\r\n      }\r\n      const serverError = errorResponse.error;\r\n      let modalStateErrors = '';\r\n      if (serverError && typeof serverError === 'object') {\r\n        for (const key in serverError) {\r\n          if (serverError[key]) {\r\n            modalStateErrors += serverError[key] + '\\n';\r\n          }\r\n        }\r\n      }\r\n      return throwError(modalStateErrors || serverError || 'Server Error');\r\n    }\r\n  }\r\n  \r\n}\r\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges, AfterViewChecked, ChangeDetectorRef ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n@Component({\r\n  selector: 'app-barn-dropdownlist',\r\n  templateUrl: './barn-dropdownlist.component.html',\r\n  styleUrls: ['./barn-dropdownlist.component.css']\r\n})\r\nexport class BarnDropdownlistComponent implements OnInit, OnChanges, AfterViewChecked {\r\n  @Input() id = \"barn-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() areaGuid: any;\r\n\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Input() autoload = true;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('barnRemote') public dropdownObj: DropDownListComponent\r\n  @Output('onblur') onblurChange = new EventEmitter<any>();\r\n\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 100;\r\n  skip = 0;\r\n  public onObarn(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, ['barnName', 'barnNo']);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    e.result = e.result.map(x => {\r\n      let name = x.id === 0 ? this.trans.instant(x.name) : x.name;\r\n      return {\r\n        guid: x.guid,\r\n        name: name\r\n      }\r\n    })\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,private cd: ChangeDetectorRef,public trans: TranslateService) {}\r\n  ngAfterViewChecked(): void {\r\n    this.selectedValue = this.selectedValue || \"\";\r\n    this.cd.detectChanges()\r\n  }\r\n\r\n  ngOnInit() {\r\n    if(this.autoload) {\r\n      this.query = new Query()\r\n      .where('farmGuid', 'equal', localStorage.getItem('farmGuid'))\r\n      .where('status', 'equal', 1);\r\n      this.data = new DataManager({\r\n        url: `${this.baseUrl}Barn/GetDataDropdownlist`,\r\n        adaptor: new UrlAdaptor,\r\n        crossDomain: true,\r\n      }, this.query.sortBy('barnNo'));\r\n    }\r\n\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.hasOwnProperty(\"selectedValue\")) {\r\n      if (changes?.selectedValue.currentValue != changes?.selectedValue.previousValue && !changes?.selectedValue.firstChange) {\r\n        this.ngModelChange.emit(this.selectedValue);\r\n        this.selectedValueChange.emit(this.selectedValue);\r\n      }\r\n     }\r\n    if (changes.hasOwnProperty(\"areaGuid\")) {\r\n      if (changes?.areaGuid.currentValue != changes?.areaGuid.previousValue) {\r\n        this.query = new Query()\r\n        .skip(this.skip)\r\n        .take(this.take)\r\n        .where('farmGuid', 'equal', localStorage.getItem('farmGuid'))\r\n        .where('status', 'equal', 1)\r\n        .where('areaGuid', 'equal', this.areaGuid);\r\n        this.data = new DataManager({\r\n          url: `${this.baseUrl}Barn/GetDataDropdownlist`,\r\n          adaptor: new UrlAdaptor,\r\n          crossDomain: true,\r\n        }, this.query.sortBy('barnNo'));\r\n      }\r\n     }\r\n\r\n\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n  onblur(e) {\r\n    this.onblurChange.emit(e);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n@Component({\r\n  selector: 'app-area-dropdownlist',\r\n  templateUrl: './area-dropdownlist.component.html',\r\n  styleUrls: ['./area-dropdownlist.component.css']\r\n})\r\nexport class AreaDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"area-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('areaRemote') public dropdownObj: DropDownListComponent\r\n  @Output('onblur') onblurChange = new EventEmitter<any>();\r\n\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 100;\r\n  skip = 0;\r\n  public onOarea(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, ['areaName', 'areaNo']);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    e.result = e.result.map(x => {\r\n      let name = x.id === 0 ? this.trans.instant(x.name) : x.name;\r\n      return {\r\n        guid: x.guid,\r\n        name: name\r\n      }\r\n    })\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.query = new Query()\r\n    .where('farmGuid', 'equal', localStorage.getItem('farmGuid'))\r\n    .where('status', 'equal', 1);\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}Area/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query.sortBy('areaNo'));\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.selectedValue = this.selectedValue || \"\";\r\n    if (changes['selectedValue']) {\r\n      if (changes?.selectedValue.currentValue != changes?.selectedValue.previousValue && !changes?.selectedValue.firstChange) {\r\n        this.ngModelChange.emit(this.selectedValue);\r\n        this.selectedValueChange.emit(this.selectedValue);\r\n      }\r\n    }\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n  onblur(e) {\r\n    this.onblurChange.emit(e);\r\n  }\r\n}\r\n","\r\nimport { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-pen-multiselect',\r\n  templateUrl: './pen-multiselect.component.html',\r\n  styleUrls: ['./pen-multiselect.component.scss']\r\n})\r\nexport class PenMultiselectComponent implements OnInit, OnChanges {\r\n  @Input() id = \"pen-multi\";\r\n  @Input() selectedData: any=[];\r\n  @Input() placeholder = \"\";\r\n  @Input() roomGuid = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @Output('onblur') onblurChange = new EventEmitter<any>();\r\n  @ViewChild('penmulti') public dropdownObj: DropDownListComponent\r\n  @Input() data: DataManager;\r\n  @Input() query: Query ;\r\n  @Input() popupHeight = '350px';\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 10;\r\n  skip = 0;\r\n\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, ['penName', 'penNo']);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    e.result = e.result.filter(x=> x.guid != \"\");\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.query = new Query()\r\n    .where('farmGuid', 'equal', localStorage.getItem('farmGuid'))\r\n    .where('status', 'equal', 1);\r\n    if (this.roomGuid) {\r\n      this.query.where('roomGuid', 'equal', this.roomGuid);\r\n    }\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}Pen/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-feed-dropdownlist',\r\n  templateUrl: './feed-dropdownlist.component.html',\r\n  styleUrls: ['./feed-dropdownlist.component.css']\r\n})\r\nexport class FeedDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"feed-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('feedRemote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 10;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, ['feedName', 'feedNo']);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    console.log(e);\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    .where('status', 'equal', 1);\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}Feed/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-farm-dropdownlist',\r\n  templateUrl: './farm-dropdownlist.component.html',\r\n  styleUrls: ['./farm-dropdownlist.component.scss']\r\n})\r\nexport class FarmDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"farm-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('farmRemote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 10;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, 'name');\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    console.log(e);\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    .where('status', 'equal', 1);\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}Farm/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log(this.selectedValue);\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-pig-dropdownlist',\r\n  templateUrl: './pig-dropdownlist.component.html',\r\n  styleUrls: ['./pig-dropdownlist.component.scss']\r\n})\r\nexport class PigDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"pig-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('pigRemote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 1000;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, 'name');\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    e.result = e.result.map(x => {\r\n      let name = x.id === 0 ? this.trans.instant(x.name) : x.name;\r\n      return {\r\n        guid: x.guid,\r\n        name: name\r\n      }\r\n    })\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    .skip(this.skip)\r\n    .take(this.take)\r\n    .where('farmGuid', 'equal', localStorage.getItem('farmGuid'))\r\n    .where('status', 'equal', 1);\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}Pig/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log(this.selectedValue);\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Predicate } from '@syncfusion/ej2-angular-grids';\r\nimport { PigfarmCoreService } from '../../../services/pigfarm-core.service';\r\n\r\n@Component({\r\n  selector: 'app-pen-dropdownlist',\r\n  templateUrl: './pen-dropdownlist.component.html',\r\n  styleUrls: ['./pen-dropdownlist.component.scss']\r\n})\r\nexport class PenDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"pen-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = this.trans.instant(\"No Item\");\r\n  @Input() roomGuid = \"\";\r\n  @Input() disabled = false;\r\n  @Input() popupWidth = 300;\r\n  @Input() enabledLoad = true;\r\n  @Input() predicate: Predicate | null;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @Output() selectedNameChange = new EventEmitter<any>();\r\n  @Output('onblur') onblurChange = new EventEmitter<any>();\r\n  @ViewChild('penRemote') public dropdownObj: DropDownListComponent\r\n  public data: any;\r\n  public penGuidName: any;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 1000;\r\n  skip = 0;\r\n \r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.search(e.text, ['penName', 'penNo']);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    e.result = e.result.map(x => {\r\n      let name = x.guid === \"\" ? this.trans.instant(x.name) : x.name;\r\n      return {\r\n        guid: x.guid,\r\n        name: name\r\n      }\r\n    })\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,\r\n    public trans: TranslateService,\r\n    public service: PigfarmCoreService\r\n    ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  \r\n   async loadData() {\r\n    this.data = await this.service.getPensByFarmGuidOrRoomGuid(localStorage.getItem(\"farmGuid\"), this.roomGuid).toPromise();\r\n\r\n    // this.query = new Query()\r\n    //   .where('farmGuid', 'equal', localStorage.getItem('farmGuid'))\r\n    //   .where('status', 'equal', 1);\r\n    //   if (this.roomGuid) {\r\n    //     this.query.where('roomGuid', 'equal', this.roomGuid);\r\n    //   }\r\n    // this.data = new DataManager({\r\n    //   url: `${this.baseUrl}Pen/GetDataDropdownlist`,\r\n    //   adaptor: new UrlAdaptor,\r\n    //   crossDomain: true,\r\n    // }, this.query.sortBy('penNo'));\r\n  }\r\n  async ngOnChanges(changes: SimpleChanges): Promise<void> {\r\n    this.selectedValue = this.selectedValue || \"\";\r\n    if(this.dropdownObj && !this.selectedValue) {\r\n      this.dropdownObj.value = null;\r\n    }\r\n    if (changes['enabledLoad'] && changes.enabledLoad.currentValue) {\r\n      await this.loadData();\r\n      this.selectedValue = changes['selectedValue']?.currentValue\r\n    }\r\n    if (changes['roomGuid'] && changes.roomGuid.currentValue) {\r\n      await this.loadData();\r\n      this.selectedValue = changes['selectedValue']?.currentValue\r\n    }\r\n  }\r\n  onChange(args) {\r\n    this.penGuidName = args.itemData?.name\r\n    this.selectedNameChange.emit(args.itemData?.name || '')\r\n    this.selectedValueChange.emit(args.itemData?.guid);\r\n    this.ngModelChange.emit(args.itemData?.guid);\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n  onblur(e) {\r\n    this.onblurChange.emit(e);\r\n  }\r\n}\r\n","\r\nimport { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges, AfterViewInit, ChangeDetectorRef, AfterViewChecked ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-code-type-dropdownlist',\r\n  templateUrl: './code-type-dropdownlist.component.html',\r\n  styleUrls: ['./code-type-dropdownlist.component.scss']\r\n})\r\nexport class CodeTypeDropdownlistComponent implements OnInit, OnChanges, AfterViewChecked {\r\n  @Input() id = \"codeType-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = this.trans.instant(\"No item\");\r\n  @Input() codeType = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @Output() selectedNameChange = new EventEmitter<any>();\r\n  @ViewChild('codeTypeRemote') public dropdownObj: DropDownListComponent\r\n  @Output('onblur') onblurChange = new EventEmitter<any>();\r\n\r\n  public data: any;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 100;\r\n  skip = 0;\r\n  firstValue: any;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, 'name');\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    e.result = e.result.map(x => {\r\n      let name = x.guid === \"\" ? this.trans.instant(x.name) : x.name;\r\n      return {\r\n        guid: x.guid,\r\n        name: name\r\n      }\r\n    })\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,private cd: ChangeDetectorRef,public trans: TranslateService) {}\r\n  ngAfterViewChecked(): void {\r\n    this.selectedValue = this.selectedValue || \"\";\r\n    this.id = this.id || Math.random() + '';\r\n    this.cd.detectChanges()\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    .addParams(\"lang\", localStorage.getItem('lang'));\r\n    let data = new DataManager({\r\n      url: `${this.baseUrl}CodeType/GetDataDropdownlist?lang=${localStorage.getItem('lang')}&codeType=${this.codeType}`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    });\r\n    data.executeQuery(this.query.sortBy('guid')).then((x: any)=> {\r\n      this.data = x.result.sort((a,b) => +a.guid - +b.guid);\r\n      if ( this.data.length > 0) {\r\n        this.firstValue = this.data[0].guid\r\n      }\r\n    })\r\n    \r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['codeType'] && changes['codeType'].currentValue === 'Employee_Status' ) {\r\n      if (changes['selectedValue'] && changes['selectedValue'].currentValue) {\r\n        this.selectedValue = changes['selectedValue'].currentValue + ''\r\n      }\r\n    }\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n    this.selectedNameChange.emit(args.itemData?.name)\r\n    this.selectedValueChange.emit(args.itemData?.guid)\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n  onblur(e) {\r\n    this.onblurChange.emit(e);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-material-dropdownlist',\r\n  templateUrl: './material-dropdownlist.component.html',\r\n  styleUrls: ['./material-dropdownlist.component.scss']\r\n})\r\nexport class MaterialDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"material-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('materialRemote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 10;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, 'name');\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    console.log(e);\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    .where('status', 'equal', 1);\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}Material/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log(this.selectedValue);\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { AfterViewChecked, ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output ,Inject } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-maskedtimetextbox',\r\n  templateUrl: './maskedtimetextbox.component.html',\r\n  styleUrls: ['./maskedtimetextbox.component.css']\r\n})\r\nexport class MaskedtimetextboxComponent implements OnInit, AfterViewChecked {\r\n  @Input() disabled = true;\r\n  @Input() selectedValue = \"\";\r\n  id = Math.random();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @Output('onblur') onblurChange = new EventEmitter<any>();\r\n  constructor(@Inject(\"Env\") private baseUrl,private cdRef:ChangeDetectorRef) { }\r\n  ngAfterViewChecked()\r\n  {\r\n    this.cdRef.detectChanges();\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n  onChange(args) {\r\n    this.selectedValue = args.value || \"\";\r\n    if (this.selectedValue?.length === 4) {\r\n      let array =  this.selectedValue.split('');\r\n      this.selectedValue = `${array[0]}${array[1]}:${array[2]}${array[3]}`;\r\n    }\r\n    this.selectedValueChange.emit(this.selectedValue);\r\n  }\r\n  onblur(e) {\r\n    this.onblurChange.emit(e);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-disease-dropdownlist',\r\n  templateUrl: './disease-dropdownlist.component.html',\r\n  styleUrls: ['./disease-dropdownlist.component.css']\r\n})\r\nexport class DiseaseDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"disease-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('diseaseRemote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 100;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, ['name', 'no']);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    console.log(e);\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    .where('status', 'equal', 1);\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}Disease/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query.sortBy(\"no\"));\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log(this.selectedValue);\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-medicine-dropdownlist',\r\n  templateUrl: './medicine-dropdownlist.component.html',\r\n  styleUrls: ['./medicine-dropdownlist.component.css']\r\n})\r\nexport class MedicineDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"medicine-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueName = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('remote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 100;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, ['medicineNo','medicineName', 'medicineType']);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    .where('status', 'equal', 1);\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}Medicine/GetDataDropdownlistByLang?lang=${localStorage.getItem('lang')}`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n     // only run when property \"data\" changed\r\n     if (changes['selectedValue']) {\r\n      this.selectedValueChange.emit(this.selectedValue);\r\n      }\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n    this.selectedValueName.emit(args.itemData.name || '')\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-bom-dropdownlist',\r\n  templateUrl: './bom-dropdownlist.component.html',\r\n  styleUrls: ['./bom-dropdownlist.component.scss']\r\n})\r\nexport class BomDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"bom-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('bomRemote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 100;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, 'name');\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    console.log(e);\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    .skip(this.skip)\r\n    .take(this.take)\r\n    .where('status', 'equal', 1);\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}Bom/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log(this.selectedValue);\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor, Predicate } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n@Component({\r\n  selector: 'app-customer-dropdownlist',\r\n  templateUrl: './customer-dropdownlist.component.html',\r\n  styleUrls: ['./customer-dropdownlist.component.scss']\r\n})\r\nexport class CustomerDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"customer-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('customerRemote') public dropdownObj: DropDownListComponent\r\n  public data: any;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 1000;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    let query = new Query();\r\n    //frame the query based on search string with filter type.\r\n    let predicate: Predicate = new Predicate('name', 'contains', e.text);\r\n    predicate = predicate.or('no', 'contains', e.text);\r\n    query = (e.text != \"\") ? query.where(predicate) : query;\r\n    //pass the filter data source, filter query to updateData method.\r\n    e.updateData(this.data, query);\r\n  };\r\n  public actionComplete(e: any): void {\r\n    console.log(e);\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    new DataManager({\r\n      url: `${this.baseUrl}Customer/GetCustomersSP`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }).executeQuery(this.query).then((x: any)=> {\r\n      this.data = x.result\r\n    });\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log('Customer/GetCustomersSP', this.selectedValue);\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n    this.selectedValueChange.emit(args.itemData?.guid);\r\n\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-vector-control-dropdownlist',\r\n  templateUrl: './vector-control-dropdownlist.component.html',\r\n  styleUrls: ['./vector-control-dropdownlist.component.css']\r\n})\r\nexport class VectorControlDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"vectorControl-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('vectorControlRemote') public dropdownObj: DropDownListComponent\r\n  @Output('onblur') onblurChange = new EventEmitter<any>();\r\n\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 10;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, 'name');\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    console.log(e);\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    .where('status', 'equal', 1);\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}VectorControl/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log(this.selectedValue);\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n    this.selectedValueChange.emit(args.itemData.guid);\r\n\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n  onblur(e) {\r\n    this.onblurChange.emit(e);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-disinfection-dropdownlist',\r\n  templateUrl: './disinfection-dropdownlist.component.html',\r\n  styleUrls: ['./disinfection-dropdownlist.component.css']\r\n})\r\nexport class DisinfectionDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"disinfection-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('disinfectionRemote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 10;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, ['disinfectionNo','disinfectionName']);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    .where('status', 'equal', 1);\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}Disinfection/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\ndeclare let Swal: any;\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertifyService {\r\n  public $swal = Swal;\r\n  constructor(private trans: TranslateService) { }\r\n  private Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'bottom-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer);\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer);\r\n    }\r\n  });\r\n  showLoading(timer = 2000) {\r\n    {\r\n      Swal({\r\n        title: this.trans.instant('Now loading'),\r\n        allowEscapeKey: false,\r\n        allowOutsideClick: false,\r\n        timer,\r\n        onOpen: () => {\r\n          Swal.showLoading();\r\n        }\r\n      }).then(\r\n        () => { },\r\n        (dismiss) => {\r\n          if (dismiss === 'timer') {\r\n            Swal({\r\n              title: this.trans.instant('Finished!'),\r\n              type: 'success',\r\n              timer: 2000,\r\n              showConfirmButton: false\r\n            });\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n  confirm(title: string, message: string, okCallback: () => void) {\r\n    Swal.fire({\r\n      title,\r\n      // text: message,\r\n      html: message,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: this.trans.instant('Yes'),\r\n      cancelButtonText: this.trans.instant('No!')\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        okCallback();\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n          this.trans.instant('Cancelled'),\r\n          this.trans.instant('Your imaginary file is safe :)'),\r\n          this.trans.instant('error')\r\n        );\r\n      }\r\n    });\r\n  }\r\n  errorConfirm(title: string, message: string, okCallback: () => void) {\r\n    Swal.fire({\r\n      title,\r\n      text: message,\r\n      icon: 'warning',\r\n      showCancelButton: false,\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      confirmButtonText: this.trans.instant('Yes'),\r\n    }).then((result) => {\r\n        okCallback();\r\n    });\r\n  }\r\n  confirm2(title: string, message: string, okCallback: () => void, cancelCallback: () => void) {\r\n    Swal.fire({\r\n      title,\r\n      html: message,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: this.trans.instant('Yes'),\r\n      cancelButtonText: this.trans.instant('No!')\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        okCallback();\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        cancelCallback();\r\n      }\r\n    });\r\n  }\r\n  confirm4(confirmButtonText = 'Yes',cancelButtonText = 'No', title: string, message: string, okCallback: () => void, cancelCallback: () => void , icon='warning') {\r\n    Swal.fire({\r\n      title,\r\n      html: message,\r\n      icon:icon,\r\n      showCancelButton: true,\r\n      confirmButtonText: confirmButtonText,\r\n      cancelButtonText: cancelButtonText\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        okCallback();\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        cancelCallback();\r\n      }\r\n    });\r\n  }\r\n  deleteConfirm(confirmButtonText = 'Yes',cancelButtonText = 'No', title: string, message: string, okCallback: () => void, cancelCallback: () => void ) {\r\n    Swal.fire({\r\n      title,\r\n      html: message,\r\n      icon:'question',\r\n      iconHtml: '<i class=\"fa fa-exclamation\" aria-hidden=\"true\"></i>',\r\n      showCancelButton: true,\r\n      confirmButtonText: confirmButtonText,\r\n      cancelButtonText: cancelButtonText\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        okCallback();\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        cancelCallback();\r\n      }\r\n    });\r\n  }\r\n  confirm5(confirmButtonText = 'Yes',cancelButtonText = 'No', title: string, message: string, okCallback: () => void, cancelCallback: () => void ) {\r\n    Swal.fire({\r\n      title,\r\n      html: message,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: confirmButtonText,\r\n      cancelButtonText: cancelButtonText\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        okCallback();\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        cancelCallback();\r\n      }\r\n    });\r\n  }\r\n  confirm3(title: string, message: string, confirmButtonText: string, cancelButtonText: string, okCallback: () => void, cancelCallback: () => void) {\r\n    Swal.fire({\r\n      title,\r\n      html: message,\r\n      icon: 'success',\r\n      showCancelButton: true,\r\n      confirmButtonText: confirmButtonText,\r\n      cancelButtonText: cancelButtonText,\r\n      allowOutsideClick: false\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        okCallback();\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        cancelCallback();\r\n      }\r\n    });\r\n  }\r\n  valid(title: string, message: string): Promise<boolean> {\r\n    return new Promise((res, rejects) => {\r\n      Swal.fire({\r\n        title,\r\n        text: message,\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: this.trans.instant('Yes'),\r\n        cancelButtonText: this.trans.instant('No')\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          res(true);\r\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n          rejects(false);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  validation(title: string, message: string) {\r\n    Swal.fire(title, message, 'warning');\r\n  }\r\n\r\n  success(message: string, noToast?: boolean) {\r\n    if (!noToast) {\r\n      this.Toast.fire({\r\n        icon: 'success',\r\n        title: message\r\n      });\r\n    } else {\r\n      Swal.fire(this.trans.instant('Successfully!'), message, 'success');\r\n    }\r\n  }\r\n  errorBackToLogin(message: string, btnText: string, callBack: any, showCancelButton = false, errorCallBack = () => {}) {\r\n    Swal.fire({\r\n      text: message,\r\n      icon: 'error',\r\n      showCancelButton: showCancelButton,\r\n      allowOutsideClick: false,\r\n      confirmButtonText: `<i class=\"fa fa-backward\"></i> ${this.trans.instant(btnText)}`,\r\n      cancelButtonText: this.trans.instant('No') || 'No'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n       callBack();\r\n      } else {\r\n        errorCallBack()\r\n      }\r\n    });\r\n  }\r\n  error(message: string, noToast?: boolean) {\r\n    if (!noToast) {\r\n      this.Toast.fire({\r\n        icon: 'error',\r\n        title: message\r\n      });\r\n    } else {\r\n      Swal.fire(this.trans.instant('Error!'), message, 'error');\r\n    }\r\n  }\r\n\r\n  warning(message: string, noToast?: boolean) {\r\n    if (!noToast) {\r\n      this.Toast.fire({\r\n        icon: 'warning',\r\n        title: message\r\n      });\r\n    } else {\r\n      Swal.fire(this.trans.instant('Warning!'), message, 'warning');\r\n    }\r\n  }\r\n\r\n  message(message: string, noToast?: boolean) {\r\n    if (!noToast) {\r\n      this.Toast.fire({\r\n        icon: 'info',\r\n        title: message\r\n      });\r\n    } else {\r\n      Swal.fire(this.trans.instant('Info!'), message, 'info');\r\n    }\r\n  }\r\n\r\n  messagePreventClosed( message: string, okCallback: () => void) {\r\n    Swal.fire({\r\n      html: message,\r\n      icon: 'info',\r\n      showConfirmButton: true,\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      confirmButtonText: this.trans.instant('Confirm'),\r\n      cancelButtonText: this.trans.instant('No!')\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        okCallback();\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { BehaviorSubject, throwError } from 'rxjs';\r\nimport { MessageConstants } from '../_core/_constants';\r\nexport class BaseService {\r\n    valueSource = new BehaviorSubject<MessageConstants>(null);\r\n    currentValue = this.valueSource.asObservable();\r\n    constructor() { }\r\n\r\n    protected handleError(errorResponse: any) {\r\n      if (errorResponse instanceof HttpErrorResponse) {\r\n        if (errorResponse.status === 401) {\r\n          return throwError(errorResponse.statusText);\r\n        }\r\n        const applicationError = errorResponse.headers.get('Application-Error');\r\n        if (applicationError) {\r\n          console.error(applicationError);\r\n          return throwError(applicationError);\r\n        }\r\n        const serverError = errorResponse.error;\r\n        let modalStateErrors = '';\r\n        if (serverError && typeof serverError === 'object') {\r\n          for (const key in serverError) {\r\n            if (serverError[key]) {\r\n              modalStateErrors += serverError[key] + '\\n';\r\n            }\r\n          }\r\n        }\r\n        return throwError(modalStateErrors || serverError || 'Server Error');\r\n      }\r\n    }\r\n    changeValue(message: MessageConstants) {\r\n        this.valueSource.next(message);\r\n    }\r\n}\r\n","import { CookieService } from 'ngx-cookie-service';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable()\r\nexport class VersionCheckService {\r\n  // this will be replaced by actual hash post-build.js\r\n  private currentHash = '{{POST_BUILD_ENTERS_HASH_HERE}}';\r\n  constructor(\r\n    private http: HttpClient,\r\n    private cookieService: CookieService,\r\n    ) {\r\n      //console.log(this.currentHash)\r\n     }\r\n  /**\r\n  * Checks in every set frequency the version of frontend application\r\n  * @param url\r\n  * @param {number} frequency - in milliseconds, defaults to 30 minutes\r\n  */\r\n  public initVersionCheck(url, frequency = 1000 * 60 * 30) {\r\n    setInterval(() => {\r\n      this.checkVersion(url);\r\n    }, frequency);\r\n    this.checkVersion(url);\r\n  }\r\n  /**\r\n  * Will do the call and check if the hash has changed or not\r\n  * @param url\r\n  */\r\n  private checkVersion(url) {\r\n    // timestamp these requests to invalidate caches\r\n    this.http.get(url + '?t=' + new Date().getTime())\r\n      .subscribe(\r\n        (response: any) => {\r\n         // console.log('current Hash',this.currentHash);\r\n          const hash = response.hash;\r\n        //  console.log('new Hash',hash);\r\n          const hashChanged = this.hasHashChanged(this.currentHash, hash);\r\n          // If new version, do something\r\n         // console.log('If new version, do something',hashChanged);\r\n\r\n          if (hashChanged) {\r\n           // console.log(`There is a new update version ${response.version}` + ' current Hash',this.currentHash);\r\n            localStorage.setItem('version', response.version )\r\n            this.currentHash = hash;\r\n            // this.cookieService.deleteAll('/');\r\n            window.location.reload();\r\n            // ENTER YOUR CODE TO DO SOMETHING UPON VERSION CHANGE\r\n            // for an example: location.reload();\r\n          }\r\n          this.currentHash = hash;\r\n          // store the new hash so we wouldn't trigger versionChange again\r\n          // only necessary in case you did not force refresh\r\n        },\r\n        (err) => {\r\n          console.error(err, 'Could not get version');\r\n        }\r\n      );\r\n  }\r\n  /**\r\n  * Checks if hash has changed.\r\n  * This file has the JS hash, if it is a different one than in the version.json\r\n  * we are dealing with version change\r\n  * @param currentHash\r\n  * @param newHash\r\n  * @returns {boolean}\r\n  */\r\n  private hasHashChanged(currentHash, newHash) {\r\n    if (!currentHash || currentHash === '{{POST_BUILD_ENTERS_HASH_HERE}}') {\r\n      return false;\r\n    }\r\n    return currentHash !== newHash;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Subscription } from 'rxjs';\r\n@Injectable({ providedIn: 'root' })\r\nexport class UtilitiesService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  UnflatteringForLeftMenu = (arr: any[]): any[] => {\r\n    const map = {};\r\n    const roots: any[] = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n      const node = arr[i];\r\n      node.children = [];\r\n      map[node.id] = i; // use map to look-up the parents\r\n      if (node.parentId !== null) {\r\n        delete node.children;\r\n        arr[map[node.parentId]].children.push(node);\r\n      } else {\r\n        roots.push(node);\r\n      }\r\n    }\r\n    return roots;\r\n  }\r\n\r\n  UnflatteringForTree = (arr: any[]): any[] => {\r\n    const map = {};\r\n    const roots: any[] = [];\r\n    let node = {\r\n      data: {\r\n        id: '',\r\n        parentId: ''\r\n      },\r\n      expanded: true,\r\n      children: []\r\n    };\r\n    for (let i = 0; i < arr.length; i += 1) {\r\n      map[arr[i].id] = i; // initialize the map\r\n      arr[i].data = arr[i]; // initialize the data\r\n      arr[i].children = []; // initialize the children\r\n    }\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < arr.length; i += 1) {\r\n      node = arr[i];\r\n      if (node.data.parentId !== null && arr[map[node.data.parentId]] !== undefined) {\r\n        arr[map[node.data.parentId]].children.push(node);\r\n      } else {\r\n        roots.push(node);\r\n      }\r\n    }\r\n    return roots;\r\n  }\r\n\r\n  MakeSeoTitle(input: string) {\r\n    if (input === undefined || input === '') {\r\n      return '';\r\n    }\r\n    // Đổi chữ hoa thành chữ thường\r\n    let slug = input.toLowerCase();\r\n\r\n    // Đổi ký tự có dấu thành không dấu\r\n    slug = slug.replace(/á|à|ả|ạ|ã|ă|ắ|ằ|ẳ|ẵ|ặ|â|ấ|ầ|ẩ|ẫ|ậ/gi, 'a');\r\n    slug = slug.replace(/é|è|ẻ|ẽ|ẹ|ê|ế|ề|ể|ễ|ệ/gi, 'e');\r\n    slug = slug.replace(/i|í|ì|ỉ|ĩ|ị/gi, 'i');\r\n    slug = slug.replace(/ó|ò|ỏ|õ|ọ|ô|ố|ồ|ổ|ỗ|ộ|ơ|ớ|ờ|ở|ỡ|ợ/gi, 'o');\r\n    slug = slug.replace(/ú|ù|ủ|ũ|ụ|ư|ứ|ừ|ử|ữ|ự/gi, 'u');\r\n    slug = slug.replace(/ý|ỳ|ỷ|ỹ|ỵ/gi, 'y');\r\n    slug = slug.replace(/đ/gi, 'd');\r\n    // Xóa các ký tự đặt biệt\r\n    slug = slug.replace(/\\`|\\~|\\!|\\@|\\#|\\||\\$|\\%|\\^|\\&|\\*|\\(|\\)|\\+|\\=|\\,|\\.|\\/|\\?|\\>|\\<|\\'|\\\"|\\:|\\;|_/gi, '');\r\n    // Đổi khoảng trắng thành ký tự gạch ngang\r\n    slug = slug.replace(/ /gi, '-');\r\n    // Đổi nhiều ký tự gạch ngang liên tiếp thành 1 ký tự gạch ngang\r\n    // Phòng trường hợp người nhập vào quá nhiều ký tự trắng\r\n    slug = slug.replace(/\\-\\-\\-\\-\\-/gi, '-');\r\n    slug = slug.replace(/\\-\\-\\-\\-/gi, '-');\r\n    slug = slug.replace(/\\-\\-\\-/gi, '-');\r\n    slug = slug.replace(/\\-\\-/gi, '-');\r\n    // Xóa các ký tự gạch ngang ở đầu và cuối\r\n    slug = '@' + slug + '@';\r\n    slug = slug.replace(/\\@\\-|\\-\\@|\\@/gi, '');\r\n\r\n    return slug;\r\n  }\r\n\r\n  ToFormData(formValue: any) {\r\n    const formData = new FormData();\r\n    for (const key of Object.keys(formValue)) {\r\n      const value = formValue[key];\r\n      let value2;\r\n      if (value) {\r\n        value2 = value;\r\n        if (value2 instanceof Date) {\r\n          value2 = `${(value2 as Date).toLocaleDateString()} ${(value2 as Date).toLocaleTimeString('en-GB')}`\r\n        }\r\n        formData.append(key, value);\r\n      }\r\n    }\r\n\r\n    return formData;\r\n  }\r\n  checkExistHost(url) {\r\n    const check = new RegExp(\"^(http|https)://\", \"i\").test(url);\r\n    return check;\r\n  }\r\n  checkValidImage(data) {\r\n    const valid = new RegExp(\".(?:jpg|gif|png)\", \"g\").test(data);\r\n    return valid;\r\n  }\r\n}","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges, AfterViewInit, ChangeDetectorRef, AfterViewChecked ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PigfarmCoreService } from '../../../services';\r\n\r\n@Component({\r\n  selector: 'app-room-dropdownlist',\r\n  templateUrl: './room-dropdownlist.component.html',\r\n  styleUrls: ['./room-dropdownlist.component.css']\r\n})\r\nexport class RoomDropdownlistComponent implements OnInit, OnChanges, AfterViewChecked {\r\n  @Input() id = \"room-remote\";\r\n  @Input() barnGuid: any;\r\n  @Input() makeOrderGuid: any;\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Input() autoload = true;\r\n\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild(DropDownListComponent) public dropdownObj: DropDownListComponent\r\n  @Output('onblur') onblurChange = new EventEmitter<any>();\r\n\r\n  public data: any;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 100;\r\n  roomGuidName: any;\r\n  skip = 0;\r\n  public onOroom(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, ['roomName', 'roomNo']);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    e.result = e.result.map(x => {\r\n      let name = x.id === 0 ? this.trans.instant(x.name) : x.name;\r\n      return {\r\n        guid: x.guid,\r\n        name: name\r\n      }\r\n    })\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService,\r\n    private cd: ChangeDetectorRef,\r\n    public service: PigfarmCoreService) {\r\n    }\r\n  ngAfterViewChecked(): void {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if(this.autoload) {\r\n      this.service.getRoomsByFarmGuid(localStorage.getItem('farmGuid'), this.barnGuid || \"\", this.makeOrderGuid || '').subscribe(x=> {\r\n        this.data = x;\r\n      })\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.selectedValue === \"\" && this.dropdownObj) {\r\n      this.dropdownObj.value = null;\r\n      this.cd.detectChanges()\r\n    }\r\n    if (changes['selectedValue'] && changes['selectedValue'].currentValue) {\r\n     setTimeout(() => {\r\n      this.selectedValue = changes['selectedValue'].currentValue;\r\n     }, 0);\r\n\r\n    }\r\n    if (changes['barnGuid']) {\r\n      this.service.getRoomsByFarmGuid(localStorage.getItem('farmGuid'), this.barnGuid || \"\", this.makeOrderGuid || '').subscribe(x=> {\r\n        this.data = x;\r\n      })\r\n    }\r\n    if (changes['makeOrderGuid']) {\r\n      this.service.getRoomsByFarmGuid(localStorage.getItem('farmGuid'), this.barnGuid || \"\", this.makeOrderGuid || '').subscribe(x=> {\r\n        this.data = x;\r\n      })\r\n    }\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n    this.roomGuidName = args.itemData?.name;\r\n    this.selectedValueChange.emit(args.itemData?.guid);\r\n    this.ngModelChange.emit(args.itemData?.guid);\r\n\r\n    \r\n  }\r\n  onNgModelChange(value) {\r\n    \r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n  onblur(e) {\r\n    \r\n\r\n    this.onblurChange.emit(e);\r\n  }\r\n}\r\n","\r\nimport { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-culling-tank-dropdownlist',\r\n  templateUrl: './culling-tank-dropdownlist.component.html',\r\n  styleUrls: ['./culling-tank-dropdownlist.component.scss']\r\n})\r\nexport class CullingTankDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"cullingTank-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('cullingTankRemote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 10;\r\n  skip = 0;\r\n  public onOcullingTank(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, ['cullingTankName', 'cullingTankNo']);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    e.result = e.result.map(x => {\r\n      let name = x.id === 0 ? this.trans.instant(x.name) : x.name;\r\n      return {\r\n        guid: x.guid,\r\n        name: name\r\n      }\r\n    })\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.query = new Query()\r\n    .where('farmGuid', 'equal', localStorage.getItem('farmGuid'))\r\n    .where('status', 'equal', 1);\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}CullingTank/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","\r\nimport { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PigfarmCoreService } from '../../../services';\r\n\r\n@Component({\r\n  selector: 'app-pen-dropdownlist-modal',\r\n  templateUrl: './pen-dropdownlist-modal.component.html',\r\n  styleUrls: ['./pen-dropdownlist-modal.component.scss']\r\n})\r\nexport class PenDropdownlistModalComponent implements OnInit, OnChanges {\r\n  @Input() id = \"pen-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = this.trans.instant(\"No Item\");\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('penRemote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 10;\r\n  skip = 0;\r\n  roomGuid = '';\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.search(e.text, ['penName', 'penNo']);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    e.result = e.result.map(x => {\r\n      let name = x.id === 0 ? this.trans.instant(x.name) : x.name;\r\n      return {\r\n        guid: x.guid,\r\n        name: name\r\n      }\r\n    })\r\n}\r\nconstructor(@Inject(\"Env\") private baseUrl,\r\n  public trans: TranslateService,\r\n  public service: PigfarmCoreService\r\n  ) {\r\n\r\n}\r\n\r\nasync ngOnInit() {\r\n  await this.loadData();\r\n}\r\n\r\nasync loadData() {\r\n  const data=  await this.service.getPensByFarmGuidOrRoomGuid(localStorage.getItem(\"farmGuid\"), this.roomGuid).toPromise();\r\n  this.data = data\r\n\r\n\r\n  // this.query = new Query()\r\n  //   .where('farmGuid', 'equal', localStorage.getItem('farmGuid'))\r\n  //   .where('status', 'equal', 1);\r\n  //   if (this.roomGuid) {\r\n  //     this.query.where('roomGuid', 'equal', this.roomGuid);\r\n  //   }\r\n  // this.data = new DataManager({\r\n  //   url: `${this.baseUrl}Pen/GetDataDropdownlist`,\r\n  //   adaptor: new UrlAdaptor,\r\n  //   crossDomain: true,\r\n  // }, this.query.sortBy('penNo'));\r\n}\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges ,Inject } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-my-checkbox',\r\n  templateUrl: './my-checkbox.component.html',\r\n  styleUrls: ['./my-checkbox.component.css']\r\n})\r\nexport class MyCheckboxComponent implements OnInit, OnChanges {\r\n  @Input() checked: any;\r\n  @Input() label: any = '';\r\n  @Output() checkedChange = new EventEmitter<any>();\r\n  checkedValue = false;\r\n  constructor(@Inject(\"Env\") private baseUrl,) { }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.checked != changes.checked.currentValue) {\r\n      this.checked = changes.checked.currentValue;\r\n      this.checkedValue = this.checked === 1 ? true : false;\r\n    }\r\n    if (changes.checked.firstChange) {\r\n      this.checked = changes.checked.currentValue;\r\n      this.checkedValue = this.checked === 1 ? true : false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  onCheckedChange(value) {\r\n    this.checked = value === true ? 1 : 0;\r\n    console.log(this.checked);\r\n    this.checkedChange.emit(this.checked)\r\n  }\r\n}\r\n","\r\nimport { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-thing-dropdownlist',\r\n  templateUrl: './thing-dropdownlist.component.html',\r\n  styleUrls: ['./thing-dropdownlist.component.css']\r\n})\r\nexport class ThingDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"thing-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('thingRemote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 10;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, 'name');\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    console.log(e);\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    .skip(this.skip)\r\n    .take(this.take)\r\n    .where('status', 'equal', 1);\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}Thing/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log(this.selectedValue);\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","\r\nimport { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-account-dropdownlist',\r\n  templateUrl: './account-dropdownlist.component.html',\r\n  styleUrls: ['./account-dropdownlist.component.scss']\r\n})\r\nexport class AccountDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"xacccount-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('xacccountRemote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 100;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, 'name');\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    e.result = e.result.map(x => {\r\n      let name = x.guid === \"\" ? this.trans.instant(x.name) : x.name;\r\n      return {\r\n        guid: x.guid,\r\n        name: name\r\n      }\r\n    })\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    .where('status', 'equal', 1);\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}XAccount/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","export class StatusConstants {\r\n  Default = 1;\r\n  Agree = 2;\r\n  Execute = 3;\r\n  Close = 3;\r\n  Reject = 5;\r\n  Delete = -1;\r\n}\r\nexport class SystemConstant {\r\n    public static ROOT_LEVEL = 1;\r\n    public static BUILDING_LEVEL = 2;\r\n    public static LINE_LEVEL = 3;\r\n}\r\nexport class BOM_TAB_Constant {\r\n  public static Move = 'Move';\r\n  public static Feeding = 'Feeding';\r\n  public static Immunization = 'Immunization';\r\n  public static Treatment = 'Treatment';\r\n  public static Disinfection = 'Disinfection';\r\n  public static VectorControl ='VectorControl';\r\n}\r\nexport class BIO_SECURITY_TAB_Constant {\r\n  public static Detail = 'Detail';\r\n  public static Pen = 'Pen';\r\n  public static Pig = 'Pig';\r\n  public static Record = 'Record';\r\n\r\n}\r\nexport class INVENTORY_TAB_Constant {\r\n  public static Detail = 'Detail';\r\n  public static ChangeThing = 'Change Thing';\r\n  public static ChangeMaterial = 'Change Material';\r\n  public static Scrap = 'Scrapn';\r\n\r\n}\r\nexport class ACCEPTANCE_TAB_Constant {\r\n  public static Detail = 'Detail';\r\n  public static Check = 'Check';\r\n  public static CheckIn = 'Check In';\r\n  public static Inspection = 'Inspection';\r\n\r\n}\r\nexport class BIO_SECURITY_MASTER_PIG_TYPE_Constant {\r\n  public static Sow = 'Sow';\r\n  public static Boar = 'Boar';\r\n  public static NewBoar = 'New Boar';\r\n  public static Gilt = 'Gilt';\r\n  public static Suckling = 'Suckling';\r\n  public static Pig = 'Pig';\r\n  public static Finisher = 'Finisher';\r\n  public static Nursery = 'Nursery';\r\n  public static Grower = 'Grower';\r\n\r\n}\r\nexport class REPAIR_TAB_Constant {\r\n  public static Detail = 'Detail';\r\n  public static Record = 'Record';\r\n}\r\nexport class SALE_ORDER_TAB_Constant {\r\n  public static Detail = 'Detail';\r\n  public static CheckOut = 'Check Out';\r\n}\r\nexport class REQUISITION_TAB_Constant {\r\n  public static Detail = 'Detail';\r\n  public static Feed = 'Feed';\r\n  public static Material = 'Material';\r\n  public static Medicine = 'Medicine';\r\n  public static Thing = 'Thing';\r\n}\r\nexport class PIG_DISEASE_TAB_Constant {\r\n  public static Culling = 'Culling';\r\n  public static Detail = 'Detail';\r\n}\r\n\r\nexport class PIG_HOUSE_CLEANING_TAB_Constant {\r\n  public static Plan = 'Plan';\r\n  public static Detail = 'Detail';\r\n}\r\nexport class PIG_FARM_VECTOR_TAB_Constant {\r\n  public static Plan = 'Plan';\r\n  public static Detail = 'Detail';\r\n}\r\nexport class PIG_SETTING_TAB_Constant {\r\n  public static Code = 'Code';\r\n  public static Detail = 'Detail';\r\n  public static Testing = 'Testing';\r\n  public static Genetic = 'Genetic';\r\n  public static Pedigree = 'Pedigree';\r\n\r\n}\r\nexport class RECORD_TAB_Constant {\r\n  public static Detail = 'Detail';\r\n  public static Move = 'Move';\r\n  public static Feeding = 'Feeding';\r\n  public static Death = 'Death';\r\n  public static Culling = 'Culling';\r\n  public static EarTag = 'EarTag';\r\n  public static Weighing ='Weighing';\r\n}\r\nexport class MessageConstants {\r\n  public static SYSTEM_ERROR_MSG = 'An error occurred while connecting to the server';\r\n  public static CONFIRM_LOCK_MSG = 'Are you sure you want to lock this account?';\r\n  public static CONFIRM_UNLOCK_MSG = 'Are you sure you want to unlock this account?';\r\n\r\n  public static CONFIRM_LOCK_STATUS_MSG = 'Are you sure you want to lock this record?';\r\n  public static CONFIRM_UNLOCK_STATUS_MSG = 'Are you sure you want to unlock this record?';\r\n  public static CONFIRM_STATUS_TITLE_MSG = 'Lock/Unlock record?';\r\n\r\n  public static CONFIRM_FEEDBACK_STATUS_MSG = 'Are you sure you want to reply to this message??';\r\n  public static CONFIRM_UNFEEDBACK_STATUS_MSG = 'Are you sure you want to change the status of this message??';\r\n  public static CONFIRM_FEEDBACK_STATUS_TITLE_MSG = 'Reply/Unresponsive to mail?';\r\n\r\n  public static CONFIRM_DELETE_MSG = 'Are you sure you want to delete this record?';\r\n  public static CONFIRM_DELETE_RANGE_MSG = 'Are you sure you want to delete these records?';\r\n  public static CONFIRM_LOCK_TITLE_MSG = 'Lock/Unlock account?';\r\n  public static CONFIRM_TITLE_MSG = 'Delete record?';\r\n  public static CONFIRM_DELETE_RANGE_TITLE_MSG = 'Delete multiple records?';\r\n  public static CONFIRM_PAY_MSG = 'Are you sure you want to pay this?';\r\n  public static CONFIRM_SET_DEFAULT_MSG = 'Are you sure you want to default to this record?';\r\n  public static CONFIRM_SET_IS_HOME_MSG = 'Are you sure you want to display this record on the homepage?';\r\n  public static CONFIRM_SET_NOT_IS_HOME_MSG = 'Are you sure you want to undisplay this record on the homepage?';\r\n  public static CONFIRM_PUBLISH_POST = 'Are you sure you want to publish this article??';\r\n  public static LOGIN_AGAIN_MSG = 'Your login session is over. Please login again.';\r\n  public static CREATED_OK_MSG = 'Create Successfully';\r\n  public static UPDATED_OK_MSG = 'Update successfully';\r\n  public static DELETED_OK_MSG = 'Delete successfully';\r\n  public static LOCKED_OK_MSG = 'Locked successfully';\r\n  public static UNLOCKED_OK_MSG = 'Unlock successfully';\r\n  public static SET_DEFAULT_OK_MSG = 'Default set success';\r\n  public static SET_IS_HOME_OK_MSG = 'Set homepage display successfully';\r\n  public static SET_NOT_IS_HOME_OK_MSG = 'Successfully undisplaying homepage';\r\n  public static FORBIDDEN = 'You are blocked from accessing';\r\n  public static CANNOT_EDIT_MULTIPLE = 'You cannot edit more than 1 record.';\r\n  public static NOT_CHOOSE_ANY_RECORD = 'You must select at least one record.';\r\n  public static UPLOAD_OK_MSG = 'Upload successful';\r\n  public static REQUIRED_ERROR_MSG = 'Data cannot be empty';\r\n  public static RELOAD_MENU = 'Reload menu';\r\n  public static SELECT_RECORD = 'Please select at least 1 record to delete!';\r\n\r\n  public static SEND_MAIL_OK_MSG = 'Email was sent. Please check your email';\r\n  public static SEND_MAIL_FAILED_MSG = 'Failure sending email error!';\r\n  public static CREATE_TITLE = 'Create record';\r\n  public static CREATE_MESSAGE = 'Are you sure you want to create this record?';\r\n  public static UPDATE_TITLE = 'Update record';\r\n  public static UPDATE_MESSAGE = 'Are you sure you want to update this record?';\r\n  public static DELETE_TITLE = 'Delete record';\r\n  public static DELETE_MESSAGE = 'Are you sure you want to delete this record?';\r\n  public static CANCEL_MESSAGE = 'Your data is safe!';\r\n  public static SERVER_ERROR = 'Server Error!';\r\n  public static EXIST_MESSAGE = 'The key already exist!';\r\n  public static EXIST_USERNAME_MESSAGE = 'The username already exist!';\r\n  public static CHOOSE_FARM_MESSAGE = 'Please choose a farm!';\r\n  public static SELECT_ORDER_MESSAGE = 'Please select a order!';\r\n  public static VALID_CHANGE_PASSWORD_MSG = \"The new password and confirm password are empty!\";\r\n  public static CONFIRM_CHANGE_PASSWORD_MSG = \"Password and Confirm Password Validation\";\r\n  public static YES_MSG = \"Yes\";\r\n  public static NO_MSG = \"No\";\r\n\r\n}\r\nexport class ActionConstants {\r\n  public static ADD = 'add';\r\n  public static EDIT = 'edit';\r\n  public static VIEW = 'getall';\r\n  public static DELETE_RANGE = 'deleterange';\r\n  public static DELETE = 'delete';\r\n  public static EDIT_TITLE = 'Edit';\r\n  public static ADD_TITLE = 'Add new';\r\n  public static Add = 'add';\r\n  public static Edit = 'edit';\r\n\r\n}\r\nexport class ImagePathConstants {\r\n  public static NO_IMAGE = '/assets/images/default-avatar-male.png';\r\n  public static NO_IMAGE_COMPONENT = '/assets/images/pages/content-img-4.jpg';\r\n  public static NO_IMAGE_ACTION_COMPONENT = '/assets/images/no-image.png';\r\n}\r\nexport class SystemConfigConst {\r\n  public static Order_Amount = \"ORDER_AMOUNT\";\r\n  public static Order = \"Order\";\r\n  public static Pig_NO = \"ID_NO\";\r\n  public static Pig = \"Pig\";\r\n  public static GrowDays = \"GrowDays\";\r\n  public static Finisher = \"Finisher\";\r\n  public static Grower = \"Grower\";\r\n  public static Nursry = \"Nursery\";\r\n  public static Sucking = \"Suckling\";\r\n  public static Sale = \"Sale\";\r\n}","export class RoleConstant {\r\n  public static ADMIN = 1;\r\n  public static SUPER_ADMIN = 8;\r\n  public static SUPERVISOR = 2;\r\n  public static STAFF = 3;\r\n  public static WORKER = 4;\r\n  public static DISPATCHER = 6;\r\n}\r\n","export class ActionConstant {\r\n  public static CREATE = 'Add';\r\n  public static EDIT = 'Edit';\r\n  public static DELETE = 'Delete';\r\n  public static VIEW = 'Read';\r\n  public static APPROVAL = 'APPROVAL';\r\n  public static EXCEL_EXPORT = 'ExcelExport';\r\n  public static EXCEL_IMPORT = 'EXCEL_IMPORT';\r\n  public static PRINT = 'PRINT';\r\n  public static DONE = 'DONE';\r\n  public static FINISH = 'FINISH';\r\n  public static RELEASE = 'RELEASE';\r\n  public static REJECT = 'REJECT';\r\n  public static CLONE = 'CLONE';\r\n}\r\n","import { Component, Input, OnInit, OnChanges, SimpleChanges, Output, EventEmitter ,Inject } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MessageConstants } from '../../../_core/_constants';\r\nimport {\r\n  DataManager,\r\n  Query,\r\n  ODataV4Adaptor,\r\n  UrlAdaptor,\r\n} from \"@syncfusion/ej2-data\";\r\nimport { AlertifyService } from '../../../services/alertify.service';\r\nimport { PigfarmCoreService } from '../../../services/pigfarm-core.service';\r\n@Component({\r\n  selector: 'app-multi-pig-grid',\r\n  templateUrl: './multi-pig-grid.component.html',\r\n  styleUrls: ['./multi-pig-grid.component.scss']\r\n})\r\nexport class MultiPigGridComponent implements OnInit , OnChanges {\r\n  @Input() height = 300;\r\n  @Input() type = '';\r\n  @Input() recordGuid = '';\r\n  @Input() penGuid = '';\r\n  @Input() checked = '';\r\n  @Output('onCheckedChange') onCheckedChange = new EventEmitter<any>();\r\n\r\n  \r\n  pageSettings = {\r\n    pageCount: 10,\r\n    pageSizes: 20,\r\n    enableQueryString: true,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    enableScroll: true,\r\n  };\r\n  searchOptions = { fields: ['name'], operator: 'contains', ignoreCase: true };\r\n  model: any;\r\n  alert = {\r\n    updateMessage: this.translate.instant(MessageConstants.UPDATE_MESSAGE),\r\n    updateTitle: this.translate.instant(MessageConstants.UPDATE_TITLE),\r\n    createMessage: this.translate.instant(MessageConstants.CREATE_MESSAGE),\r\n    createTitle: this.translate.instant(MessageConstants.CREATE_TITLE),\r\n    deleteMessage: this.translate.instant(MessageConstants.DELETE_MESSAGE),\r\n    deleteTitle: this.translate.instant(MessageConstants.DELETE_TITLE),\r\n    cancelMessage: this.translate.instant(MessageConstants.CANCEL_MESSAGE),\r\n    serverError: this.translate.instant(MessageConstants.SERVER_ERROR),\r\n    deleted_ok_msg: this.translate.instant(MessageConstants.DELETED_OK_MSG),\r\n    created_ok_msg: this.translate.instant(MessageConstants.CREATED_OK_MSG),\r\n    updated_ok_msg: this.translate.instant(MessageConstants.UPDATED_OK_MSG),\r\n    system_error_msg: this.translate.instant(MessageConstants.SYSTEM_ERROR_MSG),\r\n    exist_message: this.translate.instant(MessageConstants.EXIST_MESSAGE),\r\n    choose_farm_message: this.translate.instant(\r\n      MessageConstants.CHOOSE_FARM_MESSAGE\r\n    ),\r\n    select_order_message: this.translate.instant(\r\n      MessageConstants.SELECT_ORDER_MESSAGE\r\n    ),\r\n    yes_message: this.translate.instant(MessageConstants.YES_MSG),\r\n    no_message: this.translate.instant(MessageConstants.NO_MSG),\r\n  };\r\n  @Input() pigData: any;\r\n  constructor(@Inject(\"Env\") private baseUrl,\r\n    private service: PigfarmCoreService,\r\n    private alertify: AlertifyService,\r\n    private translate: TranslateService\r\n  ) { }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // if (changes.pigData.currentValue != changes.pigData.previousValue) {\r\n    //   this.pigData = changes.pigData.currentValue;\r\n    // }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  onChangeChecked(e, data) {\r\n    let checked = e.checked;\r\n    this.onCheckedChange.emit(e);\r\n    this.toggle(checked, data.guid);\r\n  }\r\n\r\n  toggle(checked, pigGuid) {\r\n    if (checked === false && this.recordGuid) {\r\n      this.model = {\r\n        recordGuid: this.recordGuid || \"\",\r\n        pigGuid,\r\n        type: this.type\r\n      };\r\n      this.service.removeRecord2Pig(this.model).subscribe(\r\n        (res) => {\r\n          if (res.success === true) {\r\n            this.alertify.success(this.alert.deleted_ok_msg);\r\n            this.loadDataByRoom();\r\n          } else {\r\n            this.alertify.warning(this.alert.system_error_msg);\r\n          }\r\n        },\r\n        (error) => {\r\n          this.alertify.warning(this.alert.system_error_msg);\r\n        }\r\n      );\r\n    } else {\r\n      if (this.recordGuid) {\r\n        this.model = {\r\n          recordGuid: this.recordGuid || \"\",\r\n          pigGuid,\r\n          type: this.type\r\n        };\r\n        this.service.addRecord2Pig(this.model).subscribe(\r\n          (res) => {\r\n            if (res.success === true) {\r\n              this.alertify.success(this.alert.created_ok_msg);\r\n              this.loadDataByRoom();\r\n            } else {\r\n              this.alertify.warning(this.alert.system_error_msg);\r\n            }\r\n          },\r\n          (error) => {\r\n            this.alertify.warning(this.alert.system_error_msg);\r\n          }\r\n        );\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  loadDataByRoom() {\r\n    const accessToken = localStorage.getItem(\"token\");\r\n    this.pigData = new DataManager({\r\n      url: `${this.baseUrl}Pen/GetPigsByPen?penGuid=${\r\n        this.penGuid || \"\"\r\n      }&recordGuid=${this.recordGuid || \"\"}&type=${this.type || \"\"}`,\r\n      adaptor: new UrlAdaptor(),\r\n      headers: [{ authorization: `Bearer ${accessToken}` }],\r\n    });\r\n  }\r\n}\r\n","\r\nimport { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-record2-pen',\r\n  templateUrl: './record2-pen.component.html',\r\n  styleUrls: ['./record2-pen.component.css']\r\n})\r\nexport class Record2PenComponent implements OnInit, OnChanges {\r\n  @Input() id = \"pen2-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() roomGuid = false;\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @Output('onblur') onblurChange = new EventEmitter<any>();\r\n  @ViewChild('pen2Remote') public dropdownObj: DropDownListComponent\r\n  @Input() data: DataManager;\r\n  @Input() query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 10;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, ['penName', 'penNo']);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    e.result = e.result.map(x => {\r\n      let name = x.id === 0 ? this.trans.instant(x.name) : x.name;\r\n      return {\r\n        guid: x.guid,\r\n        name: name\r\n      }\r\n    })\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n  onblur(e) {\r\n    this.onblurChange.emit(e);\r\n  }\r\n}\r\n","import { Component, OnInit ,Inject } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-record2-room',\r\n  templateUrl: './record2-room.component.html',\r\n  styleUrls: ['./record2-room.component.css']\r\n})\r\nexport class Record2RoomComponent implements OnInit {\r\n\r\n  constructor(@Inject(\"Env\") private baseUrl,) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","\r\nimport { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges, ChangeDetectorRef, AfterViewChecked, OnDestroy ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PigfarmCoreService } from '../../../services';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-makeorder-dropdownlist',\r\n  templateUrl: './makeorder-dropdownlist.component.html',\r\n  styleUrls: ['./makeorder-dropdownlist.component.scss']\r\n})\r\nexport class MakeorderDropdownlistComponent  implements OnInit, OnChanges, AfterViewChecked , OnDestroy{\r\n  @Input() id = \"makeorder-remote\";\r\n  @Input() selectedValue: any = '';\r\n  @Input() placeholder = \"\";\r\n  @Input() pigType = \"\";\r\n  @Input() disabled = false;\r\n  @Input() popupWidth = 'auto' ;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('remote') public dropdownObj: DropDownListComponent\r\n  public data: any;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'orderName', value: 'guid' };\r\n  \r\n  subscription: Subscription\r\n  subscription2: Subscription\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService,\r\n    private cd: ChangeDetectorRef,\r\n    public service: PigfarmCoreService) {}\r\n  ngOnDestroy(): void {\r\n    this.subscription?.unsubscribe();\r\n    this.subscription2?.unsubscribe();\r\n  }\r\n  ngAfterViewChecked(): void {\r\n    this.selectedValue = this.selectedValue || \"\";\r\n    this.cd.detectChanges()\r\n  }\r\n  ngOnInit() {\r\n    if (!this.pigType) {\r\n      this.loadData();\r\n    }\r\n  }\r\n  loadData() {\r\n   this.subscription = this.service.getMakeOrderByFarmGuid(localStorage.getItem('farmGuid')).subscribe(x=> {\r\n      this.data = x;\r\n    })\r\n  }\r\n\r\n  loadDataByPigType() {\r\n    this.subscription2 = this.service.getMakeOrderByFarmGuidAndPigType(localStorage.getItem('farmGuid'), this.pigType).subscribe(x=> {\r\n       this.data = x;\r\n     })\r\n   }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['selectedValue']) {\r\n      this.selectedValueChange.emit(this.selectedValue);\r\n    }\r\n    if (changes['pigType'] && changes['pigType'].currentValue) {\r\n     this.loadDataByPigType();\r\n    }\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n    this.selectedValueChange.emit(args.value);\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n  SimpleChanges,\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  OnDestroy,\r\n  Inject,\r\n  ChangeDetectionStrategy,\r\n} from \"@angular/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { EditService, GridComponent } from \"@syncfusion/ej2-angular-grids\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { PigfarmCoreService } from '../../../services';\r\n\r\n@Component({\r\n  selector: \"app-selectedpig-grid\",\r\n  templateUrl: \"./selectedpig-grid.component.html\",\r\n  styleUrls: [\"./selectedpig-grid.component.scss\"],\r\n  providers: [EditService]\r\n})\r\nexport class SelectedpigGridComponent\r\n  implements OnInit, AfterViewInit, OnDestroy\r\n{\r\n  @Input() pigName: any = 'Gilt';\r\n  @Input() selectedPigDataSource: any = [];\r\n  @Input() recordNextDataSource: any = [\"CullingSale\", \"Chemical\", \"Buried\"];\r\n  @Input() recordNext2DataSource: any = [\"CullingSale\", \"Chemical\", \"Buried\"];\r\n  searchOptions = { fields: [\"name\"], operator: \"contains\", ignoreCase: true };\r\n  @ViewChild(\"grid\") public grid: GridComponent;\r\n  @Output() avgWeightChange = new EventEmitter();\r\n  @Output() totalWeightChange = new EventEmitter();\r\n  @Output() avgAmountChange = new EventEmitter();\r\n  @Output() totalAmountChange = new EventEmitter();\r\n  @Output() selectedPigDataSourceChange = new EventEmitter();\r\n\r\n  @Output() maleAvgWeightChange = new EventEmitter();\r\n  @Output() maleTotalWeightChange = new EventEmitter();\r\n  @Output() maleTotalSelectedChange = new EventEmitter();\r\n\r\n  @Output() femaleAvgWeightChange = new EventEmitter();\r\n  @Output() femaleTotalWeightChange = new EventEmitter();\r\n  @Output() femaleTotalSelectedChange = new EventEmitter();\r\n\r\n  pageSettings: any;\r\n  @Input() visibleNextRoom = false;\r\n  @Input() visibleNextPen = false;\r\n  @Input() visibleNext2 = false;\r\n  @Input() visibleButton = false;\r\n  @Input() visibleNext = true;\r\n  @Input() visibleAmount = true;\r\n  @Input() visibleDisease = true;\r\n  @Input() visibleWeight = true;\r\n  @Input() visibleValue = false;\r\n  @Input() visiblePigSex = false;\r\n\r\n  @Input() visibleSourceGuid = false;\r\n  @Input() visibleSource1Guid = false;\r\n  @Input() visibleSource2Guid = false;\r\n  @Input() visibleSource3Guid = false;\r\n  @Input() visibleSemenConcentration = false;\r\n  @Input() visibleSemenVolume = false;\r\n  @Input() visibleMalformationRate = false;\r\n  @Input() visiblePig = true;\r\n  @Input()  visibleRfid: any = false;\r\n\r\n  @Input() valueLabel = \"\";\r\n  @Input() pigLabel = \"Pig\";\r\n  @Input() next1Label = \"Next1\";\r\n  @Input() next2Label = \"Next2\";\r\n  editSettingsPig = {\r\n    showDeleteConfirmDialog: false,\r\n    allowEditing: true,\r\n    allowAdding: true,\r\n    allowDeleting: true,\r\n    mode: \"Normal\",\r\n  };\r\n  @Input() avgWeight: number;\r\n  @Input() totalWeight: number;\r\n  @Input() totalAmount: number;\r\n  @Input() avgAmount: number;\r\n  @Input() codeType: any;\r\n  @Input() codeType2: any;\r\n  @Input() maleAvgWeight: number;\r\n  @Input() maleTotalWeight: number;\r\n  @Input() maleTotalSelected: number;\r\n\r\n  @Input() femaleAvgWeight: number;\r\n  @Input() femaleTotalWeight: number;\r\n  @Input() femaleTotalSelected: number;\r\n\r\n  index: any;\r\n  diseaseItem: any;\r\n  recordNext: any;\r\n  recordNextndex: any;\r\n  recordNext2: any;\r\n  recordNextndex2: any;\r\n  recordNext2Item: any;\r\n  recordNextItem: any;\r\n  pigSexItem: any;\r\n  pigSexIndex: any;\r\n  subscription: Subscription = new Subscription();\r\n  nextRoomItem: any;\r\n  nextPenItem: any;\r\n  constructor(@Inject(\"Env\") private baseUrl,\r\n    private trans: TranslateService,\r\n    private cd: ChangeDetectorRef,\r\n    private service: PigfarmCoreService\r\n  ) {\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n    let pageSize = Number(user?.pageSizeSettingValue) || 10;\r\n    let pageSizesTemp = user?.pageSizeSettingList || [\"5\", \"10\", \"12\", \"20\"];\r\n    let pageSizes = pageSizesTemp.map((x) => +x);\r\n    this.pageSettings = {\r\n      pageSizes: pageSizes,\r\n      enableQueryString: true,\r\n      pageSize: pageSize,\r\n      currentPage: 1,\r\n      enableScroll: true,\r\n    };\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    let buttons = document.getElementsByClassName(\"btn\");\r\n    for (let button of Array.from(buttons)) {\r\n      button.addEventListener(\"click\", () => {\r\n        this.grid?.endEdit();\r\n      });\r\n    }\r\n\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n    if (changes[\"selectedPigDataSource\"]) {\r\n      this.caculator();\r\n      this.cd.detectChanges();\r\n    }\r\n \r\n  }\r\n  created() {\r\n    this.subscription.add(\r\n      this.service.currentRecordLabel.subscribe((data: any) => {\r\n        if (data) {\r\n          this.valueLabel = data;\r\n          this.grid.refreshHeader();\r\n\r\n        }\r\n      })\r\n    );\r\n  }\r\n  ngOnInit() {\r\n    this.totalAmount = 0;\r\n    this.totalWeight = 0;\r\n    this.avgWeight = 0;\r\n    this.femaleTotalWeight = 0;\r\n    this.maleTotalWeight = 0;\r\n    this.maleAvgWeight = 0;\r\n    this.maleAvgWeight = 0;\r\n    \r\n\r\n  }\r\n  actionBeginPig(e) {\r\n    if (e.action === \"edit\" && e.requestType === \"save\") {\r\n      if (this.diseaseItem) {\r\n        e.data.recordDisease = this.diseaseItem?.guid;\r\n        e.data.recordDiseaseName = this.diseaseItem?.name;\r\n      }\r\n      if (this.recordNextItem) {\r\n        e.data.recordNext = this.recordNextItem?.guid;\r\n        e.data.recordNextName = this.recordNextItem?.name;\r\n      }\r\n      if (this.recordNext2Item) {\r\n        e.data.recordNext2 = this.recordNext2Item?.guid;\r\n        e.data.recordNext2Name = this.recordNext2Item?.name;\r\n      }\r\n      if (this.nextRoomItem) {\r\n        e.data.nextRoom = this.nextRoomItem?.guid;\r\n        e.data.nextRoomName = this.nextRoomItem?.name;\r\n      }\r\n      const index = e.rowIndex;\r\n      if (index !== -1) {\r\n        this.selectedPigDataSource[index].rfid = e.data.rfid;\r\n        this.selectedPigDataSource[index].recordValue = e.data.recordValue;\r\n        this.selectedPigDataSource[index].recordAmount = e.data.recordAmount;\r\n        this.selectedPigDataSource[index].recordWeight = e.data.recordWeight;\r\n        this.selectedPigDataSource[index].sourceGuid = e.data.sourceGuid;\r\n        this.selectedPigDataSource[index].source1Guid = e.data.source1Guid;\r\n        this.selectedPigDataSource[index].source2Guid = e.data.source2Guid;\r\n        this.selectedPigDataSource[index].source3Guid = e.data.source3Guid;\r\n        this.selectedPigDataSource[index].semenConcentration = e.data.semenConcentration;\r\n        this.selectedPigDataSource[index].semenVolume = e.data.semenVolume;\r\n        this.selectedPigDataSource[index].malformationRate = e.data.malformationRate;\r\n\r\n        this.selectedPigDataSource[index].recordNext =\r\n          this.recordNextItem?.guid;\r\n        this.selectedPigDataSource[index].recordNext2 =\r\n          this.recordNext2Item?.guid;\r\n        this.selectedPigDataSource[index].recordNextName =\r\n          this.recordNextItem?.name;\r\n        this.selectedPigDataSource[index].recordNext2Name =\r\n          this.recordNext2Item?.name;\r\n\r\n          this.selectedPigDataSource[index].nextRoomName = this.nextRoomItem?.name;\r\n          this.selectedPigDataSource[index].nextPenName = this.nextPenItem?.name;\r\n          this.cd.detectChanges();\r\n      \r\n        this.caculator();\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangeRecordNext(e, data) {\r\n    if (e.isInteracted) {\r\n      data.recordNext = e.itemData?.guid;\r\n      data.recordNextName = e.itemData?.name;\r\n      this.recordNextItem = e.itemData;\r\n\r\n      this.recordNextndex = this.selectedPigDataSource.findIndex(\r\n        (obj) => obj.pigGuid === data.pigGuid\r\n      );\r\n      if (this.recordNextndex !== -1) {\r\n        this.selectedPigDataSource[this.recordNextndex].recordNext =\r\n          e.itemData?.guid;\r\n        this.selectedPigDataSource[this.recordNextndex].recordNextName =\r\n          e.itemData?.name;\r\n        this.cd.detectChanges();\r\n      }\r\n    }\r\n  }\r\n  onChangeRecordNext2(e, data) {\r\n    if (e.isInteracted) {\r\n      data.recordNext2 = e.itemData?.guid;\r\n      data.recordNext2Name = e.itemData?.name;\r\n      this.recordNext2Item = e.itemData;\r\n\r\n      this.recordNextndex2 = this.selectedPigDataSource.findIndex(\r\n        (obj) => obj.pigGuid === data.pigGuid\r\n      );\r\n      if (this.recordNextndex2 !== -1) {\r\n        this.selectedPigDataSource[this.recordNextndex2].recordNext2 =\r\n          e.itemData?.guid;\r\n        this.selectedPigDataSource[this.recordNextndex2].recordNext2Name =\r\n          e.itemData?.name;\r\n        this.cd.detectChanges();\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangePigSex(e, data) {\r\n    if (e.isInteracted) {\r\n      data.pigSex = e.itemData?.guid;\r\n      data.pigSexName = e.itemData?.name;\r\n      this.pigSexItem = e.itemData;\r\n\r\n      this.pigSexIndex = this.selectedPigDataSource.findIndex(\r\n        (obj) => obj.pigGuid === data.pigGuid\r\n      );\r\n      if (this.pigSexIndex !== -1) {\r\n        this.selectedPigDataSource[this.pigSexIndex].pigSex = e.itemData?.guid;\r\n        this.selectedPigDataSource[this.pigSexIndex].pigSexName =\r\n          e.itemData?.name;\r\n        this.cd.detectChanges();\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangeDisease(e, data) {\r\n    if (e.isInteracted) {\r\n      data.recordDisease = e.itemData?.guid;\r\n      data.recordDiseaseName = e.itemData?.name;\r\n      this.diseaseItem = e.itemData;\r\n      this.index = this.selectedPigDataSource.findIndex(\r\n        (obj) => obj.pigGuid === data.pigGuid\r\n      );\r\n      if (this.index !== -1) {\r\n        this.selectedPigDataSource[this.index].recordDisease = e.itemData?.guid;\r\n        this.selectedPigDataSource[this.index].recordDiseaseName =\r\n          e.itemData?.name;\r\n        // this.selectedPigDataSourceChange.emit(this.selectedPigDataSource);\r\n        this.cd.detectChanges();\r\n\r\n      }\r\n    }\r\n  }\r\n  onChangeNextRoom(e, data) {\r\n    if (e.isInteracted) {\r\n      data.nextRoom = e.itemData?.guid;\r\n      data.nextRoomName = e.itemData?.name;\r\n      this.nextRoomItem = e.itemData;\r\n      const index = this.selectedPigDataSource.findIndex(\r\n        (obj) => obj.nextRoom === data.nextRoom\r\n      );\r\n      if (index !== -1) {\r\n        this.selectedPigDataSource[index].nextRoom = e.itemData?.guid;\r\n        this.selectedPigDataSource[index].nextRoomName =\r\n          e.itemData?.name;\r\n        // this.selectedPigDataSourceChange.emit(this.selectedPigDataSource);\r\n        this.cd.detectChanges();\r\n\r\n      }\r\n    }\r\n  }\r\n  onChangeNextPen(e, data) {\r\n    if (e.isInteracted) {\r\n      data.nextPen = e.itemData?.guid;\r\n      data.nextPenName = e.itemData?.name;\r\n      this.nextPenItem = e.itemData;\r\n      const index = this.selectedPigDataSource.findIndex(\r\n        (obj) => obj.nextPen === data.nextPen\r\n      );\r\n      if (index !== -1) {\r\n        this.selectedPigDataSource[index].nextPen = e.itemData?.guid;\r\n        this.selectedPigDataSource[index].nextPenName =\r\n          e.itemData?.name;\r\n        // this.selectedPigDataSourceChange.emit(this.selectedPigDataSource);\r\n        this.cd.detectChanges();\r\n\r\n      }\r\n    }\r\n  }\r\n  average = (nums, length) => {\r\n    if ((nums as []).length > 0) {\r\n      return nums.reduce((a, b) => a + b) / length;\r\n    }\r\n    return 0;\r\n  };\r\n  total = (nums) => {\r\n    if ((nums as []).length > 0) {\r\n      return nums.reduce((a, b) => a + b);\r\n    }\r\n    return 0;\r\n  };\r\n  caculator() {\r\n    const weights = this.selectedPigDataSource\r\n      .filter((x) => x.recordWeight > 0)\r\n      .map((x) => x.recordWeight);\r\n    const amounts = this.selectedPigDataSource\r\n      .filter((x) => x.recordAmount > 0)\r\n      .map((x) => x.recordAmount);\r\n\r\n    let length = this.selectedPigDataSource.length;\r\n    this.avgWeight = +this.average(weights, length).toFixed(0);\r\n    this.avgAmount = +this.average(amounts, length).toFixed(0);\r\n    this.totalWeight = +this.total(weights).toFixed(0);\r\n    this.totalAmount = +this.total(amounts).toFixed(0);\r\n\r\n    const maleWeights = this.selectedPigDataSource\r\n      .filter((x) => x.pigSex == \"1\")\r\n      .map((x) => x.recordWeight);\r\n\r\n    const femaleWeights = this.selectedPigDataSource\r\n      .filter((x) => x.pigSex !== \"1\")\r\n      .map((x) => x.recordWeight);\r\n\r\n    let femalelength = femaleWeights.length;\r\n    this.femaleAvgWeight = +this.average(femaleWeights, femalelength).toFixed(\r\n      0\r\n    );\r\n    this.femaleTotalWeight = +this.total(femaleWeights).toFixed(0);\r\n    this.femaleTotalSelected = femalelength;\r\n\r\n    this.femaleAvgWeightChange.emit(this.femaleAvgWeight);\r\n    this.femaleTotalWeightChange.emit(this.femaleTotalWeight);\r\n    this.femaleTotalSelectedChange.emit(this.femaleTotalSelected);\r\n\r\n    let malelength = maleWeights.length;\r\n    this.maleAvgWeight = +this.average(maleWeights, malelength).toFixed(0);\r\n    this.maleTotalWeight = +this.total(maleWeights).toFixed(0);\r\n    this.maleTotalSelected = malelength;\r\n\r\n    this.maleAvgWeightChange.emit(this.maleAvgWeight);\r\n    this.maleTotalWeightChange.emit(this.maleTotalWeight);\r\n    this.maleTotalSelectedChange.emit(this.maleTotalSelected);\r\n\r\n    this.selectedPigDataSourceChange.emit(this.selectedPigDataSource);\r\n    this.avgAmountChange.emit(this.avgAmount);\r\n    this.avgWeightChange.emit(this.avgWeight);\r\n    this.totalAmountChange.emit(this.totalAmount);\r\n    this.totalWeightChange.emit(this.totalWeight);\r\n    this.cd.detectChanges();\r\n\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-treatment-dropdownlist',\r\n  templateUrl: './treatment-dropdownlist.component.html',\r\n  styleUrls: ['./treatment-dropdownlist.component.scss']\r\n})\r\nexport class TreatmentDropdownlistComponent implements OnInit {\r\n  @Input() id = \"treatmentMaster-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @Input() popupWidth: any = '350px';\r\n  @ViewChild('treatmentMasterRemote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 1000;\r\n  skip = 0;\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, 'name');\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    console.log(e);\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}TreatmentMaster/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n    this.selectedValueChange.emit(args.itemData?.guid)\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges, ChangeDetectorRef, AfterViewChecked ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PigfarmCoreService } from '../../../services';\r\n\r\n@Component({\r\n  selector: 'app-makeorder-dropdownlist-toolbar',\r\n  templateUrl: './makeorder-dropdownlist-toolbar.component.html',\r\n  styleUrls: ['./makeorder-dropdownlist-toolbar.component.scss']\r\n})\r\nexport class MakeorderDropdownlistToolbarComponent implements OnInit, OnChanges, AfterViewChecked {\r\n  @Input() id = \"makeorder-remote\";\r\n  @Input() selectedValue: any = '';\r\n  @Input() placeholder = \"\";\r\n  @Input() popupWidth: any = '350px';\r\n  @Input() popupHeight='200px';\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('remote') public dropdownObj: DropDownListComponent\r\n  public data: any;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'orderName', value: 'guid' };\r\n  \r\n\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService,\r\n    private cd: ChangeDetectorRef,\r\n    public service: PigfarmCoreService) {}\r\n  ngAfterViewChecked(): void {\r\n    this.selectedValue = this.selectedValue || \"\";\r\n    this.cd.detectChanges()\r\n  }\r\n  ngOnInit() {\r\n    this.service.getMakeOrderByFarmGuid(localStorage.getItem('farmGuid')).subscribe(x=> {\r\n      this.data = x;\r\n    })\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['selectedValue']) {\r\n      this.selectedValueChange.emit(this.selectedValue);\r\n    }\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n    this.selectedValueChange.emit(args.value);\r\n  }\r\n\r\n}\r\n","\r\nimport { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-xaccount-group',\r\n  templateUrl: './xaccount-group.component.html',\r\n  styleUrls: ['./xaccount-group.component.scss']\r\n})\r\nexport class XaccountGroupComponent  implements OnInit, OnChanges {\r\n  @Input() id = \"xacccount-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('xacccountRemote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 100;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, 'groupName');\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    e.result = e.result.map(x => {\r\n      let name = x.guid === \"\" ? this.trans.instant(x.groupName) : x.groupName;\r\n      return {\r\n        guid: x.guid,\r\n        name: name\r\n      }\r\n    })\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    .where('status', 'equal', 1);\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}XAccountGroup/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log(this.selectedValue);\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","\r\nimport { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges, ChangeDetectorRef, AfterViewChecked ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PigfarmCoreService } from '../../../services';\r\n\r\n@Component({\r\n  selector: 'app-recordsale-dropdownlist',\r\n  templateUrl: './recordsale-dropdownlist.component.html',\r\n  styleUrls: ['./recordsale-dropdownlist.component.scss']\r\n})\r\nexport class RecordsaleDropdownlistComponent implements OnInit, OnChanges, AfterViewChecked {\r\n  @Input() id = \"recordsale-remote\";\r\n  @Input() selectedValue: any = '';\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('remote') public dropdownObj: DropDownListComponent\r\n  public data: any;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, ['name','no']);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService,\r\n    private cd: ChangeDetectorRef,\r\n    public service: PigfarmCoreService) {}\r\n  ngAfterViewChecked(): void {\r\n    this.selectedValue = this.selectedValue || \"\";\r\n    this.cd.detectChanges()\r\n  }\r\n  ngOnInit() {\r\n    this.service.getByFarmGuid(localStorage.getItem('farmGuid')).subscribe(x=> {\r\n      this.data = x;\r\n    })\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n    this.selectedValueChange.emit(args.value);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit ,Inject } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dynamic-grid',\r\n  templateUrl: './dynamic-grid.component.html',\r\n  styleUrls: ['./dynamic-grid.component.scss']\r\n})\r\nexport class DynamicGridComponent implements OnInit {\r\n\r\n  constructor(@Inject(\"Env\") private baseUrl,) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-semen-dropdownlist',\r\n  templateUrl: './semen-dropdownlist.component.html',\r\n  styleUrls: ['./semen-dropdownlist.component.scss']\r\n})\r\nexport class SemenDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"semen-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('semenRemote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 10;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, ['semenName', 'semenNo']);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    console.log(e);\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    .where('status', 'equal', 1);\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}Semen/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log(this.selectedValue);\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges, Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PigfarmCoreService } from '../../../services';\r\n\r\n@Component({\r\n  selector: 'app-breeding-dropdownlist',\r\n  templateUrl: './breeding-dropdownlist.component.html',\r\n  styleUrls: ['./breeding-dropdownlist.component.scss']\r\n})\r\nexport class BreedingDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"breeding-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('breedingRemote') public dropdownObj: DropDownListComponent\r\n  public data: any;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 10;\r\n  skip = 0;\r\n  roomGuid = \"\";\r\n  penGuid: any;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      //const query = this.dropdownObj.query.clone().search(e.text, 'name');\r\n      e.updateData(this.data, new Query().search(e.text, 'name'));\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,\r\n    public trans: TranslateService,\r\n    public service: PigfarmCoreService) {}\r\n  ngOnInit() {\r\n    this.service.getBreedingByFarmGuid(localStorage.getItem('farmGuid')).subscribe(x=> {\r\n      this.data = x;\r\n    })\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n    this.ngModelChange.emit(args.itemData?.guid);\r\n    this.roomGuid = args.itemData?.roomGuid;\r\n    this.penGuid = args.itemData?.penGuid;\r\n    this.selectedValueChange.emit(args.itemData?.guid);\r\n\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PigfarmCoreService } from '../../../services';\r\n\r\n\r\n@Component({\r\n  selector: 'app-breeding-dropdownlist-toolbar',\r\n  templateUrl: './breeding-dropdownlist-toolbar.component.html',\r\n  styleUrls: ['./breeding-dropdownlist-toolbar.component.scss']\r\n})\r\nexport class BreedingDropdownlistToolbarComponent implements OnInit, OnChanges {\r\n  @Input() popupWidth: any = '350px';\r\n  @Input() popupHeight='200px';\r\n  @Input() id = \"breeding-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('breedingRemote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 10;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, 'name');\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService,public service: PigfarmCoreService) {}\r\n  ngOnInit() {\r\n    this.service.getBreedingByFarmGuid(localStorage.getItem('farmGuid')).subscribe(x=> {\r\n      this.data = x;\r\n    })\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log(this.selectedValue);\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor, Predicate } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n@Component({\r\n  selector: 'app-customer-dropdownlist-toolbar',\r\n  templateUrl: './customer-dropdownlist-toolbar.component.html',\r\n  styleUrls: ['./customer-dropdownlist-toolbar.component.css']\r\n})\r\nexport class CustomerDropdownlistToolbarComponent implements OnInit, OnChanges {\r\n  @Input() id = \"customer-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('customerRemote') public dropdownObj: DropDownListComponent\r\n  public data: any;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 1000;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    let query = new Query();\r\n    //frame the query based on search string with filter type.\r\n    let predicate: Predicate = new Predicate('name', 'contains', e.text);\r\n    predicate = predicate.or('no', 'contains', e.text);\r\n    query = (e.text != \"\") ? query.where(predicate) : query;\r\n    //pass the filter data source, filter query to updateData method.\r\n    e.updateData(this.data, query);\r\n  };\r\n  public actionComplete(e: any): void {\r\n    console.log(e);\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    new DataManager({\r\n      url: `${this.baseUrl}Customer/GetCustomersSP`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }).executeQuery(this.query).then((x: any)=> {\r\n      this.data = x.result\r\n    });\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log(this.selectedValue);\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  OnInit,\r\n  Input,\r\n  ChangeDetectorRef,\r\n  Inject\r\n} from \"@angular/core\";\r\nimport {\r\n  UploaderComponent,\r\n  SelectedEventArgs,\r\n  FileInfo,\r\n  RemovingEventArgs,\r\n} from \"@syncfusion/ej2-angular-inputs\";\r\nimport {\r\n  createSpinner,\r\n  showSpinner,\r\n  hideSpinner,\r\n} from \"@syncfusion/ej2-popups\";\r\nimport {\r\n  EmitType,\r\n  detach,\r\n  Browser,\r\n  createElement,\r\n  isNullOrUndefined,\r\n  EventHandler,\r\n} from \"@syncfusion/ej2-base\";\r\nimport { MessageConstants } from \"../../../_core/_constants\";\r\n\r\nimport { AlertifyService } from \"../../../services/alertify.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n@Component({\r\n  selector: \"app-upload-multi-document\",\r\n  templateUrl: \"./upload-multi-document.component.html\",\r\n  styleUrls: [\"./upload-multi-document.component.css\"],\r\n})\r\nexport class UploadMultiDocumentComponent implements OnInit {\r\n  @ViewChild(\"previewupload\")\r\n  public uploadObj: UploaderComponent;\r\n\r\n  public allowExtensions: string =\r\n    \".doc, .xls, .xlsx, .pdf, .odt, .odf, .jpg, .gif, .png\";\r\n\r\n  public dropElement: HTMLElement;\r\n  public filesName: string[] = [];\r\n  public filesDetails: FileInfo[] = [];\r\n  public filesList: HTMLElement[] = [];\r\n  public uploadWrapper: HTMLElement;\r\n  public parentElement: HTMLElement;\r\n  @Input() path: any;\r\n  @Input() allowedExtensions =\r\n    \".doc, .xls, .xlsx, .pdf, .odt, .odf, .jpg, .gif, .png\";\r\n  @Input() id: any;\r\n  @Input() multiple = false;\r\n  @Input() autoUpload = true;\r\n  @Input() enabled = true;\r\n  @Input() service: any;\r\n  @Input() files: any[] = [];\r\n  @Input() controlerName: string;\r\n  file: any;\r\n  showFile: any = false;\r\n  alert = {\r\n    updateMessage: this.translate.instant(MessageConstants.UPDATE_MESSAGE),\r\n    updateTitle: this.translate.instant(MessageConstants.UPDATE_TITLE),\r\n    createMessage: this.translate.instant(MessageConstants.CREATE_MESSAGE),\r\n    createTitle: this.translate.instant(MessageConstants.CREATE_TITLE),\r\n    deleteMessage: this.translate.instant(MessageConstants.DELETE_MESSAGE),\r\n    deleteTitle: this.translate.instant(MessageConstants.DELETE_TITLE),\r\n    cancelMessage: this.translate.instant(MessageConstants.CANCEL_MESSAGE),\r\n    serverError: this.translate.instant(MessageConstants.SERVER_ERROR),\r\n    deleted_ok_msg: this.translate.instant(MessageConstants.DELETED_OK_MSG),\r\n    created_ok_msg: this.translate.instant(MessageConstants.CREATED_OK_MSG),\r\n    updated_ok_msg: this.translate.instant(MessageConstants.UPDATED_OK_MSG),\r\n    system_error_msg: this.translate.instant(MessageConstants.SYSTEM_ERROR_MSG),\r\n    exist_message: this.translate.instant(MessageConstants.EXIST_MESSAGE),\r\n    choose_farm_message: this.translate.instant(\r\n      MessageConstants.CHOOSE_FARM_MESSAGE\r\n    ),\r\n    select_order_message: this.translate.instant(\r\n      MessageConstants.SELECT_ORDER_MESSAGE\r\n    ),\r\n    yes_message: this.translate.instant(MessageConstants.YES_MSG),\r\n    no_message: this.translate.instant(MessageConstants.NO_MSG),\r\n  };\r\n  downloadUrl: string;\r\n  ngOnInit(): void {\r\n    this.path = {\r\n      saveUrl: `${this.baseUrl}${this.controlerName}/Save?id=${this.id}`,\r\n      removeUrl: `${this.baseUrl}${this.controlerName}/remove?id=${this.id}`,\r\n    };\r\n    this.dropElement = document.getElementsByClassName(\r\n      \"control-section\"\r\n    )[0] as HTMLElement;\r\n    if (Browser.isDevice) {\r\n      document.getElementById(\"dropimage\").style.padding = \"0px 10%\";\r\n    }\r\n    document.getElementById(\"browse\").onclick = () => {\r\n      document\r\n        .getElementsByClassName(\"e-file-select-wrap\")[0]\r\n        .querySelector(\"button\")\r\n        .click();\r\n      return false;\r\n    };\r\n    document.getElementById(\"clearbtn\").onclick = () => {\r\n      if (!this.dropElement.querySelector(\"ul\")) {\r\n        return;\r\n      }\r\n      detach(this.dropElement.querySelector(\"ul\"));\r\n      this.filesList = [];\r\n      this.filesDetails = [];\r\n      this.filesName = [];\r\n      if (\r\n        this.dropElement\r\n          .querySelector(\"#dropArea\")\r\n          .classList.contains(\"e-spinner-pane\")\r\n      ) {\r\n        hideSpinner(this.dropElement.querySelector(\"#dropArea\"));\r\n        detach(this.dropElement.querySelector(\".e-spinner-pane\"));\r\n      }\r\n    };\r\n    document.getElementById(\"uploadbtn\").onclick = () => {\r\n      if (\r\n        this.dropElement.querySelector(\"ul\") &&\r\n        this.filesDetails.length > 0\r\n      ) {\r\n        this.uploadObj.upload(this.filesDetails, true);\r\n      }\r\n    };\r\n  }\r\n  public onSelect(args: SelectedEventArgs): void {\r\n    if (!this.dropElement.querySelector(\"li\")) {\r\n      this.filesDetails = [];\r\n    }\r\n    if (\r\n      isNullOrUndefined(\r\n        document.getElementById(\"dropArea\").querySelector(\".e-upload-files\")\r\n      )\r\n    ) {\r\n      this.parentElement = createElement(\"ul\", { className: \"e-upload-files\" });\r\n      document\r\n        .getElementsByClassName(\"e-upload\")[0]\r\n        .appendChild(this.parentElement);\r\n    }\r\n    let validFiles: FileInfo[] = this.validateFiles(args, this.filesDetails);\r\n    if (validFiles.length === 0) {\r\n      args.cancel = true;\r\n      return;\r\n    }\r\n    for (let i: number = 0; i < validFiles.length; i++) {\r\n      this.formSelectedData(validFiles[i], this);\r\n    }\r\n    this.filesDetails = this.filesDetails.concat(validFiles);\r\n    args.cancel = true;\r\n  }\r\n\r\n  public validateFiles(args: any, viewedFiles: FileInfo[]): FileInfo[] {\r\n    let modifiedFiles: FileInfo[] = [];\r\n    let validFiles: FileInfo[] = [];\r\n    let isModified: boolean = false;\r\n    if (args.event.type === \"drop\") {\r\n      isModified = true;\r\n      let allImages: string[] = [\"png\", \"jpg\", \"jpeg\"];\r\n      let files: FileInfo[] = args.filesData;\r\n      for (let file of files) {\r\n        if (allImages.indexOf(file.type) !== -1) {\r\n          modifiedFiles.push(file);\r\n        }\r\n      }\r\n    }\r\n    let files: FileInfo[] =\r\n      modifiedFiles.length > 0 || isModified ? modifiedFiles : args.filesData;\r\n    if (this.filesName.length > 0) {\r\n      for (let file of files) {\r\n        if (this.filesName.indexOf(file.name) === -1) {\r\n          this.filesName.push(file.name);\r\n          validFiles.push(file);\r\n        }\r\n      }\r\n    } else {\r\n      for (let file of files) {\r\n        this.filesName.push(file.name);\r\n        validFiles.push(file);\r\n      }\r\n    }\r\n    return validFiles;\r\n  }\r\n\r\n  public formSelectedData(file: FileInfo, proxy: any): void {\r\n    let liEle: HTMLElement = createElement(\"li\", {\r\n      className: \"e-upload-file-list\",\r\n      attrs: { \"data-file-name\": file.name },\r\n    });\r\n    let imageTag: HTMLImageElement = <HTMLImageElement>createElement(\"IMG\", {\r\n      className: \"upload-image\",\r\n      attrs: { alt: \"Image\" },\r\n    });\r\n    let wrapper: HTMLElement = createElement(\"span\", { className: \"wrapper\" });\r\n    wrapper.appendChild(imageTag);\r\n    liEle.appendChild(wrapper);\r\n    liEle.appendChild(\r\n      createElement(\"div\", {\r\n        className: \"name file-name\",\r\n        innerHTML: file.name,\r\n        attrs: { title: file.name },\r\n      })\r\n    );\r\n    liEle.appendChild(\r\n      createElement(\"div\", {\r\n        className: \"file-size\",\r\n        innerHTML: proxy.uploadObj.bytesToSize(file.size),\r\n      })\r\n    );\r\n    let clearbtn: HTMLElement;\r\n    let uploadbtn: HTMLElement;\r\n    clearbtn = createElement(\"span\", {\r\n      id: \"removeIcon\",\r\n      className: \"e-icons e-file-remove-btn\",\r\n      attrs: { title: \"Remove\" },\r\n    });\r\n    EventHandler.add(clearbtn, \"click\", this.removeFiles, proxy);\r\n    liEle.setAttribute(\"title\", \"Ready to Upload\");\r\n    uploadbtn = createElement(\"span\", {\r\n      className: \"e-upload-icon e-icons e-file-remove-btn\",\r\n      attrs: { title: \"Upload\" },\r\n    });\r\n    uploadbtn.setAttribute(\"id\", \"iconUpload\");\r\n    EventHandler.add(uploadbtn, \"click\", this.uploadFile, proxy);\r\n    let progressbarContainer: HTMLElement;\r\n    progressbarContainer = createElement(\"progress\", {\r\n      className: \"progressbar\",\r\n      id: \"progressBar\",\r\n      attrs: { value: \"0\", max: \"100\" },\r\n    });\r\n    liEle.appendChild(clearbtn);\r\n    liEle.appendChild(uploadbtn);\r\n    liEle.appendChild(progressbarContainer);\r\n    this.readURL(liEle, file);\r\n    document.querySelector(\".e-upload-files\").appendChild(liEle);\r\n    proxy.filesList.push(liEle);\r\n  }\r\n  public uploadFile(args: any): void {\r\n    this.uploadObj.upload(\r\n      [\r\n        this.filesDetails[\r\n          this.filesList.indexOf(args.currentTarget.parentElement)\r\n        ],\r\n      ],\r\n      true\r\n    );\r\n  }\r\n  public removeFiles(args: any): void {\r\n    let removeFile: FileInfo =\r\n      this.filesDetails[\r\n        this.filesList.indexOf(args.currentTarget.parentElement)\r\n      ];\r\n    let statusCode: string = removeFile.statusCode;\r\n    if (statusCode === \"2\" || statusCode === \"1\") {\r\n      this.uploadObj.remove(removeFile, true);\r\n      this.uploadObj.element.value = \"\";\r\n    }\r\n    let index: number = this.filesList.indexOf(\r\n      args.currentTarget.parentElement\r\n    );\r\n    this.filesList.splice(index, 1);\r\n    this.filesDetails.splice(index, 1);\r\n    this.filesName.splice(this.filesName.indexOf(removeFile.name), 1);\r\n    if (statusCode !== \"2\") {\r\n      detach(args.currentTarget.parentElement);\r\n    }\r\n  }\r\n  public onFileUpload(args: any): void {\r\n    let li: Element = document\r\n      .getElementById(\"dropArea\")\r\n      .querySelector('[data-file-name=\"' + args.file.name + '\"]');\r\n    let iconEle: HTMLElement = li.querySelector(\"#iconUpload\") as HTMLElement;\r\n    iconEle.style.cursor = \"not-allowed\";\r\n    iconEle.classList.add(\"e-uploaded\");\r\n    EventHandler.remove(\r\n      li.querySelector(\"#iconUpload\"),\r\n      \"click\",\r\n      this.uploadFile\r\n    );\r\n    let progressValue: number = Math.round(\r\n      (args.e.loaded / args.e.total) * 100\r\n    );\r\n    if (!isNaN(progressValue) && li.querySelector(\".progressbar\")) {\r\n      li.getElementsByTagName(\"progress\")[0].value = progressValue;\r\n    }\r\n  }\r\n  public onUploadSuccess(args: any): void {\r\n    let spinnerElement: HTMLElement = document.getElementById(\"dropArea\");\r\n    let li: HTMLElement = document\r\n      .getElementById(\"dropArea\")\r\n      .querySelector('[data-file-name=\"' + args.file.name + '\"]');\r\n    if (li && !isNullOrUndefined(li.querySelector(\".progressbar\"))) {\r\n      (li.querySelector(\".progressbar\") as HTMLElement).style.visibility =\r\n        \"hidden\";\r\n    }\r\n    if (args.operation === \"upload\") {\r\n      EventHandler.remove(\r\n        li.querySelector(\"#iconUpload\"),\r\n        \"click\",\r\n        this.uploadFile\r\n      );\r\n      li.setAttribute(\"title\", args.e.currentTarget.statusText);\r\n      (li.querySelector(\".file-name\") as HTMLElement).style.color = \"green\";\r\n      (li.querySelector(\".e-icons\") as HTMLElement).onclick = () => {\r\n        this.generateSpinner(this.dropElement.querySelector(\"#dropArea\"));\r\n      };\r\n    } else {\r\n      if (!isNullOrUndefined(li)) {\r\n        detach(li);\r\n      }\r\n      if (!isNullOrUndefined(spinnerElement)) {\r\n        hideSpinner(spinnerElement);\r\n        detach(spinnerElement.querySelector(\".e-spinner-pane\"));\r\n      }\r\n    }\r\n    li.querySelector(\"#removeIcon\").removeAttribute(\".e-file-remove-btn\");\r\n    li.querySelector(\"#removeIcon\").setAttribute(\r\n      \"class\",\r\n      \"e-icons e-file-delete-btn\"\r\n    );\r\n  }\r\n  public generateSpinner(targetElement: HTMLElement): void {\r\n    createSpinner({ target: targetElement, width: \"25px\" });\r\n    showSpinner(targetElement);\r\n  }\r\n  public onUploadFailed(args: any): void {\r\n    let li: Element = document\r\n      .getElementById(\"dropArea\")\r\n      .querySelector('[data-file-name=\"' + args.file.name + '\"]');\r\n    (li.querySelector(\".file-name\") as HTMLElement).style.color = \"red\";\r\n    li.setAttribute(\"title\", args.e.currentTarget.statusText);\r\n    if (args.operation === \"upload\") {\r\n      EventHandler.remove(\r\n        li.querySelector(\"#iconUpload\"),\r\n        \"click\",\r\n        this.uploadFile\r\n      );\r\n      (li.querySelector(\".progressbar\") as HTMLElement).style.visibility =\r\n        \"hidden\";\r\n    }\r\n  }\r\n  public readURL(li: HTMLElement, args: any): void {\r\n    let preview: HTMLImageElement = li.querySelector(\".upload-image\");\r\n    let file: File = args.rawFile;\r\n    let reader: FileReader = new FileReader();\r\n    reader.addEventListener(\r\n      \"load\",\r\n      () => {\r\n        preview.src = reader.result as string;\r\n      },\r\n      false\r\n    );\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  public onFileRemove(args: RemovingEventArgs): void {\r\n    args.postRawFile = false;\r\n  }\r\n\r\n  constructor(\r\n    @Inject(\"Env\") private baseUrl,\r\n    private alertify: AlertifyService,\r\n    private cd: ChangeDetectorRef,\r\n    private http: HttpClient,\r\n    public translate: TranslateService\r\n  ) {}\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, Query, SimpleChanges, ViewChild ,Inject } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { PigfarmCoreService } from '../../../services';\r\n\r\n@Component({\r\n  selector: 'app-breeding2-sowin-dropdownlist',\r\n  templateUrl: './breeding2-sowin-dropdownlist.component.html',\r\n  styleUrls: ['./breeding2-sowin-dropdownlist.component.css']\r\n})\r\nexport class Breeding2SowinDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"breeding-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Input() breedingGuid: any;\r\n \r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('breedingRemote') public dropdownObj: DropDownListComponent\r\n  public data: any;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  roomGuid: any;\r\n  penGuid: any;\r\n  take = 10;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, 'name');\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService,public service: PigfarmCoreService) {}\r\n  ngOnInit() {\r\n    \r\n  }\r\n  loadData() {\r\n    this.service.getBreeding2SowInByBreedingGuid(this.breedingGuid || '').subscribe(x=> {\r\n      this.data = x;\r\n    })\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.selectedValue = this.selectedValue || \"\";\r\n    if (changes['breedingGuid']) {\r\n      this.loadData();\r\n    }\r\n  }\r\n  \r\n  onChange(args) {\r\n    this.roomGuid = args.itemData?.roomGuid\r\n    this.penGuid = args.itemData?.penGuid\r\n    this.change.emit(args);\r\n    this.ngModelChange.emit(args.itemData?.guid);\r\n    this.selectedValueChange.emit(args.itemData?.guid);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Inject\r\n} from \"@angular/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  SelectedEventArgs,\r\n  FileInfo,\r\n  RemovingEventArgs,\r\n  UploaderComponent,\r\n} from \"@syncfusion/ej2-angular-inputs\";\r\nimport { EmitType } from \"@syncfusion/ej2-base\";\r\nimport { MessageConstants } from \"../../../_core/_constants\";\r\n\r\nimport { AlertifyService } from \"../../../services/alertify.service\";\r\n\r\n@Component({\r\n  selector: \"app-upload-document\",\r\n  templateUrl: \"./upload-document.component.html\",\r\n  styleUrls: [\"./upload-document.component.scss\"],\r\n})\r\nexport class UploadDocumentComponent implements OnInit, AfterViewInit, OnChanges {\r\n  @ViewChild(UploaderComponent) uploadObj: UploaderComponent;\r\n  @Input() path: any;\r\n  @Input() allowedExtensions = \".doc, .xls, .xlsx, .pdf, .odt, .odf, .jpg, .gif, .png\";\r\n  @Input() id: any;\r\n  @Input() multiple = false;\r\n  @Input() autoUpload = true;\r\n  @Input() enabled = true;\r\n  @Input() service: any;\r\n  @Input() files: any[] = [];\r\n  @Input() controlerName: string;\r\n  file: any;\r\n  showFile: any = false;\r\n  showImgFile: any = false;\r\n  alert = {\r\n    updateMessage: this.translate.instant(MessageConstants.UPDATE_MESSAGE),\r\n    updateTitle: this.translate.instant(MessageConstants.UPDATE_TITLE),\r\n    createMessage: this.translate.instant(MessageConstants.CREATE_MESSAGE),\r\n    createTitle: this.translate.instant(MessageConstants.CREATE_TITLE),\r\n    deleteMessage: this.translate.instant(MessageConstants.DELETE_MESSAGE),\r\n    deleteTitle: this.translate.instant(MessageConstants.DELETE_TITLE),\r\n    cancelMessage: this.translate.instant(MessageConstants.CANCEL_MESSAGE),\r\n    serverError: this.translate.instant(MessageConstants.SERVER_ERROR),\r\n    deleted_ok_msg: this.translate.instant(MessageConstants.DELETED_OK_MSG),\r\n    created_ok_msg: this.translate.instant(MessageConstants.CREATED_OK_MSG),\r\n    updated_ok_msg: this.translate.instant(MessageConstants.UPDATED_OK_MSG),\r\n    system_error_msg: this.translate.instant(MessageConstants.SYSTEM_ERROR_MSG),\r\n    exist_message: this.translate.instant(MessageConstants.EXIST_MESSAGE),\r\n    choose_farm_message: this.translate.instant(\r\n      MessageConstants.CHOOSE_FARM_MESSAGE\r\n    ),\r\n    select_order_message: this.translate.instant(\r\n      MessageConstants.SELECT_ORDER_MESSAGE\r\n    ),\r\n    yes_message: this.translate.instant(MessageConstants.YES_MSG),\r\n    no_message: this.translate.instant(MessageConstants.NO_MSG),\r\n  };\r\n  downloadUrl: string;\r\n  public dropElement: HTMLElement;\r\n  allImages: string[] = ['.jpg', '.gif', '.png'];\r\n  constructor(@Inject(\"Env\") private baseUrl,\r\n    private alertify: AlertifyService,\r\n    private cd: ChangeDetectorRef,\r\n    private http: HttpClient,\r\n    public translate: TranslateService\r\n  ) {}\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['service'] && changes.service.currentValue) {\r\n      this.initialUploader();\r\n      this.cd.detectChanges();\r\n    }\r\n  }\r\n  ngAfterViewInit(): void {\r\n    // this.initialUploader();\r\n    // this.cd.detectChanges();\r\n  }\r\n\r\n  ngOnInit() {}\r\n  beforeUpload(args) {\r\n    args.statusText = args.response.statusText;\r\n  }\r\n  initialUploader() {\r\n    if (!this.path) {\r\n      this.path = {\r\n        saveUrl: `${this.baseUrl}${this.controlerName}/Save?id=${this.id}`,\r\n        removeUrl: `${this.baseUrl}${this.controlerName}/remove?id=${this.id}`,\r\n      };\r\n    }\r\n\r\n    this.downloadUrl = `${this.baseUrl}${this.controlerName}/Download?id=${this.id}`;\r\n    this.getFileInfo();\r\n  }\r\n  getFileInfo() {\r\n    this.service.getFilesById(this.id).subscribe(\r\n      (file) => {\r\n        if (file.name !== \"\") {\r\n          this.files = [file];\r\n          this.file = file;\r\n          this.showFile = true;\r\n          this.showImgFile = this.allImages.indexOf(file.type) !== -1\r\n        } else {\r\n          this.files = null;\r\n          this.file = null;\r\n          this.showFile = false;\r\n          this.showImgFile = false;\r\n          this.uploadObj.refresh();\r\n        }\r\n      },\r\n      (error) => {\r\n        this.files = null;\r\n        this.file = null;\r\n        this.showFile = false;\r\n        this.uploadObj.refresh();\r\n      }\r\n    );\r\n  }\r\n  public onSelected(args: SelectedEventArgs): void {\r\n    args.filesData.splice(5);\r\n    let filesData: FileInfo[] = args.filesData;\r\n    let allFiles: FileInfo[] = filesData.concat(args.filesData);\r\n    if (allFiles.length > 5) {\r\n      for (let i: number = 0; i < allFiles.length; i++) {\r\n        if (allFiles.length > 5) {\r\n          allFiles.shift();\r\n        }\r\n      }\r\n      args.filesData = allFiles;\r\n      args.modifiedFilesData = args.filesData;\r\n    }\r\n    this.showFile = args.filesData.length > 0;\r\n    if (this.showFile) {\r\n      this.showImgFile = this.allImages.indexOf(this.showFile[0].type) !== -1\r\n\r\n    }\r\n    args.isModified = true;\r\n  }\r\n  onFileRemove(args: RemovingEventArgs): void {\r\n    args.postRawFile = false;\r\n  }\r\n  removeFile() {\r\n    this.remove();\r\n  }\r\n  public onUploadSuccess: EmitType<Object> = (args: any) => {\r\n    this.getFileInfo();\r\n    this.uploadObj.clearAll();\r\n  };\r\n\r\n  remove() {\r\n    this.alertify.confirm4(\r\n      this.alert.yes_message,\r\n      this.alert.no_message,\r\n      this.alert.deleteTitle,\r\n      this.alert.deleteMessage,\r\n      () => {\r\n        let ajax = new XMLHttpRequest();\r\n        ajax.open(\r\n          \"POST\",\r\n          `${this.baseUrl}${this.controlerName}/remove?id=${this.id}`\r\n        );\r\n        ajax.onload = () => {\r\n          this.getFileInfo();\r\n          this.alertify.success(this.alert.deleted_ok_msg);\r\n        };\r\n        ajax.send();\r\n      },\r\n      () => {\r\n        this.alertify.error(this.alert.cancelMessage);\r\n      }\r\n    );\r\n  }\r\n\r\n  download() {\r\n    let downloadLink = document.createElement(\"a\");\r\n    downloadLink.href = this.downloadUrl;\r\n    downloadLink.setAttribute(\"download\", this.file.name);\r\n    document.body.appendChild(downloadLink);\r\n    downloadLink.click();\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { ActionConstant, MessageConstants, StatusConstants } from '../../_core/_constants';\r\nimport { FunctionSystem } from '../../_core/models/application-user';\r\n\r\nexport abstract class BaseComponent {\r\n  statusConts = new StatusConstants();\r\n  isodsExport = true;\r\n  pageSettings: any;\r\n  globalLang = localStorage.getItem('lang');\r\n  skip = 0;\r\n  take = 10;\r\n  functionName: string;\r\n  printBy: string;\r\n  audit: any;\r\n  sortOptions = { columns: [{ field: 'estDate', direction: 'Descending' }, { field: 'id', direction: 'Descending' }] };\r\n  isAdmin = JSON.parse(localStorage.getItem('user'))?.groupCode === 'ADMIN';\r\n  baseUrl = ''\r\n  alert = {\r\n    updateMessage: this.translate.instant(MessageConstants.UPDATE_MESSAGE),\r\n    updateTitle: this.translate.instant(MessageConstants.UPDATE_TITLE),\r\n    createMessage:this.translate.instant(MessageConstants.CREATE_MESSAGE),\r\n    createTitle: this.translate.instant(MessageConstants.CREATE_TITLE),\r\n    deleteMessage: this.translate.instant(MessageConstants.DELETE_MESSAGE),\r\n    deleteTitle: this.translate.instant(MessageConstants.DELETE_TITLE),\r\n    cancelMessage: this.translate.instant(MessageConstants.CANCEL_MESSAGE),\r\n    serverError: this.translate.instant(MessageConstants.SERVER_ERROR),\r\n    deleted_ok_msg: this.translate.instant(MessageConstants.DELETED_OK_MSG),\r\n    created_ok_msg: this.translate.instant(MessageConstants.CREATED_OK_MSG),\r\n    updated_ok_msg: this.translate.instant(MessageConstants.UPDATED_OK_MSG),\r\n    system_error_msg: this.translate.instant(MessageConstants.SYSTEM_ERROR_MSG),\r\n    exist_message: this.translate.instant(MessageConstants.EXIST_MESSAGE),\r\n    choose_farm_message: this.translate.instant(MessageConstants.CHOOSE_FARM_MESSAGE),\r\n    select_order_message: this.translate.instant(MessageConstants.SELECT_ORDER_MESSAGE),\r\n    yes_message: this.translate.instant(MessageConstants.YES_MSG),\r\n    no_message: this.translate.instant(MessageConstants.NO_MSG),\r\n  };\r\n  validationGrid = {\r\n    requireField:'This field is require.',\r\n    textLength: 'Text Length',\r\n  };\r\n  \r\n  functions: FunctionSystem[];\r\n  editSettingsTree = { allowEditing: false, allowAdding: false, allowDeleting: false, newRowPosition: 'Child', mode: 'Row' };\r\n  editSettings = { showDeleteConfirmDialog: false, allowEditing: false, allowAdding: false, allowDeleting: false, mode: 'Normal' };\r\n  toolbarOptions = ['ExcelExport', 'Add', 'Edit', 'Delete', 'Cancel', 'Search'] as any[];\r\n  toolbarOptionsTree = [\r\n  'Add',\r\n  'Delete',\r\n  'Search',\r\n  'ExpandAll',\r\n  'CollapseAll',\r\n  'ExcelExport'\r\n  ];\r\n  contextMenuItems = [\r\n    {\r\n      text: 'Add Child',\r\n      iconCss: ' e-icons e-add',\r\n      target: '.e-content',\r\n      id: 'Add-Sub-Item'\r\n    },\r\n    {\r\n      text: 'Delete',\r\n      iconCss: ' e-icons e-delete',\r\n      target: '.e-content',\r\n      id: 'DeleteOC'\r\n    }\r\n  ];\r\n\r\n  protected Permission(route: ActivatedRoute) {\r\n    const functionCode = route.snapshot.data.functionCode;\r\n    this.functions = JSON.parse(localStorage.getItem('functions')).filter(x => x.functionCode === functionCode) || [];\r\n    for (const item of this.functions) {\r\n        const toolbarOptions = [];\r\n        for (const action of item.childrens) {\r\n          const optionItem = this.makeAction(action.code);\r\n          toolbarOptions.push(...optionItem.filter(Boolean));\r\n        }\r\n        toolbarOptions.push('Search');\r\n        const uniqueOptionItem = toolbarOptions.filter((elem, index, self) => {\r\n          return index === self.indexOf(elem);\r\n        });\r\n        this.toolbarOptions = uniqueOptionItem;\r\n    }\r\n  }\r\n  protected PermissionForTreeGrid(route: ActivatedRoute) {\r\n    this.contextMenuItems = [];\r\n    this.functions = JSON.parse(localStorage.getItem('functions'));\r\n    for (const item of this.functions) {\r\n      if (route.snapshot.data.functionCode.includes(item.functionCode)) {\r\n        const toolbarOptionsTree = [];\r\n        for (const action of item.childrens) {\r\n          const optionItem = this.makeActionTreeGrid(action.code);\r\n          toolbarOptionsTree.push(...optionItem.filter(Boolean));\r\n        }\r\n        toolbarOptionsTree.push(...['Search',\r\n          'ExpandAll',\r\n          'CollapseAll',\r\n          'ExcelExport']);\r\n        const uniqueOptionItem = toolbarOptionsTree.filter((elem, index, self) => {\r\n          return index === self.indexOf(elem);\r\n        });\r\n        this.toolbarOptionsTree = uniqueOptionItem;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  // Đổi action code thanh action của ej2-grid\r\n  protected makeAction(input: string): string[] {\r\n    switch (input) {\r\n      case ActionConstant.CREATE:\r\n        this.editSettings.allowAdding = true;\r\n        return ['Add'];\r\n      case ActionConstant.EDIT:\r\n        this.editSettings.allowEditing = false;\r\n        return [];\r\n      case ActionConstant.DELETE:\r\n        this.editSettings.allowDeleting = false;\r\n        return [];\r\n      case ActionConstant.EXCEL_EXPORT:\r\n        return ['ExcelExport'];\r\n      default:\r\n        return [undefined];\r\n    }\r\n  }\r\n\r\n  protected makeActionTreeGrid(input: string): string[] {\r\n    switch (input) {\r\n      case ActionConstant.EXCEL_EXPORT:\r\n        return ['ExcelExport'];\r\n      case ActionConstant.CREATE:\r\n        this.editSettingsTree.allowAdding = true;\r\n        this.contextMenuItems.push({\r\n          text: 'Add Child',\r\n          iconCss: ' e-icons e-add',\r\n          target: '.e-content',\r\n          id: 'Add-Sub-Item'\r\n        });\r\n        return ['Add'];\r\n      case ActionConstant.EDIT:\r\n        this.editSettingsTree.allowEditing = false;\r\n        return [undefined];\r\n      case ActionConstant.DELETE:\r\n        this.editSettingsTree.allowDeleting = false;\r\n        this.contextMenuItems.push({\r\n          text: 'Delete',\r\n          iconCss: ' e-icons e-delete',\r\n          target: '.e-content',\r\n          id: 'DeleteOC'\r\n        });\r\n        return [undefined];\r\n      default:\r\n        return [undefined];\r\n    }\r\n  }\r\n  constructor(\r\n    public translate: TranslateService,\r\n    public url: string\r\n    ) {\r\n      this.baseUrl = url;\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    let pageSize = Number(user?.pageSizeSettingValue) || 10;\r\n    let pageSizesTemp = user?.pageSizeSettingList || ['5', '10', '12', '20'];\r\n    let pageSizes = pageSizesTemp.map(x=> {\r\n      if (isNaN(+x)) return x;\r\n      return +x\r\n    });\r\n    this.pageSettings = {  pageSizes: pageSizes, enableQueryString: true,  pageSize: pageSize, currentPage: 1, enableScroll: true };\r\n    this.take = this.pageSettings.pageSize;\r\n  }\r\n  convertDate(data) {\r\n    if ( data instanceof Date ) {\r\n      return (data as Date).toLocaleDateString();\r\n    }\r\n    return data;\r\n  }\r\n  average = (nums: any) => {\r\n    if (nums.length === 0) return 0;\r\n    if (nums.length > 0 && nums) {\r\n      nums = nums.filter(e => e !== null );\r\n    if (nums.length === 0) return 0;\r\n      return nums.reduce((a, b) => (a + b)) / nums.length;\r\n    }\r\n    return 0;\r\n  }\r\n  total = (nums: any) => {\r\n    if (nums.length === 0) return 0;\r\n    if (nums.length > 0 && nums) {\r\n      nums = nums.filter(e => e !== null );\r\n    if (nums.length === 0) return 0;\r\n    return nums.reduce((a, b) => (a + b));\r\n    }\r\n    return 0;\r\n  }\r\n \r\n  visibledApply(model: any): boolean {\r\n    return !(model.id > 0) || !model.applyDate;\r\n  }\r\n  visibledAgree(model: any): boolean {\r\n    return model.id > 0 && !model.agreeGuid && model.status === this.statusConts.Default\r\n  }\r\n  visibledReject(model: any): boolean {\r\n    return model.id > 0 && (model.status === this.statusConts.Agree || model.status === this.statusConts.Default )\r\n  }\r\n  visibledExecute(model: any): boolean {\r\n    return model.id > 0 && (model.status === this.statusConts.Agree || model.status === this.statusConts.Default )\r\n  }\r\n  visibledInventory(model: any): boolean {\r\n    return model.id > 0 && (model.status === this.statusConts.Agree || model.status === this.statusConts.Default )\r\n  }\r\n  visibledFinance(model: any): boolean {\r\n    return model.id > 0 && (model.status === this.statusConts.Agree || model.status === this.statusConts.Default )\r\n  }\r\n  disabledApplyReason(model) {\r\n    return model.id > 0\r\n  }\r\n  disabledAgreeReason(model) {\r\n    return model.status === this.statusConts.Agree || model.status === this.statusConts.Execute || model.status === this.statusConts.Reject\r\n  }\r\n  disabledRejectReason(model) {\r\n    return model.status === this.statusConts.Agree || model.status === this.statusConts.Execute || model.status === this.statusConts.Reject\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { ActionConstant, MessageConstants } from '../../_core/_constants';\r\nimport { FunctionSystem } from '../../_core/models/application-user';\r\n\r\nexport abstract class BaseDetailComponent {\r\n  globalLang = localStorage.getItem('lang');\r\n  skip = 0;\r\n  take = 10;\r\n  functionName: string;\r\n  printBy: string;\r\n  audit: any;\r\n  baseUrl = ''\r\n  alert = {\r\n    updateMessage: MessageConstants.UPDATE_MESSAGE,\r\n    updateTitle: MessageConstants.UPDATE_TITLE,\r\n    createMessage:MessageConstants.CREATE_MESSAGE,\r\n    createTitle: MessageConstants.CREATE_TITLE,\r\n    deleteMessage: MessageConstants.DELETE_MESSAGE,\r\n    deleteTitle: MessageConstants.DELETE_TITLE,\r\n    cancelMessage: MessageConstants.CANCEL_MESSAGE,\r\n    serverError: MessageConstants.SERVER_ERROR,\r\n    deleted_ok_msg: MessageConstants.DELETED_OK_MSG,\r\n    created_ok_msg: MessageConstants.CREATED_OK_MSG,\r\n    updated_ok_msg: MessageConstants.UPDATED_OK_MSG,\r\n    system_error_msg: MessageConstants.SYSTEM_ERROR_MSG,\r\n    exist_message: MessageConstants.EXIST_MESSAGE,\r\n    choose_farm_message: MessageConstants.CHOOSE_FARM_MESSAGE,\r\n    select_order_message: MessageConstants.SELECT_ORDER_MESSAGE,\r\n    yes_message: MessageConstants.YES_MSG,\r\n    no_message: MessageConstants.NO_MSG,\r\n  };\r\n  validationGrid = {\r\n    requireField:'This field is require.',\r\n    textLength: 'Text Length',\r\n  };\r\n  \r\n  functions: FunctionSystem[];\r\n  editSettingsTree = { allowEditing: false, allowAdding: false, allowDeleting: false, newRowPosition: 'Child', mode: 'Row' };\r\n  editSettings = { showDeleteConfirmDialog: false, allowEditing: false, allowAdding: false, allowDeleting: false, mode: 'Normal' };\r\n  toolbarOptions = ['ExcelExport', 'Add', 'Edit', 'Delete', 'Cancel', 'Search'] as any[];\r\n  toolbarOptionsTree = [\r\n  'Add',\r\n  'Delete',\r\n  'Search',\r\n  'ExpandAll',\r\n  'CollapseAll',\r\n  'ExcelExport'\r\n  ];\r\n  contextMenuItems = [\r\n    {\r\n      text: 'Add Child',\r\n      iconCss: ' e-icons e-add',\r\n      target: '.e-content',\r\n      id: 'Add-Sub-Item'\r\n    },\r\n    {\r\n      text: 'Delete',\r\n      iconCss: ' e-icons e-delete',\r\n      target: '.e-content',\r\n      id: 'DeleteOC'\r\n    }\r\n  ];\r\n  protected Permission(route: ActivatedRoute) {\r\n    const functionCode = route.snapshot.data.functionCode;\r\n    this.functions = JSON.parse(localStorage.getItem('functions')).filter(x => x.functionCode === functionCode) || [];\r\n    for (const item of this.functions) {\r\n        const toolbarOptions = [];\r\n        for (const action of item.childrens) {\r\n          const optionItem = this.makeAction(action.code);\r\n          toolbarOptions.push(...optionItem.filter(Boolean));\r\n        }\r\n        toolbarOptions.push('Search');\r\n        const uniqueOptionItem = toolbarOptions.filter((elem, index, self) => {\r\n          return index === self.indexOf(elem);\r\n        });\r\n        this.toolbarOptions = uniqueOptionItem;\r\n    }\r\n  }\r\n  protected PermissionForTreeGrid(route: ActivatedRoute) {\r\n    this.contextMenuItems = [];\r\n    this.functions = JSON.parse(localStorage.getItem('functions'));\r\n    for (const item of this.functions) {\r\n      if (route.snapshot.data.functionCode.includes(item.functionCode)) {\r\n        const toolbarOptionsTree = [];\r\n        for (const action of item.childrens) {\r\n          const optionItem = this.makeActionTreeGrid(action.code);\r\n          toolbarOptionsTree.push(...optionItem.filter(Boolean));\r\n        }\r\n        toolbarOptionsTree.push(...['Search',\r\n          'ExpandAll',\r\n          'CollapseAll',\r\n          'ExcelExport']);\r\n        const uniqueOptionItem = toolbarOptionsTree.filter((elem, index, self) => {\r\n          return index === self.indexOf(elem);\r\n        });\r\n        this.toolbarOptionsTree = uniqueOptionItem;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  // Đổi action code thanh action của ej2-grid\r\n  protected makeAction(input: string): string[] {\r\n    switch (input) {\r\n      case ActionConstant.CREATE:\r\n        this.editSettings.allowAdding = true;\r\n        return ['Add'];\r\n      case ActionConstant.EDIT:\r\n        this.editSettings.allowEditing = false;\r\n        return [];\r\n      case ActionConstant.DELETE:\r\n        this.editSettings.allowDeleting = false;\r\n        return [];\r\n      case ActionConstant.EXCEL_EXPORT:\r\n        return ['ExcelExport'];\r\n      default:\r\n        return [undefined];\r\n    }\r\n  }\r\n\r\n  protected makeActionTreeGrid(input: string): string[] {\r\n    switch (input) {\r\n      case ActionConstant.EXCEL_EXPORT:\r\n        return ['ExcelExport'];\r\n      case ActionConstant.CREATE:\r\n        this.editSettingsTree.allowAdding = true;\r\n        this.contextMenuItems.push({\r\n          text: 'Add Child',\r\n          iconCss: ' e-icons e-add',\r\n          target: '.e-content',\r\n          id: 'Add-Sub-Item'\r\n        });\r\n        return ['Add'];\r\n      case ActionConstant.EDIT:\r\n        this.editSettingsTree.allowEditing = false;\r\n        return [undefined];\r\n      case ActionConstant.DELETE:\r\n        this.editSettingsTree.allowDeleting = false;\r\n        this.contextMenuItems.push({\r\n          text: 'Delete',\r\n          iconCss: ' e-icons e-delete',\r\n          target: '.e-content',\r\n          id: 'DeleteOC'\r\n        });\r\n        return [undefined];\r\n      default:\r\n        return [undefined];\r\n    }\r\n  }\r\n  constructor(public translate: TranslateService, public url: string) {\r\n    this.baseUrl = url;\r\n    this.getAlertTranslator();\r\n  }\r\n  getAlertTranslator() {\r\n    this.translate.get(this.alert.updateMessage).subscribe((res: string) => {\r\n      if (res) {\r\n        this.alert.updateMessage = res;\r\n      }\r\n    });\r\n    this.translate.get(this.alert.updateTitle).subscribe((res: string) => {\r\n      if (res) {\r\n        this.alert.updateTitle = res;\r\n      }\r\n    });\r\n    this.translate.get(this.alert.createMessage).subscribe((res: string) => {\r\n      if (res) {\r\n        this.alert.createMessage = res;\r\n      }\r\n    });\r\n    this.translate.get(this.alert.createTitle).subscribe((res: string) => {\r\n      if (res) {\r\n        this.alert.createTitle = res;\r\n      }\r\n    });\r\n    this.translate.get(this.alert.deleteMessage).subscribe((res: string) => {\r\n      if (res) {\r\n        this.alert.deleteMessage = res;\r\n      }\r\n    });\r\n    this.translate.get(this.alert.deleteTitle).subscribe((res: string) => {\r\n      if (res) {\r\n        this.alert.deleteTitle = res;\r\n      }\r\n    });\r\n\r\n    this.translate.get(this.alert.serverError).subscribe((res: string) => {\r\n      if (res) {\r\n        this.alert.serverError = res;\r\n      }\r\n    });\r\n    this.translate.get(this.alert.cancelMessage).subscribe((res: string) => {\r\n      if (res) {\r\n        this.alert.cancelMessage = res;\r\n      }\r\n    });\r\n    this.translate.get(this.alert.choose_farm_message).subscribe((res: string) => {\r\n      if (res) {\r\n        this.alert.choose_farm_message = res;\r\n      }\r\n    });\r\n\r\n    this.translate.get(this.validationGrid.requireField).subscribe((res: string) => {\r\n      if (res) {\r\n        this.validationGrid.requireField = res;\r\n      }\r\n    });\r\n    this.translate.get(this.validationGrid.textLength).subscribe((res: string) => {\r\n      if (res) {\r\n        this.validationGrid.textLength = res;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-gilt-in-dropdownlist',\n  templateUrl: './gilt-in-dropdownlist.component.html',\n  styleUrls: ['./gilt-in-dropdownlist.component.scss']\n})\nexport class GiltInDropdownlistComponent implements OnInit, OnChanges {\n  @Input() id = \"giltin-remote\";\n  @Input() selectedValue: any;\n  @Input() placeholder = \"\";\n  @Input() disabled = false;\n  @Output() change = new EventEmitter<any>();\n  @Output() ngModelChange = new EventEmitter<any>();\n  @Output() selectedValueChange = new EventEmitter<any>();\n  @ViewChild('giltinRemote') public dropdownObj: DropDownListComponent\n  public data: DataManager;\n  public query: Query ;\n  public remoteFields: Object = { text: 'inOutNo', value: 'guid' };\n  \n  take = 10;\n  skip = 0;\n  public onOpen(args) {\n    // let start: number = this.take;\n    // let end: number = 5;\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\n    // listElement.addEventListener('scroll', () => {\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\n\n    //     let filterQuery = this.dropdownObj.query.clone();\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\n    //       start = end;\n    //       end += 5;\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\n    //     }).catch((e: Object) => {\n    //     });\n    //   }\n    // })\n  }\n  public onFiltering: any = (e: any) => {\n    if (e.text === '') {\n      e.updateData(this.data);\n    } else {\n      const query = this.dropdownObj.query.clone().search(e.text, ['inOutNo']);\n      e.updateData(this.data, query);\n    }\n  };\n  public actionComplete(e: any): void {\n    console.log(e);\n}\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\n  ngOnInit() {\n    this.query = new Query()\n    .where('status', 'lessthan', 99)\n    this.data = new DataManager({\n      url: `${this.baseUrl}GiltIn/GetDataDropdownlist`,\n      adaptor: new UrlAdaptor,\n      crossDomain: true,\n    }, this.query);\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log(this.selectedValue);\n    this.selectedValue = this.selectedValue || \"\";\n  }\n  onChange(args) {\n    this.change.emit(args);\n  }\n  onNgModelChange(value) {\n    this.ngModelChange.emit(value);\n    this.selectedValueChange.emit(value);\n  }\n}\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-boar-testing-dropdownlist',\n  templateUrl: './boar-testing-dropdownlist.component.html',\n  styleUrls: ['./boar-testing-dropdownlist.component.css']\n})\nexport class BoarTestingDropdownlistComponent  implements OnInit, OnChanges {\n  @Input() id = \"boartesting-remote\";\n  @Input() selectedValue: any;\n  @Input() placeholder = \"\";\n  @Input() disabled = false;\n  @Output() change = new EventEmitter<any>();\n  @Output() ngModelChange = new EventEmitter<any>();\n  @Output() selectedValueChange = new EventEmitter<any>();\n  @ViewChild('boartestingRemote') public dropdownObj: DropDownListComponent\n  public data: DataManager;\n  public query: Query ;\n  public remoteFields: Object = { text: 'guid', value: 'guid' };\n  \n  take = 10;\n  skip = 0;\n  public onOpen(args) {\n    // let start: number = this.take;\n    // let end: number = 5;\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\n    // listElement.addEventListener('scroll', () => {\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\n\n    //     let filterQuery = this.dropdownObj.query.clone();\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\n    //       start = end;\n    //       end += 5;\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\n    //     }).catch((e: Object) => {\n    //     });\n    //   }\n    // })\n  }\n  public onFiltering: any = (e: any) => {\n    if (e.text === '') {\n      e.updateData(this.data);\n    } else {\n      const query = this.dropdownObj.query.clone().search(e.text, ['guid']);\n      e.updateData(this.data, query);\n    }\n  };\n  public actionComplete(e: any): void {\n    console.log(e);\n}\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\n  ngOnInit() {\n    this.query = new Query()\n    .where('status', 'lessthan', 99)\n    this.data = new DataManager({\n      url: `${this.baseUrl}BoarTesting/GetDataDropdownlist`,\n      adaptor: new UrlAdaptor,\n      crossDomain: true,\n    }, this.query);\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log(this.selectedValue);\n    this.selectedValue = this.selectedValue || \"\";\n  }\n  onChange(args) {\n    this.change.emit(args);\n  }\n  onNgModelChange(value) {\n    this.ngModelChange.emit(value);\n    this.selectedValueChange.emit(value);\n  }\n}\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges, ChangeDetectorRef, AfterViewChecked, OnDestroy ,Inject } from '@angular/core';\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PigfarmCoreService } from '../../../services';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-giltin-makeorder-dropdownlist',\n  templateUrl: './giltin-makeorder-dropdownlist.component.html',\n  styleUrls: ['./giltin-makeorder-dropdownlist.component.css']\n})\nexport class GiltinMakeorderDropdownlistComponent  implements OnInit, OnChanges, AfterViewChecked , OnDestroy{\n  @Input() id = \"makeorder2-remote\";\n  @Input() selectedValue: any = '';\n  @Input() placeholder = \"\";\n  @Input() disabled = false;\n  @Output() change = new EventEmitter<any>();\n  @Output() giltInGuidChange = new EventEmitter<any>();\n  @Output() selectedValueChange = new EventEmitter<any>();\n  @ViewChild('remote') public dropdownObj: DropDownListComponent\n  public data: any;\n  public query: Query ;\n  public remoteFields: Object = { text: 'name', value: 'guid' };\n  \n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService,\n    private cd: ChangeDetectorRef,\n    public service: PigfarmCoreService) {}\n  ngOnDestroy(): void {\n   \n  }\n  ngAfterViewChecked(): void {\n    this.selectedValue = this.selectedValue || \"\";\n    this.cd.detectChanges()\n  }\n  ngOnInit() {\n   this.loadData()\n  }\n  loadData() {\n    this.query = new Query()\n    .where('farmGuid', 'equal', localStorage.getItem('farmGuid'));\n    this.data = new DataManager({\n      url: `${this.baseUrl}GiltIn/LoadDataDropdownlist`,\n      adaptor: new UrlAdaptor,\n      crossDomain: true,\n    }, this.query);\n  }\n \n  ngOnChanges(changes: SimpleChanges): void {\n   \n   \n  }\n  onChange(args) {\n    this.change.emit(args);\n    this.giltInGuidChange.emit(args.itemData?.giltInGuid)\n    this.selectedValueChange.emit(args.value);\n  }\n\n}\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-bom-gilt-dropdownlist',\n  templateUrl: './bom-gilt-dropdownlist.component.html',\n  styleUrls: ['./bom-gilt-dropdownlist.component.scss']\n})\nexport class BomGiltDropdownlistComponent implements OnInit, OnChanges {\n  @Input() id = \"BomGilt-remote\";\n  @Input() selectedValue: any;\n  @Input() placeholder = \"\";\n  @Input() disabled = false;\n  @Output() change = new EventEmitter<any>();\n  @Output() ngModelChange = new EventEmitter<any>();\n  @Output() selectedValueChange = new EventEmitter<any>();\n  @ViewChild('BomGiltRemote') public dropdownObj: DropDownListComponent\n  public data: DataManager;\n  public query: Query ;\n  public remoteFields: Object = { text: 'name', value: 'guid' };\n  \n  take = 100;\n  skip = 0;\n  public onOpen(args) {\n    // let start: number = this.take;\n    // let end: number = 5;\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\n    // listElement.addEventListener('scroll', () => {\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\n\n    //     let filterQuery = this.dropdownObj.query.clone();\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\n    //       start = end;\n    //       end += 5;\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\n    //     }).catch((e: Object) => {\n    //     });\n    //   }\n    // })\n  }\n  public onFiltering: any = (e: any) => {\n    if (e.text === '') {\n      e.updateData(this.data);\n    } else {\n      const query = this.dropdownObj.query.clone().search(e.text, 'name');\n      e.updateData(this.data, query);\n    }\n  };\n  public actionComplete(e: any): void {\n    console.log(e);\n}\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\n  ngOnInit() {\n    this.query = new Query()\n    .skip(this.skip)\n    .take(this.take)\n    .where('status', 'equal', 1);\n    this.data = new DataManager({\n      url: `${this.baseUrl}BomGilt/GetDataDropdownlist`,\n      adaptor: new UrlAdaptor,\n      crossDomain: true,\n    }, this.query);\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log(this.selectedValue);\n    this.selectedValue = this.selectedValue || \"\";\n  }\n  onChange(args) {\n    this.change.emit(args);\n  }\n  onNgModelChange(value) {\n    this.ngModelChange.emit(value);\n    this.selectedValueChange.emit(value);\n  }\n}\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-bom-boar-dropdownlist',\n  templateUrl: './bom-boar-dropdownlist.component.html',\n  styleUrls: ['./bom-boar-dropdownlist.component.scss']\n})\nexport class BomBoarDropdownlistComponent implements OnInit, OnChanges {\n  @Input() id = \"BomBoar-remote\";\n  @Input() selectedValue: any;\n  @Input() placeholder = \"\";\n  @Input() disabled = false;\n  @Output() change = new EventEmitter<any>();\n  @Output() ngModelChange = new EventEmitter<any>();\n  @Output() selectedValueChange = new EventEmitter<any>();\n  @ViewChild('BomBoarRemote') public dropdownObj: DropDownListComponent\n  public data: DataManager;\n  public query: Query ;\n  public remoteFields: Object = { text: 'name', value: 'guid' };\n  \n  take = 100;\n  skip = 0;\n  public onOpen(args) {\n    // let start: number = this.take;\n    // let end: number = 5;\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\n    // listElement.addEventListener('scroll', () => {\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\n\n    //     let filterQuery = this.dropdownObj.query.clone();\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\n    //       start = end;\n    //       end += 5;\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\n    //     }).catch((e: Object) => {\n    //     });\n    //   }\n    // })\n  }\n  public onFiltering: any = (e: any) => {\n    if (e.text === '') {\n      e.updateData(this.data);\n    } else {\n      const query = this.dropdownObj.query.clone().search(e.text, 'name');\n      e.updateData(this.data, query);\n    }\n  };\n  public actionComplete(e: any): void {\n    console.log(e);\n}\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\n  ngOnInit() {\n    this.query = new Query()\n    .skip(this.skip)\n    .take(this.take)\n    .where('status', 'equal', 1);\n    this.data = new DataManager({\n      url: `${this.baseUrl}BomBoar/GetDataDropdownlist`,\n      adaptor: new UrlAdaptor,\n      crossDomain: true,\n    }, this.query);\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log(this.selectedValue);\n    this.selectedValue = this.selectedValue || \"\";\n  }\n  onChange(args) {\n    this.change.emit(args);\n  }\n  onNgModelChange(value) {\n    this.ngModelChange.emit(value);\n    this.selectedValueChange.emit(value);\n  }\n}\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-record-sale-dropdownlist',\r\n  templateUrl: './record-sale-dropdownlist.component.html',\r\n  styleUrls: ['./record-sale-dropdownlist.component.css']\r\n})\r\nexport class RecordSaleDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"record-sale-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('recordSaleRemote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'salesOrderName', value: 'guid' };\r\n  \r\n  take = 100;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, ['salesOrderName', 'salesOrderNo']);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n    console.log(e);\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    \r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}RecordSale/GetDataDropdownlist?lang=${localStorage.getItem('lang')}&farmGuid=${localStorage.getItem('farmGuid')}`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log(this.selectedValue);\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from \"@syncfusion/ej2-data\";\nimport {\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  Inject,\n} from \"@angular/core\";\nimport { DropDownListComponent } from \"@syncfusion/ej2-angular-dropdowns\";\nimport { TranslateService } from \"@ngx-translate/core\";\n\n@Component({\n  selector: \"app-parkinglot-dropdownlist\",\n  templateUrl: \"./parkinglot-dropdownlist.component.html\",\n  styleUrls: [\"./parkinglot-dropdownlist.component.scss\"],\n})\nexport class ParkinglotDropdownlistComponent implements OnInit, OnChanges {\n  @Input() id = \"site-remote\";\n  @Input() selectedValue: any;\n  @Input() siteGuid: any;\n  @Input() placeholder = \"\";\n  @Input() disabled = false;\n  @Input() enabledLoad = true;\n  @Output() change = new EventEmitter<any>();\n  @Output() ngModelChange = new EventEmitter<any>();\n  @Output() selectedValueName = new EventEmitter<any>();\n  @Output() selectedValueChange = new EventEmitter<any>();\n  @ViewChild(\"remote\") public dropdownObj: DropDownListComponent;\n  public data: DataManager;\n  public query: Query;\n  public remoteFields: Object = { text: \"name\", value: \"guid\" };\n\n  take = 100;\n  skip = 0;\n  public onOpen(args) {\n    // let start: number = this.take;\n    // let end: number = 5;\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\n    // listElement.addEventListener('scroll', () => {\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\n    //     let filterQuery = this.dropdownObj.query.clone();\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\n    //       start = end;\n    //       end += 5;\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\n    //     }).catch((e: Object) => {\n    //     });\n    //   }\n    // })\n  }\n  public onFiltering: any = (e: any) => {\n    if (e.text === \"\") {\n      e.updateData(this.data);\n    } else {\n      const query = this.dropdownObj.query\n        .clone()\n        .search(e.text, [\"parkingLotNo\", \"parkingLotName\"]);\n      e.updateData(this.data, query);\n    }\n  };\n  public actionComplete(e: any): void {}\n  constructor(@Inject(\"Env\") private baseUrl, public trans: TranslateService) {}\n  ngOnInit() {}\n  loadData() {\n    this.query = new Query().where(\"status\", \"equal\", 1);\n    if (this.siteGuid) {\n      this.query.where(\"siteGuid\", \"equal\", this.siteGuid);\n    }\n    this.data = new DataManager(\n      {\n        url: `${this.baseUrl}ParkingLot/GetDataDropdownlist`,\n        adaptor: new UrlAdaptor(),\n        crossDomain: true,\n      },\n      this.query\n    );\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    // only run when property \"data\" changed\n    if (changes[\"selectedValue\"]) {\n      this.selectedValueChange.emit(this.selectedValue);\n    }\n    this.selectedValue = this.selectedValue || \"\";\n    if (changes[\"siteGuid\"] && changes[\"siteGuid\"].currentValue) {\n      this.loadData();\n    }\n    if (changes[\"enabledLoad\"] && changes[\"enabledLoad\"].currentValue == true && !changes[\"siteGuid\"]?.currentValue) {\n      this.loadData();\n    }\n  }\n  onChange(args) {\n    this.change.emit(args);\n    this.selectedValueName.emit(args.itemData.name || \"\");\n  }\n  onNgModelChange(value) {\n    this.ngModelChange.emit(value);\n    this.selectedValueChange.emit(value);\n  }\n}\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\nimport { TranslateService } from '@ngx-translate/core';\n@Component({\n  selector: 'app-landlord-dropdownlist',\n  templateUrl: './landlord-dropdownlist.component.html',\n  styleUrls: ['./landlord-dropdownlist.component.css']\n})\nexport class LandlordDropdownlistComponent  implements OnInit, OnChanges {\n  @Input() id = \"landlord-remote\";\n  @Input() selectedValue: any;\n  @Input() placeholder = \"\";\n  @Input() disabled = false;\n  @Output() change = new EventEmitter<any>();\n  @Output() ngModelChange = new EventEmitter<any>();\n  @Output() selectedValueName = new EventEmitter<any>();\n  @Output() selectedValueChange = new EventEmitter<any>();\n  @ViewChild('remote') public dropdownObj: DropDownListComponent\n  public data: DataManager;\n  public query: Query ;\n  public remoteFields: Object = { text: 'landLordName', value: 'guid' };\n  \n  take = 100;\n  skip = 0;\n  public onOpen(args) {\n    // let start: number = this.take;\n    // let end: number = 5;\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\n    // listElement.addEventListener('scroll', () => {\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\n\n    //     let filterQuery = this.dropdownObj.query.clone();\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\n    //       start = end;\n    //       end += 5;\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\n    //     }).catch((e: Object) => {\n    //     });\n    //   }\n    // })\n  }\n  public onFiltering: any = (e: any) => {\n    if (e.text === '') {\n      e.updateData(this.data);\n    } else {\n      const query = this.dropdownObj.query.clone().search(e.text, ['landLordNo','landLordName']);\n      e.updateData(this.data, query);\n    }\n  };\n  public actionComplete(e: any): void {\n}\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\n  ngOnInit() {\n    this.query = new Query()\n    .where('status', 'equal', 1);\n    this.data = new DataManager({\n      url: `${this.baseUrl}Landlord/GetDataDropdownlist`,\n      adaptor: new UrlAdaptor,\n      crossDomain: true,\n    }, this.query);\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n     // only run when property \"data\" changed\n     if (changes['selectedValue']) {\n      this.selectedValueChange.emit(this.selectedValue);\n      }\n    this.selectedValue = this.selectedValue || \"\";\n  }\n  onChange(args) {\n    this.change.emit(args);\n    this.selectedValueName.emit(args.itemData.name || '')\n  }\n  onNgModelChange(value) {\n    this.ngModelChange.emit(value);\n    this.selectedValueChange.emit(value);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pigfarm-richtexteditor',\n  templateUrl: './pigfarm-richtexteditor.component.html',\n  styleUrls: ['./pigfarm-richtexteditor.component.css']\n})\nexport class PigfarmRichtexteditorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","\nimport { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\nimport { TranslateService } from '@ngx-translate/core';\n@Component({\n  selector: 'app-bank-dropdownlist',\n  templateUrl: './bank-dropdownlist.component.html',\n  styleUrls: ['./bank-dropdownlist.component.css']\n})\nexport class BankDropdownlistComponent  implements OnInit, OnChanges {\n  @Input() id = \"landlord-remote\";\n  @Input() selectedValue: any;\n  @Input() placeholder = \"\";\n  @Input() disabled = false;\n  @Output() change = new EventEmitter<any>();\n  @Output() ngModelChange = new EventEmitter<any>();\n  @Output() selectedValueName = new EventEmitter<any>();\n  @Output() selectedValueChange = new EventEmitter<any>();\n  @ViewChild('remote') public dropdownObj: DropDownListComponent\n  public data: DataManager;\n  public query: Query ;\n  public remoteFields: Object = { text: 'bankName', value: 'guid' };\n  \n  take = 100;\n  skip = 0;\n  public onOpen(args) {\n    // let start: number = this.take;\n    // let end: number = 5;\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\n    // listElement.addEventListener('scroll', () => {\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\n\n    //     let filterQuery = this.dropdownObj.query.clone();\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\n    //       start = end;\n    //       end += 5;\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\n    //     }).catch((e: Object) => {\n    //     });\n    //   }\n    // })\n  }\n  public onFiltering: any = (e: any) => {\n    if (e.text === '') {\n      e.updateData(this.data);\n    } else {\n      const query = this.dropdownObj.query.clone().search(e.text, ['bankNo','bankName']);\n      e.updateData(this.data, query);\n    }\n  };\n  public actionComplete(e: any): void {\n}\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\n  ngOnInit() {\n    this.query = new Query()\n    this.data = new DataManager({\n      url: `${this.baseUrl}Bank/GetDataDropdownlist`,\n      adaptor: new UrlAdaptor,\n      crossDomain: true,\n    }, this.query);\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n     // only run when property \"data\" changed\n     if (changes['selectedValue']) {\n      this.selectedValueChange.emit(this.selectedValue);\n      }\n    this.selectedValue = this.selectedValue || \"\";\n  }\n  onChange(args) {\n    this.change.emit(args);\n    this.selectedValueName.emit(args.itemData.name || '')\n  }\n  onNgModelChange(value) {\n    this.ngModelChange.emit(value);\n    this.selectedValueChange.emit(value);\n  }\n}\n","import { DataManager, Query, UrlAdaptor } from '@syncfusion/ej2-data';\r\nimport { Component, Input, OnInit, ViewChild, Output, EventEmitter, OnChanges, SimpleChanges ,Inject } from '@angular/core';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-device-dropdownlist',\r\n  templateUrl: './device-dropdownlist.component.html',\r\n  styleUrls: ['./device-dropdownlist.component.css']\r\n})\r\nexport class DeviceDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"device-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueName = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild('remote') public dropdownObj: DropDownListComponent\r\n  public data: DataManager;\r\n  public query: Query ;\r\n  public remoteFields: Object = { text: 'name', value: 'guid' };\r\n  \r\n  take = 100;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === '') {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query.clone().search(e.text, ['deviceNo','deviceName']);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {\r\n}\r\n  constructor(@Inject(\"Env\") private baseUrl,public trans: TranslateService) {}\r\n  ngOnInit() {\r\n    this.query = new Query()\r\n    .where('status', 'equal', 1);\r\n    this.data = new DataManager({\r\n      url: `${this.baseUrl}Device/GetDataDropdownlist`,\r\n      adaptor: new UrlAdaptor,\r\n      crossDomain: true,\r\n    }, this.query);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n     // only run when property \"data\" changed\r\n     if (changes['selectedValue']) {\r\n      this.selectedValueChange.emit(this.selectedValue);\r\n      }\r\n    this.selectedValue = this.selectedValue || \"\";\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n    this.selectedValueName.emit(args.itemData.name || '')\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { DataManager, Query, UrlAdaptor } from \"@syncfusion/ej2-data\";\r\nimport {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Inject,\r\n} from \"@angular/core\";\r\nimport { DropDownListComponent } from \"@syncfusion/ej2-angular-dropdowns\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: \"app-site-dropdownlist\",\r\n  templateUrl: \"./site-dropdownlist.component.html\",\r\n  styleUrls: [\"./site-dropdownlist.component.css\"],\r\n})\r\nexport class SiteDropdownlistComponent implements OnInit, OnChanges {\r\n  @Input() id = \"site-remote\";\r\n  @Input() selectedValue: any;\r\n  @Input() placeholder = \"\";\r\n  @Input() disabled = false;\r\n  @Input() enabledLoad = true;\r\n  @Input() landlordGuid = \"\";\r\n  @Output() change = new EventEmitter<any>();\r\n  @Output() ngModelChange = new EventEmitter<any>();\r\n  @Output() selectedValueName = new EventEmitter<any>();\r\n  @Output() selectedValueChange = new EventEmitter<any>();\r\n  @ViewChild(\"remote\") public dropdownObj: DropDownListComponent;\r\n  public data: DataManager;\r\n  public query: Query;\r\n  public remoteFields: Object = { text: \"name\", value: \"guid\" };\r\n\r\n  take = 100;\r\n  skip = 0;\r\n  public onOpen(args) {\r\n    // let start: number = this.take;\r\n    // let end: number = 5;\r\n    // let listElement: HTMLElement = (this.dropdownObj as any).list;\r\n    // listElement.addEventListener('scroll', () => {\r\n    //   console.log(listElement.scrollTop + listElement.offsetHeight,listElement.scrollHeight )\r\n    //   if ((listElement.scrollTop + listElement.offsetHeight) >= listElement.scrollHeight) {\r\n    //     let filterQuery = this.dropdownObj.query.clone();\r\n    //     this.data.executeQuery(filterQuery.skip(start).take(end)).then((event: any) => {\r\n    //       start = end;\r\n    //       end += 5;\r\n    //       // const unique = [...new Set(event.result.map(item => item.group))];\r\n    //       this.dropdownObj.addItem(event.result as { [key: string]: Object }[]);\r\n    //     }).catch((e: Object) => {\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n  public onFiltering: any = (e: any) => {\r\n    if (e.text === \"\") {\r\n      e.updateData(this.data);\r\n    } else {\r\n      const query = this.dropdownObj.query\r\n        .clone()\r\n        .search(e.text, [\"siteNo\", \"siteName\"]);\r\n      e.updateData(this.data, query);\r\n    }\r\n  };\r\n  public actionComplete(e: any): void {}\r\n  constructor(@Inject(\"Env\") private baseUrl, public trans: TranslateService) {}\r\n  ngOnInit() {}\r\n  loadData() {\r\n    this.query = new Query().where(\"status\", \"equal\", 1);\r\n    if (this.landlordGuid) {\r\n      this.query.where(\"landlordGuid\", \"equal\", this.landlordGuid);\r\n    }\r\n    this.data = new DataManager(\r\n      {\r\n        url: `${this.baseUrl}Site/GetDataDropdownlist`,\r\n        adaptor: new UrlAdaptor(),\r\n        crossDomain: true,\r\n      },\r\n      this.query\r\n    );\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // only run when property \"data\" changed\r\n    if (changes[\"selectedValue\"]) {\r\n      this.selectedValueChange.emit(this.selectedValue);\r\n    }\r\n\r\n    this.selectedValue = this.selectedValue || \"\";\r\n    if (changes[\"landlordGuid\"] && changes[\"landlordGuid\"].currentValue ) {\r\n      this.loadData();\r\n    } \r\n    if (changes[\"enabledLoad\"] && changes[\"enabledLoad\"].currentValue == true && !changes[\"landlordGuid\"]?.currentValue) {\r\n      this.loadData();\r\n    }\r\n  }\r\n  onChange(args) {\r\n    this.change.emit(args);\r\n    this.selectedValueName.emit(args.itemData.name || \"\");\r\n  }\r\n  onNgModelChange(value) {\r\n    this.ngModelChange.emit(value);\r\n    this.selectedValueChange.emit(value);\r\n  }\r\n}\r\n","import { BarnDropdownlistComponent } from '../lib/components/barn-dropdownlist/barn-dropdownlist.component';\r\nimport { AreaDropdownlistComponent } from '../lib/components/area-dropdownlist/area-dropdownlist.component';\r\nimport { PenMultiselectComponent } from '../lib/components/pen-multiselect/pen-multiselect.component';\r\nimport { FeedDropdownlistComponent } from '../lib/components/feed-dropdownlist/feed-dropdownlist.component';\r\nimport { FarmDropdownlistComponent } from '../lib/components/farm-dropdownlist/farm-dropdownlist.component';\r\nimport { PigDropdownlistComponent } from '../lib/components/pig-dropdownlist/pig-dropdownlist.component';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { ComboBoxModule, DropDownListModule, MultiSelectAllModule } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PenDropdownlistComponent } from '../lib/components/pen-dropdownlist/pen-dropdownlist.component';\r\nimport { CodeTypeDropdownlistComponent } from '../lib/components/code-type-dropdownlist/code-type-dropdownlist.component';\r\nimport { MaterialDropdownlistComponent } from '../lib/components/material-dropdownlist/material-dropdownlist.component';\r\nimport { MaskedtimetextboxComponent } from '../lib/components/maskedtimetextbox/maskedtimetextbox.component';\r\nimport { MaskedTextBoxModule, UploaderModule } from '@syncfusion/ej2-angular-inputs';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { DiseaseDropdownlistComponent } from '../lib/components/disease-dropdownlist/disease-dropdownlist.component';\r\nimport { MedicineDropdownlistComponent } from '../lib/components/medicine-dropdownlist/medicine-dropdownlist.component';\r\nimport { BomDropdownlistComponent } from '../lib/components/bom-dropdownlist/bom-dropdownlist.component';\r\nimport { CustomerDropdownlistComponent } from '../lib/components/customer-dropdownlist/customer-dropdownlist.component';\r\nimport { VectorControlDropdownlistComponent } from '../lib/components/vector-control-dropdownlist/vector-control-dropdownlist.component';\r\nimport { DisinfectionDropdownlistComponent } from '../lib/components/disinfection-dropdownlist/disinfection-dropdownlist.component';\r\nimport { RoomDropdownlistComponent } from '../lib/components/room-dropdownlist/room-dropdownlist.component';\r\nimport { CullingTankDropdownlistComponent } from '../lib/components/culling-tank-dropdownlist/culling-tank-dropdownlist.component';\r\nimport { PenDropdownlistModalComponent } from '../lib/components/pen-dropdownlist-modal/pen-dropdownlist-modal.component';\r\nimport { MyCheckboxComponent } from '../lib/components/my-checkbox/my-checkbox.component';\r\nimport { CheckBoxAllModule } from '@syncfusion/ej2-angular-buttons';\r\nimport { ThingDropdownlistComponent } from '../lib/components/thing-dropdownlist/thing-dropdownlist.component';\r\nimport { AccountDropdownlistComponent } from '../lib/components/account-dropdownlist/account-dropdownlist.component';\r\nimport { MultiPigGridComponent } from '../lib/components/multi-pig-grid/multi-pig-grid.component';\r\nimport { EditService, GridAllModule } from '@syncfusion/ej2-angular-grids';\r\nimport { Record2PenComponent } from '../lib/components/record2-pen/record2-pen.component';\r\nimport { Record2RoomComponent } from '../lib/components/record2-room/record2-room.component';\r\nimport { MakeorderDropdownlistComponent } from '../lib/components/makeorder-dropdownlist/makeorder-dropdownlist.component';\r\nimport { SelectedpigGridComponent } from '../lib/components/selectedpig-grid/selectedpig-grid.component';\r\nimport { TreatmentDropdownlistComponent } from '../lib/components/treatment-dropdownlist/treatment-dropdownlist.component';\r\nimport { DatePickerAllModule } from '@syncfusion/ej2-angular-calendars';\r\nimport { MakeorderDropdownlistToolbarComponent } from '../lib/components/makeorder-dropdownlist-toolbar/makeorder-dropdownlist-toolbar.component';\r\nimport { XaccountGroupComponent } from '../lib/components/xaccount-group/xaccount-group.component';\r\nimport { RecordsaleDropdownlistComponent } from '../lib/components/recordsale-dropdownlist/recordsale-dropdownlist.component';\r\nimport { DynamicGridComponent } from '../lib/components/dynamic-grid/dynamic-grid.component';\r\nimport { SemenDropdownlistComponent } from '../lib/components/semen-dropdownlist/semen-dropdownlist.component';\r\nimport { BreedingDropdownlistComponent } from '../lib/components/breeding-dropdownlist/breeding-dropdownlist.component';\r\nimport { BreedingDropdownlistToolbarComponent } from '../lib/components/breeding-dropdownlist-toolbar/breeding-dropdownlist-toolbar.component';\r\nimport { CustomerDropdownlistToolbarComponent } from '../lib/components/customer-dropdownlist-toolbar/customer-dropdownlist-toolbar.component';\r\nimport { UploadMultiDocumentComponent } from '../lib/components/upload-multi-document/upload-multi-document.component';\r\nimport { Breeding2SowinDropdownlistComponent } from '../lib/components/breeding2-sowin-dropdownlist/breeding2-sowin-dropdownlist.component';\r\nimport { AlertifyService, PigfarmCoreService } from '../services';\r\nimport { RecordSaleDropdownlistComponent, BoarTestingDropdownlistComponent, BomBoarDropdownlistComponent, BomGiltDropdownlistComponent, GiltinMakeorderDropdownlistComponent, UploadDocumentComponent } from './components';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GiltInDropdownlistComponent } from './components/gilt-in-dropdownlist/gilt-in-dropdownlist.component';\r\nimport { DeviceDropdownlistComponent } from './components/device-dropdownlist/device-dropdownlist.component';\r\nimport { SiteDropdownlistComponent } from './components/site-dropdownlist/site-dropdownlist.component';\r\nimport { PigfarmRichtexteditorComponent } from './components/pigfarm-richtexteditor/pigfarm-richtexteditor.component';\r\nimport { RichTextEditorAllModule } from '@syncfusion/ej2-angular-richtexteditor';\r\nimport { LandlordDropdownlistComponent } from './components/landlord-dropdownlist/landlord-dropdownlist.component';\r\nimport { BankDropdownlistComponent } from './components/bank-dropdownlist/bank-dropdownlist.component';\r\nimport { ParkinglotDropdownlistComponent } from './components/parkinglot-dropdownlist/parkinglot-dropdownlist.component';\r\nconst commponents = [\r\n  PigDropdownlistComponent,\r\n  PenDropdownlistComponent,\r\n  RoomDropdownlistComponent,\r\n  CodeTypeDropdownlistComponent,\r\n  FarmDropdownlistComponent,\r\n  FeedDropdownlistComponent,\r\n  MaterialDropdownlistComponent,\r\n  MaskedtimetextboxComponent,\r\n  DiseaseDropdownlistComponent,\r\n  MedicineDropdownlistComponent,\r\n  BomDropdownlistComponent,\r\n  CustomerDropdownlistComponent,\r\n  VectorControlDropdownlistComponent,\r\n  DisinfectionDropdownlistComponent,\r\n  CullingTankDropdownlistComponent,\r\n  PenDropdownlistModalComponent,\r\n  MyCheckboxComponent,\r\n  ThingDropdownlistComponent,\r\n  AccountDropdownlistComponent,\r\n  MultiPigGridComponent,\r\n  Record2RoomComponent,\r\n  Record2PenComponent,\r\n  PenMultiselectComponent,\r\n  MakeorderDropdownlistComponent,\r\n  AreaDropdownlistComponent,\r\n  BarnDropdownlistComponent,\r\n  SelectedpigGridComponent,\r\n  TreatmentDropdownlistComponent,\r\n  MakeorderDropdownlistToolbarComponent,\r\n  XaccountGroupComponent,\r\n  RecordsaleDropdownlistComponent,\r\n  SemenDropdownlistComponent,\r\n  BreedingDropdownlistComponent,\r\n  DynamicGridComponent,\r\n  BreedingDropdownlistToolbarComponent,\r\n  CustomerDropdownlistToolbarComponent,\r\n  UploadMultiDocumentComponent,\r\n  Breeding2SowinDropdownlistComponent,\r\n  UploadDocumentComponent,\r\n  GiltInDropdownlistComponent,\r\n  BoarTestingDropdownlistComponent,\r\n  GiltinMakeorderDropdownlistComponent,\r\n  BomBoarDropdownlistComponent,\r\n  BomGiltDropdownlistComponent,\r\n  RecordSaleDropdownlistComponent,\r\n  SiteDropdownlistComponent,\r\n  DeviceDropdownlistComponent,\r\n  PigfarmRichtexteditorComponent,\r\n  LandlordDropdownlistComponent,\r\n  BankDropdownlistComponent,\r\n  ParkinglotDropdownlistComponent\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ...commponents\r\n  ],\r\n  imports: [\r\n    DropDownListModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaskedTextBoxModule,\r\n    CheckBoxAllModule,\r\n    TranslateModule,\r\n    GridAllModule,\r\n    MultiSelectAllModule,\r\n    DatePickerAllModule,\r\n    ComboBoxModule,\r\n    UploaderModule,\r\n    RichTextEditorAllModule,\r\n\r\n  ],\r\n  exports: [\r\n    ...commponents,\r\n    \r\n  ],\r\n  providers: [\r\n    EditService,\r\n    PigfarmCoreService,\r\n    AlertifyService\r\n  ]\r\n})\r\nexport class PigfarmCoreModule { \r\n  static forRoot(environment: any): ModuleWithProviders<PigfarmCoreModule> {\r\n    return {\r\n      ngModule: PigfarmCoreModule,\r\n      providers: [\r\n        EditService,\r\n        PigfarmCoreService,\r\n        AlertifyService,\r\n        {provide: 'Env', useValue: environment}\r\n      ]\r\n    }\r\n  }\r\n}","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { MessageConstants } from \"../_core/_constants\";\r\nimport { UtilitiesService } from \"../services\";\r\n\r\nimport { BaseService } from \"./base.service\";\r\nimport { OperationResult } from \"../_core/models/application-user\";\r\n//#region\r\n// Copyright Henry Pham\r\n//#endregion\r\nexport interface ICURDService<T> {\r\n  getAll(): Observable<T[]>;\r\n  getById(id): Observable<T>;\r\n  //#endregion\r\n\r\n  //#region Action\r\n  insertWithFormData(model: T): Observable<OperationResult>;\r\n  updateWithFormData(model: T): Observable<OperationResult>;\r\n\r\n  add(model: T): Observable<OperationResult>;\r\n  update(model: T): Observable<OperationResult>;\r\n  delete(id: any): Observable<OperationResult>;\r\n  deleterange(ids: object[]): Observable<OperationResult>;\r\n  changeValue(message: MessageConstants);\r\n  getAudit(id): Observable<any>;\r\n}\r\n@Injectable()\r\nexport class CURDService<T> extends BaseService implements ICURDService<T> {\r\n  audits = [\"updateDate\", \"createDate\", \"deleteDate\", \"lastLoginDate\"];\r\n\r\n  protected base = this.env;\r\n\r\n  //#region Field\r\n  protected _sharedHeaders = new HttpHeaders();\r\n  //#endregion\r\n  //#region Ctor\r\n  constructor(\r\n    @Inject(\"Env\") protected env,\r\n    protected http: HttpClient,\r\n    @Inject(String) protected entity: string,\r\n    protected utilitiesService: UtilitiesService\r\n  ) {\r\n    super();\r\n    this._sharedHeaders = this._sharedHeaders.set(\r\n      \"Content-Type\",\r\n      \"application/json\"\r\n    );\r\n  }\r\n  //#endregion\r\n\r\n  //#region LoadData\r\n  getAll(): Observable<T[]> {\r\n    return this.http\r\n      .get<T[]>(`${this.base}${this.entity}/getall`, {})\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  getById(id): Observable<T> {\r\n    return this.http\r\n      .get<T>(`${this.base}${this.entity}/getById?id=${id}`, {})\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  //#endregion\r\n\r\n  //#region Action\r\n  insertWithFormData(model: T): Observable<OperationResult> {\r\n    const params = this.utilitiesService.ToFormData(model);\r\n    return this.http\r\n      .post<OperationResult>(`${this.base}${this.entity}/insert`, params)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  updateWithFormData(model: T): Observable<OperationResult> {\r\n    const params = this.utilitiesService.ToFormData(model);\r\n    return this.http\r\n      .put<OperationResult>(`${this.base}${this.entity}/update`, params)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  add(model: T): Observable<OperationResult> {\r\n    for (const audit of this.audits) {\r\n      let value2 = model[audit];\r\n      if (value2 instanceof Date) {\r\n        model[audit] = `${(value2 as Date).toLocaleDateString()} ${(\r\n          value2 as Date\r\n        ).toLocaleTimeString(\"en-GB\")}`;\r\n      }\r\n    }\r\n    return this.http.post<OperationResult>(\r\n      `${this.base}${this.entity}/add`,\r\n      model\r\n    );\r\n  }\r\n  addRange(model: T[]): Observable<OperationResult> {\r\n    for (const audit of this.audits) {\r\n      for (const ml of model) {\r\n        let value2 = model[audit];\r\n        if (value2 instanceof Date) {\r\n          model[audit] = `${(value2 as Date).toLocaleDateString()} ${(\r\n            value2 as Date\r\n          ).toLocaleTimeString(\"en-GB\")}`;\r\n        }\r\n      }\r\n    }\r\n    return this.http\r\n      .post<OperationResult>(`${this.base}${this.entity}/addRange`, model)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  updateRange(model: T[]): Observable<OperationResult> {\r\n    for (const audit of this.audits) {\r\n      for (const ml of model) {\r\n        let value2 = model[audit];\r\n        if (value2 instanceof Date) {\r\n          model[audit] = `${(value2 as Date).toLocaleDateString()} ${(\r\n            value2 as Date\r\n          ).toLocaleTimeString(\"en-GB\")}`;\r\n        }\r\n      }\r\n    }\r\n    return this.http\r\n      .put<OperationResult>(`${this.base}${this.entity}/updateRange`, model)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  update(model: T): Observable<OperationResult> {\r\n    for (const audit of this.audits) {\r\n      let value2 = model[audit];\r\n      if (value2 instanceof Date) {\r\n        model[audit] = `${(value2 as Date).toLocaleDateString()} ${(\r\n          value2 as Date\r\n        ).toLocaleTimeString(\"en-GB\")}`;\r\n      }\r\n    }\r\n    return this.http.put<OperationResult>(\r\n      `${this.base}${this.entity}/update`,\r\n      model\r\n    );\r\n  }\r\n  updatestatus(id: T): Observable<OperationResult> {\r\n    return this.http\r\n      .put<OperationResult>(\r\n        `${this.base}${this.entity}/updatestatus?id=${id}`,\r\n        {}\r\n      )\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  delete(id: any): Observable<OperationResult> {\r\n    return this.http.delete<OperationResult>(\r\n      `${this.base}${this.entity}/delete?id=${id}`\r\n    );\r\n  }\r\n  deleterange(ids: object[]): Observable<OperationResult> {\r\n    let query = \"\";\r\n    for (const id of ids) {\r\n      query += `id=${id}&`;\r\n    }\r\n    return this.http\r\n      .delete<OperationResult>(\r\n        `${this.base}${this.entity}/deleterange?${query}`\r\n      )\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  //#endregion\r\n\r\n  getAudit(id): Observable<T> {\r\n    return this.http.get<T>(`${this.base}${this.entity}/GetAudit?id=${id}`, {});\r\n  }\r\n\r\n  downloadODSFile(model) {\r\n    const params = this.utilitiesService.ToFormData(model);\r\n    return this.http.post(`${this.base}Files/ExcelExportToDOS`, params, {\r\n      responseType: \"blob\",\r\n      observe: \"response\",\r\n    });\r\n  }\r\n  downloadExcelFile(recordGuid) {\r\n    return this.http.get(`${this.base}Files/DownloadTemplateFile?recordGuid=${recordGuid}`, {\r\n      responseType: \"blob\",\r\n      observe: \"response\",\r\n    });\r\n  }\r\n  excelExportRecordSale(p: {pigs: any[]}) {\r\n    return this.http.post(`${this.base}Files/ExcelExportRecordSale`, p, {\r\n      responseType: \"blob\",\r\n      observe: \"response\",\r\n    });\r\n  }\r\n  downloadBlob(data, fileName, mimeType) {\r\n    var blob, url;\r\n    blob = new Blob([data], {\r\n      type: mimeType,\r\n    });\r\n    url = window.URL.createObjectURL(blob);\r\n    var a;\r\n    a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = fileName;\r\n    document.body.appendChild(a);\r\n    a.style = \"display: none\";\r\n    a.click();\r\n    a.remove();\r\n    setTimeout(function () {\r\n      return window.URL.revokeObjectURL(url);\r\n    }, 1000);\r\n  }\r\n}\r\n"],"mappings":"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"}