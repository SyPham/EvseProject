// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Evse.Models;

namespace Evse.Data
{
    public partial class EvseDataContext : DbContext
    {
        public EvseDataContext()
        {
        }

        public EvseDataContext(DbContextOptions<EvseDataContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AccountConfig> AccountConfigs { get; set; }
        public virtual DbSet<CodeHelp> CodeHelps { get; set; }
        public virtual DbSet<CodePermission> CodePermissions { get; set; }
        public virtual DbSet<CodeServiceType> CodeServiceTypes { get; set; }
        public virtual DbSet<CodeType> CodeTypes { get; set; }
        public virtual DbSet<Contract> Contracts { get; set; }
        public virtual DbSet<Device> Devices { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Engineer> Engineers { get; set; }
        public virtual DbSet<LandLord> LandLords { get; set; }
        public virtual DbSet<Member> Members { get; set; }
        public virtual DbSet<ParkingLot> ParkingLots { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<PaymentLog> PaymentLogs { get; set; }
        public virtual DbSet<RefreshToken> RefreshTokens { get; set; }
        public virtual DbSet<Site> Sites { get; set; }
        public virtual DbSet<SysMenu> SysMenus { get; set; }
        public virtual DbSet<SystemConfig> SystemConfigs { get; set; }
        public virtual DbSet<SystemLanguage> SystemLanguages { get; set; }
        public virtual DbSet<UserConfig> UserConfigs { get; set; }
        public virtual DbSet<XAccount> XAccounts { get; set; }
        public virtual DbSet<XAccountGroup> XAccountGroups { get; set; }
        public virtual DbSet<XAccountGroupPermission> XAccountGroupPermissions { get; set; }
        public virtual DbSet<XAccountPermission> XAccountPermissions { get; set; }
        public virtual DbSet<XAccountRole> XAccountRoles { get; set; }
        public virtual DbSet<XAccountSetting> XAccountSettings { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AccountConfig>(entity =>
            {
                entity.ToTable("Account_Config");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AccountGuid)
                    .HasColumnName("Account_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.ControllerName)
                    .HasColumnName("Controller_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ControllerValue)
                    .HasColumnName("Controller_Value")
                    .HasMaxLength(200);

                entity.Property(e => e.Page).HasMaxLength(200);
            });

            modelBuilder.Entity<CodeHelp>(entity =>
            {
                entity.ToTable("CODE_HELP");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CodeNameCn)
                    .HasColumnName("CODE_NAME_CN")
                    .HasMaxLength(255);

                entity.Property(e => e.CodeNameEn)
                    .HasColumnName("CODE_NAME_EN")
                    .HasMaxLength(255);

                entity.Property(e => e.CodeNameVn)
                    .HasColumnName("CODE_NAME_VN")
                    .HasMaxLength(255);

                entity.Property(e => e.CodeNo)
                    .HasColumnName("CODE_NO")
                    .HasMaxLength(25);

                entity.Property(e => e.CodeType)
                    .HasColumnName("CODE_TYPE")
                    .HasMaxLength(25);

                entity.Property(e => e.Comment)
                    .HasColumnName("COMMENT")
                    .HasColumnType("text");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FileName).HasMaxLength(255);

                entity.Property(e => e.Sort).HasColumnName("SORT");

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasMaxLength(1);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<CodePermission>(entity =>
            {
                entity.ToTable("CODE_Permission");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CodeName)
                    .HasColumnName("CODE_NAME")
                    .HasMaxLength(255);

                entity.Property(e => e.CodeNameCn)
                    .HasColumnName("CODE_NAME_CN")
                    .HasMaxLength(255);

                entity.Property(e => e.CodeNameEn)
                    .HasColumnName("CODE_NAME_EN")
                    .HasMaxLength(255);

                entity.Property(e => e.CodeNameVn)
                    .HasColumnName("CODE_NAME_VN")
                    .HasMaxLength(255);

                entity.Property(e => e.CodeNo)
                    .HasColumnName("CODE_NO")
                    .HasMaxLength(25);

                entity.Property(e => e.CodeType)
                    .HasColumnName("CODE_TYPE")
                    .HasMaxLength(25);

                entity.Property(e => e.Comment)
                    .HasColumnName("COMMENT")
                    .HasColumnType("text");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Sort).HasColumnName("SORT");

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasMaxLength(1);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<CodeServiceType>(entity =>
            {
                entity.ToTable("CODE_ServiceType");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CodeName)
                    .HasColumnName("CODE_NAME")
                    .HasMaxLength(255);

                entity.Property(e => e.CodeNo)
                    .HasColumnName("CODE_NO")
                    .HasMaxLength(25);

                entity.Property(e => e.Comment)
                    .HasColumnName("COMMENT")
                    .HasColumnType("text");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Sort).HasColumnName("SORT");

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasMaxLength(1);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<CodeType>(entity =>
            {
                entity.ToTable("CODE_TYPE");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CodeName)
                    .HasColumnName("CODE_NAME")
                    .HasMaxLength(255);

                entity.Property(e => e.CodeNameCn)
                    .HasColumnName("CODE_NAME_CN")
                    .HasMaxLength(255);

                entity.Property(e => e.CodeNameEn)
                    .HasColumnName("CODE_NAME_EN")
                    .HasMaxLength(255);

                entity.Property(e => e.CodeNameVn)
                    .HasColumnName("CODE_NAME_VN")
                    .HasMaxLength(255);

                entity.Property(e => e.CodeNo)
                    .HasColumnName("CODE_NO")
                    .HasMaxLength(25);

                entity.Property(e => e.CodeType1)
                    .HasColumnName("CODE_TYPE")
                    .HasMaxLength(25);

                entity.Property(e => e.Comment)
                    .HasColumnName("COMMENT")
                    .HasMaxLength(100);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Sort).HasColumnName("SORT");

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasMaxLength(1);

                entity.Property(e => e.StoreId).HasColumnName("Store_id");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.WebSiteId)
                    .HasColumnName("WebSite_ID")
                    .HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Contract>(entity =>
            {
                entity.ToTable("Contract");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Content)
                    .HasColumnName("CONTENT")
                    .HasColumnType("ntext");

                entity.Property(e => e.Guid)
                    .HasColumnName("GUID")
                    .HasMaxLength(40)
                    .HasDefaultValueSql("(newid())");
            });

            modelBuilder.Entity<Device>(entity =>
            {
                entity.ToTable("Device");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Comment)
                    .HasColumnName("COMMENT")
                    .HasColumnType("ntext");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DeleteBy)
                    .HasColumnName("DELETE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DeleteDate)
                    .HasColumnName("DELETE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DeviceLeftGuid)
                    .HasColumnName("Device_Left_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.DeviceLeftNo)
                    .HasColumnName("Device_Left_NO")
                    .HasMaxLength(200);

                entity.Property(e => e.DeviceName)
                    .HasColumnName("Device_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.DeviceNo)
                    .HasColumnName("Device_NO")
                    .HasMaxLength(100);

                entity.Property(e => e.DeviceRightGuid)
                    .HasColumnName("Device_Right_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.DeviceRightNo)
                    .HasColumnName("Device_Right_NO")
                    .HasMaxLength(20);

                entity.Property(e => e.DeviceType)
                    .HasColumnName("Device_Type")
                    .HasMaxLength(20);

                entity.Property(e => e.Guid)
                    .HasColumnName("GUID")
                    .HasMaxLength(40)
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.ParkingLotGuid)
                    .HasColumnName("ParkingLot_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.SiteGuid)
                    .HasColumnName("Site_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");
            });
            modelBuilder.Entity<Employee>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd().HasColumnType("numeric(18, 0)").HasColumnName("ID");

                entity.Property(e => e.Address).HasMaxLength(100);

                entity.Property(e => e.AddressDomicile).HasMaxLength(100);

                entity.Property(e => e.Comment).HasColumnType("ntext");

                entity.Property(e => e.ContactName).HasMaxLength(100);

                entity.Property(e => e.ContactTel).HasMaxLength(20);

                entity.Property(e => e.Dept).HasMaxLength(100);

                entity.Property(e => e.Email).HasMaxLength(100);

                entity.Property(e => e.Idcard)
                    .HasMaxLength(20)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Sex).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Level).HasMaxLength(20);

                entity.Property(e => e.Mobile).HasMaxLength(20);

                entity.Property(e => e.Name).HasMaxLength(10);

                entity.Property(e => e.NickName).HasMaxLength(20);

                entity.Property(e => e.No)
                    .HasMaxLength(20)
                    .HasColumnName("NO");
                entity.Property(e => e.FarmGuid)
                   .HasMaxLength(40)
                   .HasColumnName("Farm_GUID");
                entity.Property(e => e.Tel).HasMaxLength(20);

                entity.Property(e => e.Unit).HasMaxLength(100);
                entity.Property(e => e.Guid)
                   .HasMaxLength(40)
                   .HasColumnName("GUID")
                   .HasDefaultValueSql("(newid())");

                entity.Property(e => e.CreateBy)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("CreateBy");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CreateDate");

                entity.Property(e => e.Status)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("STATUS");

                entity.Property(e => e.UpdateBy)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UpdateBy");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("UpdateDate");
            });

            modelBuilder.Entity<Engineer>(entity =>
            {
                entity.ToTable("Engineer");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Comment)
                    .HasColumnName("COMMENT")
                    .HasColumnType("ntext");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DeleteBy)
                    .HasColumnName("DELETE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DeleteDate)
                    .HasColumnName("DELETE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.EndDate)
                    .HasColumnName("End_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.EngineerName)
                    .HasColumnName("Engineer_NAME")
                    .HasMaxLength(200);

                entity.Property(e => e.EngineerNo)
                    .HasColumnName("Engineer_NO")
                    .HasMaxLength(100);

                entity.Property(e => e.Guid)
                    .HasColumnName("GUID")
                    .HasMaxLength(40)
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.LandLordIdcard)
                    .HasColumnName("LandLord_IDCARD")
                    .HasMaxLength(200);

                entity.Property(e => e.Lastlogin)
                    .HasColumnName("lastlogin")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lastuse)
                    .HasColumnName("lastuse")
                    .HasColumnType("datetime");

                entity.Property(e => e.LicensePath)
                    .HasColumnName("License_Path")
                    .HasMaxLength(200);

                entity.Property(e => e.PhotoPath)
                    .HasColumnName("Photo_Path")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteGuid)
                    .HasColumnName("Site_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.StartDate)
                    .HasColumnName("Start_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Uid)
                    .HasColumnName("UID")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upwd)
                    .HasColumnName("UPWD")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<LandLord>(entity =>
            {
                entity.ToTable("LandLord");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Comment)
                    .HasColumnName("COMMENT")
                    .HasColumnType("ntext");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DeleteBy)
                    .HasColumnName("DELETE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DeleteDate)
                    .HasColumnName("DELETE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.EndDate)
                    .HasColumnName("End_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Guid)
                    .HasColumnName("GUID")
                    .HasMaxLength(40)
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.LandLordIdcard)
                    .HasColumnName("LandLord_IDCARD")
                    .HasMaxLength(200);

                entity.Property(e => e.LandLordName)
                    .HasColumnName("LandLord_NAME")
                    .HasMaxLength(200);

                entity.Property(e => e.LandLordNo)
                    .HasColumnName("LandLord_NO")
                    .HasMaxLength(100);

                entity.Property(e => e.Lastlogin)
                    .HasColumnName("lastlogin")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lastuse)
                    .HasColumnName("lastuse")
                    .HasColumnType("datetime");

                entity.Property(e => e.LicensePath)
                    .HasColumnName("License_Path")
                    .HasMaxLength(200);

                entity.Property(e => e.PhotoPath)
                    .HasColumnName("Photo_Path")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteGuid)
                    .HasColumnName("Site_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.StartDate)
                    .HasColumnName("Start_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Uid)
                    .HasColumnName("UID")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upwd)
                    .HasColumnName("UPWD")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Member>(entity =>
            {
                entity.ToTable("Member");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Comment)
                    .HasColumnName("COMMENT")
                    .HasColumnType("ntext");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DeleteBy)
                    .HasColumnName("DELETE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DeleteDate)
                    .HasColumnName("DELETE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.EndDate)
                    .HasColumnName("End_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Guid)
                    .HasColumnName("GUID")
                    .HasMaxLength(40)
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Lastlogin)
                    .HasColumnName("lastlogin")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lastuse)
                    .HasColumnName("lastuse")
                    .HasColumnType("datetime");

                entity.Property(e => e.MemberName)
                    .HasColumnName("Member_NAME")
                    .HasMaxLength(200);

                entity.Property(e => e.MemberNo)
                    .HasColumnName("Member_NO")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteGuid)
                    .HasColumnName("Site_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.StartDate)
                    .HasColumnName("Start_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Uid)
                    .HasColumnName("UID")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upwd)
                    .HasColumnName("UPWD")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ParkingLot>(entity =>
            {
                entity.ToTable("ParkingLot");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Comment)
                    .HasColumnName("COMMENT")
                    .HasColumnType("ntext");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DeleteBy)
                    .HasColumnName("DELETE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DeleteDate)
                    .HasColumnName("DELETE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DeviceGuid)
                    .HasColumnName("Device_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.DeviceLr)
                    .HasColumnName("Device_LR")
                    .HasMaxLength(20);

                entity.Property(e => e.Guid)
                    .HasColumnName("GUID")
                    .HasMaxLength(40)
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.ParkingLotName)
                    .HasColumnName("ParkingLot_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ParkingLotNo)
                    .HasColumnName("ParkingLot_NO")
                    .HasMaxLength(100);

                entity.Property(e => e.ParkingLotType)
                    .HasColumnName("ParkingLot_Type")
                    .HasMaxLength(20);

                entity.Property(e => e.SiteGuid)
                    .HasColumnName("Site_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<Payment>(entity =>
            {
                entity.ToTable("Payment");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Comment)
                    .HasColumnName("COMMENT")
                    .HasColumnType("ntext");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DeleteBy)
                    .HasColumnName("DELETE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DeleteDate)
                    .HasColumnName("DELETE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Guid)
                    .HasColumnName("GUID")
                    .HasMaxLength(40)
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.MemberGuid)
                    .HasColumnName("Member_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<PaymentLog>(entity =>
            {
                entity.ToTable("Payment_Log");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Comment)
                    .HasColumnName("COMMENT")
                    .HasColumnType("ntext");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DeleteBy)
                    .HasColumnName("DELETE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DeleteDate)
                    .HasColumnName("DELETE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Guid)
                    .HasColumnName("GUID")
                    .HasMaxLength(40)
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.MemberGuid)
                    .HasColumnName("Member_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.PaymentGuid)
                    .HasColumnName("Payment_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<RefreshToken>(entity =>
            {
                entity.HasKey(e => e.Token);

                entity.Property(e => e.AccountId).HasColumnName("AccountID");
            });

            modelBuilder.Entity<Site>(entity =>
            {
                entity.ToTable("Site");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Comment)
                    .HasColumnName("COMMENT")
                    .HasColumnType("ntext");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DeleteBy)
                    .HasColumnName("DELETE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DeleteDate)
                    .HasColumnName("DELETE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Guid)
                    .HasColumnName("GUID")
                    .HasMaxLength(40)
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.SiteAddress)
                    .HasColumnName("Site_Address")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteLocation)
                    .HasColumnName("Site_Location")
                    .HasMaxLength(20);

                entity.Property(e => e.SiteName)
                    .HasColumnName("Site_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.SiteNo)
                    .HasColumnName("Site_NO")
                    .HasMaxLength(100);

                entity.Property(e => e.SitePhoto)
                    .HasColumnName("Site_Photo")
                    .HasMaxLength(20);

                entity.Property(e => e.SitePrincipal)
                    .HasColumnName("Site_Principal")
                    .HasMaxLength(40);

                entity.Property(e => e.SiteTel)
                    .HasColumnName("Site_Tel")
                    .HasMaxLength(100);

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Type).HasMaxLength(20);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<SysMenu>(entity =>
            {
                entity.ToTable("SYS_MENU");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CancelFlag)
                    .HasColumnName("CANCEL_FLAG")
                    .HasMaxLength(1);

                entity.Property(e => e.ChartName)
                    .HasColumnName("Chart_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ChartNameCn)
                    .HasColumnName("Chart_NameCn")
                    .HasMaxLength(200);

                entity.Property(e => e.ChartNameEn)
                    .HasColumnName("Chart_NameEn")
                    .HasMaxLength(200);

                entity.Property(e => e.ChartNameVn)
                    .HasColumnName("Chart_NameVn")
                    .HasMaxLength(200);

                entity.Property(e => e.ChartUnit)
                    .HasColumnName("Chart_Unit")
                    .HasMaxLength(20);

                entity.Property(e => e.ChartXaxisName)
                    .HasColumnName("Chart_XAxisName")
                    .HasMaxLength(200);

                entity.Property(e => e.ChartXaxisNameCn)
                    .HasColumnName("Chart_XAxisNameCn")
                    .HasMaxLength(200);

                entity.Property(e => e.ChartXaxisNameEn)
                    .HasColumnName("Chart_XAxisNameEn")
                    .HasMaxLength(200);

                entity.Property(e => e.ChartXaxisNameVn)
                    .HasColumnName("Chart_XAxisNameVn")
                    .HasMaxLength(200);

                entity.Property(e => e.ChartYaxisName)
                    .HasColumnName("Chart_YAxisName")
                    .HasMaxLength(200);

                entity.Property(e => e.ChartYaxisNameCn)
                    .HasColumnName("Chart_YAxisNameCn")
                    .HasMaxLength(200);

                entity.Property(e => e.ChartYaxisNameEn)
                    .HasColumnName("Chart_YAxisNameEn")
                    .HasMaxLength(200);

                entity.Property(e => e.ChartYaxisNameVn)
                    .HasColumnName("Chart_YAxisNameVn")
                    .HasMaxLength(200);

                entity.Property(e => e.Comment)
                    .HasColumnName("COMMENT")
                    .HasColumnType("text");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.EndDate)
                    .HasColumnName("END_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FarmGgp)
                    .HasColumnName("Farm_GGP")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.FarmGp)
                    .HasColumnName("Farm_GP")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.FarmGrower)
                    .HasColumnName("Farm_GROWER")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.FarmNursery)
                    .HasColumnName("Farm_NURSERY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.FarmPmpf)
                    .HasColumnName("Farm_PMPF")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.FarmSemen)
                    .HasColumnName("Farm_SEMEN")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Guid)
                    .HasColumnName("GUID")
                    .HasMaxLength(40)
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.InFooter)
                    .HasColumnName("inFooter")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.InHeader)
                    .HasColumnName("inHeader")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.MenuIcon)
                    .HasColumnName("MenuICON")
                    .HasMaxLength(200);

                entity.Property(e => e.MenuIcon1)
                    .HasColumnName("MenuICON-1")
                    .HasMaxLength(200);

                entity.Property(e => e.MenuLink).HasMaxLength(200);

                entity.Property(e => e.MenuLinkEn)
                    .HasColumnName("MenuLink_EN")
                    .HasMaxLength(200);

                entity.Property(e => e.MenuName).HasMaxLength(200);

                entity.Property(e => e.MenuNameCn)
                    .HasColumnName("MenuName_CN")
                    .HasMaxLength(200);

                entity.Property(e => e.MenuNameEn)
                    .HasColumnName("MenuName_EN")
                    .HasMaxLength(200);

                entity.Property(e => e.MenuNameVn)
                    .HasColumnName("MenuName_VN")
                    .HasMaxLength(200);

                entity.Property(e => e.ReportType)
                    .HasColumnName("Report_Type")
                    .HasMaxLength(20);

                entity.Property(e => e.SortId)
                    .HasColumnName("SORT_ID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.StartDate)
                    .HasColumnName("START_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.StoredProceduresName).HasMaxLength(200);

                entity.Property(e => e.Type)
                    .HasColumnName("TYPE")
                    .HasMaxLength(20);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.UpperId)
                    .HasColumnName("UPPER_ID")
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.WebPageGuid)
                    .HasColumnName("WebPage_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.WebPageGuidEn)
                    .HasColumnName("WebPage_GUID_EN")
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<SystemConfig>(entity =>
            {
                entity.ToTable("SystemConfig");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AccountId)
                    .HasColumnName("AccountID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Comment).HasColumnType("ntext");

                entity.Property(e => e.CreateBy).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.DeleteBy).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DeleteDate).HasColumnType("datetime");

                entity.Property(e => e.Link).HasMaxLength(200);

                entity.Property(e => e.No)
                    .HasColumnName("NO")
                    .HasMaxLength(40);

                entity.Property(e => e.Sort).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Status).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Type).HasMaxLength(40);

                entity.Property(e => e.UpdateBy).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");

                entity.Property(e => e.Value).HasMaxLength(40);

                entity.Property(e => e.WebBuildingId)
                    .HasColumnName("WebBuildingID")
                    .HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<SystemLanguage>(entity =>
            {
                entity.ToTable("SystemLanguage");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Comment).HasMaxLength(100);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Sequence).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Slcn)
                    .HasColumnName("SLCN")
                    .HasMaxLength(500);

                entity.Property(e => e.Slen)
                    .HasColumnName("SLEN")
                    .HasMaxLength(500);

                entity.Property(e => e.Slkey)
                    .HasColumnName("SLKey")
                    .HasMaxLength(50);

                entity.Property(e => e.Slpage)
                    .HasColumnName("SLPage")
                    .HasMaxLength(50);

                entity.Property(e => e.Sltw)
                    .HasColumnName("SLTW")
                    .HasMaxLength(500);

                entity.Property(e => e.Sltype)
                    .HasColumnName("SLType")
                    .HasMaxLength(50);

                entity.Property(e => e.Slvn)
                    .HasColumnName("SLVN")
                    .HasMaxLength(500);

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.SystemMenuGuid).HasMaxLength(40);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<UserConfig>(entity =>
            {
                entity.ToTable("USER_CONFIG");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Comment)
                    .HasColumnName("COMMENT")
                    .HasColumnType("text");

                entity.Property(e => e.ConfigNo)
                    .HasColumnName("CONFIG_NO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ConfigType)
                    .HasColumnName("CONFIG_TYPE")
                    .HasMaxLength(25);

                entity.Property(e => e.ConfigValue)
                    .HasColumnName("CONFIG_VALUE")
                    .HasMaxLength(255);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrganizationId)
                    .HasColumnName("Organization_ID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.SiteId)
                    .HasColumnName("Site_ID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Sort).HasColumnName("SORT");

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasMaxLength(1);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<XAccount>(entity =>
            {
                entity.HasKey(e => e.AccountId)
                    .HasName("PK_Account_12");

                entity.ToTable("xAccount");

                entity.HasIndex(e => e.AccountNo)
                    .HasName("NonClusteredIndex-Account_NO")
                    .IsUnique();

                entity.HasIndex(e => e.Uid)
                    .HasName("NonClusteredIndex-Account_UID")
                    .IsUnique();

                entity.Property(e => e.AccountId)
                    .HasColumnName("Account_ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AccessTokenLineNotify).HasMaxLength(200);

                entity.Property(e => e.AccountAddress)
                    .HasColumnName("Account_ADDRESS")
                    .HasMaxLength(100);

                entity.Property(e => e.AccountBirthday)
                    .HasColumnName("Account_BIRTHDAY")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccountDomicileAddress)
                    .HasColumnName("Account_Domicile_ADDRESS")
                    .HasMaxLength(100);

                entity.Property(e => e.AccountEmail)
                    .HasColumnName("Account_EMAIL")
                    .HasMaxLength(100);

                entity.Property(e => e.AccountGroup)
                    .HasColumnName("Account_Group")
                    .HasMaxLength(100);

                entity.Property(e => e.AccountIdcard)
                    .HasColumnName("Account_IDCARD")
                    .HasMaxLength(20);

                entity.Property(e => e.AccountMobile)
                    .HasColumnName("Account_MOBILE")
                    .HasMaxLength(20);

                entity.Property(e => e.AccountName)
                    .HasColumnName("Account_NAME")
                    .HasMaxLength(20);

                entity.Property(e => e.AccountNickname)
                    .HasColumnName("Account_NICKNAME")
                    .HasMaxLength(20);

                entity.Property(e => e.AccountNo)
                    .HasColumnName("Account_NO")
                    .HasMaxLength(20);

                entity.Property(e => e.AccountOrganization)
                    .HasColumnName("Account_Organization")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.AccountRole)
                    .HasColumnName("Account_Role")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AccountSex)
                    .HasColumnName("Account_SEX")
                    .HasMaxLength(20);

                entity.Property(e => e.AccountSite)
                    .HasColumnName("Account_Site")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.AccountTel)
                    .HasColumnName("Account_TEL")
                    .HasMaxLength(20);

                entity.Property(e => e.AccountType)
                    .HasColumnName("Account_Type")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CancelFlag)
                    .HasColumnName("CANCEL_FLAG")
                    .HasMaxLength(1);

                entity.Property(e => e.ClinicId)
                    .HasColumnName("Clinic_ID")
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Comment).HasColumnType("text");

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.EmployeeGuid)
                    .HasColumnName("Employee_Guid")
                    .HasMaxLength(40);

                entity.Property(e => e.EndDate)
                    .HasColumnName("End_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ErrorLogin)
                    .HasColumnName("errorLogin")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.FarmGuid)
                    .HasColumnName("FARM_GUID")
                    .HasMaxLength(40)
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Guid)
                    .HasColumnName("GUID")
                    .HasMaxLength(40)
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.LastLoginDate)
                    .HasColumnName("LastLogin_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lastlogin)
                    .HasColumnName("lastlogin")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lastuse)
                    .HasColumnName("lastuse")
                    .HasColumnType("datetime");

                entity.Property(e => e.LocalLogin)
                    .HasColumnName("Local_Login")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PAccount)
                    .HasColumnName("P_Account")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PAdmin)
                    .HasColumnName("P_Admin")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PClinic)
                    .HasColumnName("P_Clinic")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PCodeType)
                    .HasColumnName("P_CodeType")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PEnquiry)
                    .HasColumnName("P_Enquiry")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PEnquiryResult)
                    .HasColumnName("P_Enquiry_Result")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PPatient)
                    .HasColumnName("P_Patient")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PPhotoComment)
                    .HasColumnName("P_PhotoComment")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PRequisitionConfirm)
                    .HasColumnName("P_RequisitionConfirm")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PageSizeSetting)
                    .HasColumnName("PageSize_Setting")
                    .HasMaxLength(10);

                entity.Property(e => e.PhotoPath)
                    .HasColumnName("Photo_Path")
                    .HasMaxLength(100);

                entity.Property(e => e.RoleId)
                    .HasColumnName("Role_ID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.SiteGuid2)
                    .HasColumnName("SITE_GUID2")
                    .HasMaxLength(40);

                entity.Property(e => e.SiteGuid3)
                    .HasColumnName("SITE_GUID3")
                    .HasMaxLength(40);

                entity.Property(e => e.StartDate)
                    .HasColumnName("Start_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Token)
                    .HasColumnName("token")
                    .HasMaxLength(100);

                entity.Property(e => e.TypeId)
                    .HasColumnName("Type_ID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Uid)
                    .HasColumnName("UID")
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upwd)
                    .IsRequired()
                    .HasColumnName("UPWD")
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<XAccountGroup>(entity =>
            {
                entity.ToTable("xAccount_Group");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CancelFlag)
                    .HasColumnName("CANCEL_FLAG")
                    .HasMaxLength(1);

                entity.Property(e => e.CreateBy)
                    .HasColumnName("CREATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CreateDate)
                    .HasColumnName("CREATE_DATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FarmGuid)
                    .HasColumnName("Farm_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.GroupName)
                    .HasColumnName("Group_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.GroupNo)
                    .HasColumnName("Group_NO")
                    .HasMaxLength(100);

                entity.Property(e => e.Guid)
                    .HasColumnName("GUID")
                    .HasMaxLength(40)
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Status)
                    .HasColumnName("STATUS")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateBy)
                    .HasColumnName("UPDATE_BY")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdateDate)
                    .HasColumnName("UPDATE_DATE")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<XAccountGroupPermission>(entity =>
            {
                entity.ToTable("xAccountGroup_Permission");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CodeNo)
                    .HasColumnName("CODE_NO")
                    .HasMaxLength(25);

                entity.Property(e => e.UpperGuid)
                    .HasColumnName("UPPER_GUID")
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<XAccountPermission>(entity =>
            {
                entity.ToTable("xAccount_Permission");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CodeNo)
                    .HasColumnName("CODE_NO")
                    .HasMaxLength(25);

                entity.Property(e => e.UpperGuid)
                    .HasColumnName("UPPER_GUID")
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<XAccountRole>(entity =>
            {
                entity.ToTable("xAccount_Role");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AccountGuid)
                    .HasColumnName("Account_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.CodeNo)
                    .HasColumnName("CODE_NO")
                    .HasMaxLength(25);
            });

            modelBuilder.Entity<XAccountSetting>(entity =>
            {
                entity.ToTable("xAccount_Setting");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AccountGuid)
                    .HasColumnName("Account_GUID")
                    .HasMaxLength(40);

                entity.Property(e => e.ControllerName)
                    .HasColumnName("Controller_Name")
                    .HasMaxLength(200);

                entity.Property(e => e.ControllerValue)
                    .HasColumnName("Controller_Value")
                    .HasMaxLength(200);

                entity.Property(e => e.Page).HasMaxLength(200);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}